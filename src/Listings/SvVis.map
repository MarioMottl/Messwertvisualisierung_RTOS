Component: ARM Compiler 5.06 update 5 (build 528) Tool: armlink [4d35e2]

==============================================================================

Section Cross References

    main.o(i._Z11main_threadPv) refers to svvis.o(i._ZN5SvVis5SvVis8recv_msgERNS_9message_tEj) for SvVis::SvVis::recv_msg(SvVis::message_t&, unsigned)
    main.o(i._Z11main_threadPv) refers to svvis.o(i._ZN5SvVis5SvVis8send_msgERNS_9message_tEj) for SvVis::SvVis::send_msg(SvVis::message_t&, unsigned)
    main.o(i._Z11main_threadPv) refers to main.o(.bss) for msg
    main.o(i._Z13send_tri_dataPv) refers to svvis.o(i._ZN5SvVis5SvVis8send_i16Ehsj) for SvVis::SvVis::send_i16(unsigned char, short, unsigned)
    main.o(i._Z13send_tri_dataPv) refers to rtx_delay.o(.text.osDelay) for osDelay
    main.o(i._Z13send_tri_dataPv) refers to main.o(.constdata) for data_tri
    main.o(i._Z13send_tri_dataPv) refers to main.o(.bss) for svvis
    main.o(i.__sti___8_main_cpp_usart1) refers to main.o(.bss) for usart1
    main.o(i.__sti___8_main_cpp_usart1) refers to main.o(.constdata__ZTVN6serial9interfaceE) for vtable for serial::interface
    main.o(i.__sti___8_main_cpp_usart1) refers to usart.o(.constdata__ZTVN5usart5usartE) for vtable for usart::usart
    main.o(i.main) refers to rtx_kernel.o(.text.osKernelInitialize) for osKernelInitialize
    main.o(i.main) refers to usart.o(i._ZN5usart5usart4initEP13USART_TypeDefjj) for usart::usart::init(USART_TypeDef*, unsigned, unsigned)
    main.o(i.main) refers to svvis.o(i._ZN5SvVis5SvVis4initERN6serial9interfaceEjj) for SvVis::SvVis::init(serial::interface&, unsigned, unsigned)
    main.o(i.main) refers to rtx_thread.o(.text.osThreadNew) for osThreadNew
    main.o(i.main) refers to rtx_kernel.o(.text.osKernelStart) for osKernelStart
    main.o(i.main) refers to main.o(.bss) for usart1
    main.o(i.main) refers to main.o(i._Z11main_threadPv) for main_thread(void*)
    main.o(i.main) refers to main.o(i._Z13send_tri_dataPv) for send_tri_data(void*)
    main.o(.ARM.exidx) refers to main.o(i._Z11main_threadPv) for i._Z11main_threadPv
    main.o(.ARM.exidx) refers to main.o(i._Z13send_tri_dataPv) for i._Z13send_tri_dataPv
    main.o(.ARM.exidx) refers to main.o(i.main) for i.main
    main.o(.ARM.exidx) refers to main.o(i.__sti___8_main_cpp_usart1) for i.__sti___8_main_cpp_usart1
    main.o(.init_array) refers to main.o(i.__sti___8_main_cpp_usart1) for __sti___8_main_cpp_usart1
    main.o(.init_array) refers to init_aeabi.o(.text) for __cpp_initialize__aeabi_
    ring_pipe.o(i._ZN9ring_pipe3popERhj) refers to rtx_semaphore.o(.text.osSemaphoreAcquire) for osSemaphoreAcquire
    ring_pipe.o(i._ZN9ring_pipe3popERhj) refers to ring_pipe.o(i._ZN9ring_pipe6accessEPh) for ring_pipe::access(unsigned char*)
    ring_pipe.o(i._ZN9ring_pipe3popERhj) refers to rtx_semaphore.o(.text.osSemaphoreRelease) for osSemaphoreRelease
    ring_pipe.o(i._ZN9ring_pipe3putEhj) refers to rtx_semaphore.o(.text.osSemaphoreAcquire) for osSemaphoreAcquire
    ring_pipe.o(i._ZN9ring_pipe3putEhj) refers to ring_pipe.o(i._ZN9ring_pipe6accessEPh) for ring_pipe::access(unsigned char*)
    ring_pipe.o(i._ZN9ring_pipe3putEhj) refers to rtx_semaphore.o(.text.osSemaphoreRelease) for osSemaphoreRelease
    ring_pipe.o(i._ZN9ring_pipe4initEj) refers to rtx_semaphore.o(.text.osSemaphoreNew) for osSemaphoreNew
    ring_pipe.o(i._ZN9ring_pipe4initEj) refers to rtx_mempool.o(.text.osMemoryPoolNew) for osMemoryPoolNew
    ring_pipe.o(i._ZN9ring_pipe4initEj) refers to rtx_mempool.o(.text.osMemoryPoolAlloc) for osMemoryPoolAlloc
    ring_pipe.o(i._ZN9ring_pipe8is_emptyEv) refers to rtx_semaphore.o(.text.osSemaphoreGetCount) for osSemaphoreGetCount
    ring_pipe.o(.ARM.exidx) refers to ring_pipe.o(i._ZN9ring_pipe6accessEPh) for i._ZN9ring_pipe6accessEPh
    ring_pipe.o(.ARM.exidx) refers to ring_pipe.o(i._ZN9ring_pipe4initEj) for i._ZN9ring_pipe4initEj
    ring_pipe.o(.ARM.exidx) refers to ring_pipe.o(i._ZN9ring_pipe10enaple_putEb) for i._ZN9ring_pipe10enaple_putEb
    ring_pipe.o(.ARM.exidx) refers to ring_pipe.o(i._ZN9ring_pipe3putEhj) for i._ZN9ring_pipe3putEhj
    ring_pipe.o(.ARM.exidx) refers to ring_pipe.o(i._ZN9ring_pipe3popERhj) for i._ZN9ring_pipe3popERhj
    ring_pipe.o(.ARM.exidx) refers to ring_pipe.o(i._ZN9ring_pipe8is_emptyEv) for i._ZN9ring_pipe8is_emptyEv
    usart.o(i.USART1_IRQHandler) refers to stm32f10x_usart.o(i.USART_ClearITPendingBit) for USART_ClearITPendingBit
    usart.o(i.USART1_IRQHandler) refers to stm32f10x_usart.o(i.USART_ReceiveData) for USART_ReceiveData
    usart.o(i.USART1_IRQHandler) refers to ring_pipe.o(i._ZN9ring_pipe3putEhj) for ring_pipe::put(unsigned char, unsigned)
    usart.o(i.USART1_IRQHandler) refers to usart.o(.bss) for usart::usart1::pipe
    usart.o(i.USART2_IRQHandler) refers to stm32f10x_usart.o(i.USART_ClearITPendingBit) for USART_ClearITPendingBit
    usart.o(i.USART2_IRQHandler) refers to stm32f10x_usart.o(i.USART_ReceiveData) for USART_ReceiveData
    usart.o(i.USART2_IRQHandler) refers to ring_pipe.o(i._ZN9ring_pipe3putEhj) for ring_pipe::put(unsigned char, unsigned)
    usart.o(i.USART2_IRQHandler) refers to usart.o(.bss) for usart::usart2::pipe
    usart.o(i.USART3_IRQHandler) refers to stm32f10x_usart.o(i.USART_ClearITPendingBit) for USART_ClearITPendingBit
    usart.o(i.USART3_IRQHandler) refers to stm32f10x_usart.o(i.USART_ReceiveData) for USART_ReceiveData
    usart.o(i.USART3_IRQHandler) refers to ring_pipe.o(i._ZN9ring_pipe3putEhj) for ring_pipe::put(unsigned char, unsigned)
    usart.o(i.USART3_IRQHandler) refers to usart.o(.bss) for usart::usart3::pipe
    usart.o(i._ZN5usart5usart3popERhj) refers to ring_pipe.o(i._ZN9ring_pipe3popERhj) for ring_pipe::pop(unsigned char&, unsigned)
    usart.o(i._ZN5usart5usart3putEhj) refers to rtx_thread.o(.text.osThreadYield) for osThreadYield
    usart.o(i._ZN5usart5usart3putEhj) refers to stm32f10x_usart.o(i.USART_GetFlagStatus) for USART_GetFlagStatus
    usart.o(i._ZN5usart5usart3putEhj) refers to stm32f10x_usart.o(i.USART_SendData) for USART_SendData
    usart.o(i._ZN5usart5usart4initEP13USART_TypeDefjj) refers to system_stm32f10x.o(i.SystemCoreClockUpdate) for SystemCoreClockUpdate
    usart.o(i._ZN5usart5usart4initEP13USART_TypeDefjj) refers to stm32f10x_rcc.o(i.RCC_APB2PeriphClockCmd) for RCC_APB2PeriphClockCmd
    usart.o(i._ZN5usart5usart4initEP13USART_TypeDefjj) refers to stm32f10x_gpio.o(i.GPIO_Init) for GPIO_Init
    usart.o(i._ZN5usart5usart4initEP13USART_TypeDefjj) refers to stm32f10x_rcc.o(i.RCC_APB1PeriphClockCmd) for RCC_APB1PeriphClockCmd
    usart.o(i._ZN5usart5usart4initEP13USART_TypeDefjj) refers to stm32f10x_usart.o(i.USART_DeInit) for USART_DeInit
    usart.o(i._ZN5usart5usart4initEP13USART_TypeDefjj) refers to stm32f10x_usart.o(i.USART_ClockInit) for USART_ClockInit
    usart.o(i._ZN5usart5usart4initEP13USART_TypeDefjj) refers to stm32f10x_usart.o(i.USART_Init) for USART_Init
    usart.o(i._ZN5usart5usart4initEP13USART_TypeDefjj) refers to misc.o(i.NVIC_Init) for NVIC_Init
    usart.o(i._ZN5usart5usart4initEP13USART_TypeDefjj) refers to stm32f10x_usart.o(i.USART_ITConfig) for USART_ITConfig
    usart.o(i._ZN5usart5usart4initEP13USART_TypeDefjj) refers to ring_pipe.o(i._ZN9ring_pipe4initEj) for ring_pipe::init(unsigned)
    usart.o(i._ZN5usart5usart4initEP13USART_TypeDefjj) refers to stm32f10x_usart.o(i.USART_Cmd) for USART_Cmd
    usart.o(i._ZN5usart5usart4initEP13USART_TypeDefjj) refers to usart.o(.data) for usart::usart1::handler
    usart.o(i._ZN5usart5usart4initEP13USART_TypeDefjj) refers to usart.o(.bss) for usart::usart1::pipe
    usart.o(.ARM.exidx) refers to usart.o(i.USART1_IRQHandler) for i.USART1_IRQHandler
    usart.o(.ARM.exidx) refers to usart.o(i.USART2_IRQHandler) for i.USART2_IRQHandler
    usart.o(.ARM.exidx) refers to usart.o(i.USART3_IRQHandler) for i.USART3_IRQHandler
    usart.o(.ARM.exidx) refers to usart.o(i._ZN5usart5usart4initEP13USART_TypeDefjj) for i._ZN5usart5usart4initEP13USART_TypeDefjj
    usart.o(.ARM.exidx) refers to usart.o(i._ZN5usart5usart3popERhj) for i._ZN5usart5usart3popERhj
    usart.o(.ARM.exidx) refers to usart.o(i._ZN5usart5usart3putEhj) for i._ZN5usart5usart3putEhj
    usart.o(.ARM.exidx) refers to usart.o(i._ZN5usart5usart5flushEv) for i._ZN5usart5usart5flushEv
    usart.o(.ARM.exidx) refers to usart.o(i._ZN5usart5usart12put_blockingEPKvj) for i._ZN5usart5usart12put_blockingEPKvj
    svvis_threads.o(i._ZN5SvVis5SvVis9func_recvEPv) refers to svvis_threads.o(i._ZN5SvVis8chid2lenEh) for SvVis::chid2len(unsigned char)
    svvis_threads.o(i._ZN5SvVis5SvVis9func_recvEPv) refers to rt_memclr_w.o(.text) for __aeabi_memclr4
    svvis_threads.o(i._ZN5SvVis5SvVis9func_recvEPv) refers to rtx_msgqueue.o(.text.osMessageQueuePut) for osMessageQueuePut
    svvis_threads.o(i._ZN5SvVis5SvVis9func_recvEPv) refers to rtx_evflags.o(.text.osEventFlagsClear) for osEventFlagsClear
    svvis_threads.o(i._ZN5SvVis5SvVis9func_recvEPv) refers to rtx_evflags.o(.text.osEventFlagsSet) for osEventFlagsSet
    svvis_threads.o(i._ZN5SvVis5SvVis9func_sendEPv) refers to rtx_msgqueue.o(.text.osMessageQueueGet) for osMessageQueueGet
    svvis_threads.o(i._ZN5SvVis5SvVis9func_sendEPv) refers to rtx_evflags.o(.text.osEventFlagsWait) for osEventFlagsWait
    svvis_threads.o(i._ZN5SvVis5SvVis9func_sendEPv) refers to rtx_msgqueue.o(.text.osMessageQueueGetCount) for osMessageQueueGetCount
    svvis_threads.o(i._ZN5SvVis5SvVis9func_sendEPv) refers to rtx_evflags.o(.text.osEventFlagsSet) for osEventFlagsSet
    svvis_threads.o(.ARM.exidx) refers to svvis_threads.o(i._ZN5SvVis5SvVis9func_sendEPv) for i._ZN5SvVis5SvVis9func_sendEPv
    svvis_threads.o(.ARM.exidx) refers to svvis_threads.o(i._ZN5SvVis8chid2lenEh) for i._ZN5SvVis8chid2lenEh
    svvis_threads.o(.ARM.exidx) refers to svvis_threads.o(i._ZN5SvVis5SvVis9func_recvEPv) for i._ZN5SvVis5SvVis9func_recvEPv
    svvis.o(i._ZN5SvVis5SvVis10send_floatEhfj) refers to svvis.o(i._ZN5SvVis5SvVis8send_msgERNS_9message_tEj) for SvVis::SvVis::send_msg(SvVis::message_t&, unsigned)
    svvis.o(i._ZN5SvVis5SvVis12max_priorityEv) refers to rtx_msgqueue.o(.text.osMessageQueueGetCapacity) for osMessageQueueGetCapacity
    svvis.o(i._ZN5SvVis5SvVis4initERN6serial9interfaceEjj) refers to rtx_msgqueue.o(.text.osMessageQueueNew) for osMessageQueueNew
    svvis.o(i._ZN5SvVis5SvVis4initERN6serial9interfaceEjj) refers to rtx_thread.o(.text.osThreadNew) for osThreadNew
    svvis.o(i._ZN5SvVis5SvVis4initERN6serial9interfaceEjj) refers to rtx_evflags.o(.text.osEventFlagsNew) for osEventFlagsNew
    svvis.o(i._ZN5SvVis5SvVis4initERN6serial9interfaceEjj) refers to rtx_evflags.o(.text.osEventFlagsSet) for osEventFlagsSet
    svvis.o(i._ZN5SvVis5SvVis4initERN6serial9interfaceEjj) refers to rtx_evflags.o(.text.osEventFlagsClear) for osEventFlagsClear
    svvis.o(i._ZN5SvVis5SvVis4initERN6serial9interfaceEjj) refers to svvis_threads.o(i._ZN5SvVis5SvVis9func_sendEPv) for SvVis::SvVis::func_send(void*)
    svvis.o(i._ZN5SvVis5SvVis4initERN6serial9interfaceEjj) refers to svvis_threads.o(i._ZN5SvVis5SvVis9func_recvEPv) for SvVis::SvVis::func_recv(void*)
    svvis.o(i._ZN5SvVis5SvVis5flushEv) refers to rtx_evflags.o(.text.osEventFlagsClear) for osEventFlagsClear
    svvis.o(i._ZN5SvVis5SvVis5flushEv) refers to rtx_evflags.o(.text.osEventFlagsWait) for osEventFlagsWait
    svvis.o(i._ZN5SvVis5SvVis5flushEv) refers to rtx_evflags.o(.text.osEventFlagsSet) for osEventFlagsSet
    svvis.o(i._ZN5SvVis5SvVis8recv_msgERNS_9message_tEj) refers to rtx_msgqueue.o(.text.osMessageQueueGet) for osMessageQueueGet
    svvis.o(i._ZN5SvVis5SvVis8send_i16Ehsj) refers to svvis.o(i._ZN5SvVis5SvVis8send_msgERNS_9message_tEj) for SvVis::SvVis::send_msg(SvVis::message_t&, unsigned)
    svvis.o(i._ZN5SvVis5SvVis8send_msgERNS_9message_tEj) refers to rtx_evflags.o(.text.osEventFlagsWait) for osEventFlagsWait
    svvis.o(i._ZN5SvVis5SvVis8send_msgERNS_9message_tEj) refers to rtx_evflags.o(.text.osEventFlagsClear) for osEventFlagsClear
    svvis.o(i._ZN5SvVis5SvVis8send_msgERNS_9message_tEj) refers to rtx_msgqueue.o(.text.osMessageQueuePut) for osMessageQueuePut
    svvis.o(i._ZN5SvVis5SvVis8send_strEPKcj) refers to strlen.o(.text) for strlen
    svvis.o(i._ZN5SvVis5SvVis8send_strEPKcj) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    svvis.o(i._ZN5SvVis5SvVis8send_strEPKcj) refers to svvis.o(i._ZN5SvVis5SvVis8send_msgERNS_9message_tEj) for SvVis::SvVis::send_msg(SvVis::message_t&, unsigned)
    svvis.o(i._ZN5SvVis5SvVis9availableEv) refers to rtx_msgqueue.o(.text.osMessageQueueGetCount) for osMessageQueueGetCount
    svvis.o(.ARM.exidx) refers to svvis.o(i._ZN5SvVis5SvVis4initERN6serial9interfaceEjj) for i._ZN5SvVis5SvVis4initERN6serial9interfaceEjj
    svvis.o(.ARM.exidx) refers to svvis.o(i._ZN5SvVis5SvVis12max_priorityEv) for i._ZN5SvVis5SvVis12max_priorityEv
    svvis.o(.ARM.exidx) refers to svvis.o(i._ZN5SvVis5SvVis8send_msgERNS_9message_tEj) for i._ZN5SvVis5SvVis8send_msgERNS_9message_tEj
    svvis.o(.ARM.exidx) refers to svvis.o(i._ZN5SvVis5SvVis8send_strEPKcj) for i._ZN5SvVis5SvVis8send_strEPKcj
    svvis.o(.ARM.exidx) refers to svvis.o(i._ZN5SvVis5SvVis8send_i16Ehsj) for i._ZN5SvVis5SvVis8send_i16Ehsj
    svvis.o(.ARM.exidx) refers to svvis.o(i._ZN5SvVis5SvVis10send_floatEhfj) for i._ZN5SvVis5SvVis10send_floatEhfj
    svvis.o(.ARM.exidx) refers to svvis.o(i._ZN5SvVis5SvVis5flushEv) for i._ZN5SvVis5SvVis5flushEv
    svvis.o(.ARM.exidx) refers to svvis.o(i._ZN5SvVis5SvVis9availableEv) for i._ZN5SvVis5SvVis9availableEv
    svvis.o(.ARM.exidx) refers to svvis.o(i._ZN5SvVis5SvVis8recv_msgERNS_9message_tEj) for i._ZN5SvVis5SvVis8recv_msgERNS_9message_tEj
    rtx_lib.o(i.__user_perthread_libspace) refers to rtx_lib.o(i.os_kernel_is_active) for os_kernel_is_active
    rtx_lib.o(i.__user_perthread_libspace) refers to rtx_thread.o(.text.osThreadGetId) for osThreadGetId
    rtx_lib.o(i.__user_perthread_libspace) refers to rtx_config.o(i.osRtxErrorNotify) for osRtxErrorNotify
    rtx_lib.o(i.__user_perthread_libspace) refers to rtx_lib.o(.bss.os) for os_libspace
    rtx_lib.o(i._mutex_acquire) refers to rtx_lib.o(i.os_kernel_is_active) for os_kernel_is_active
    rtx_lib.o(i._mutex_acquire) refers to rtx_mutex.o(.text.osMutexAcquire) for osMutexAcquire
    rtx_lib.o(i._mutex_free) refers to rtx_mutex.o(.text.osMutexDelete) for osMutexDelete
    rtx_lib.o(i._mutex_initialize) refers to rtx_mutex.o(.text.osMutexNew) for osMutexNew
    rtx_lib.o(i._mutex_initialize) refers to rtx_config.o(i.osRtxErrorNotify) for osRtxErrorNotify
    rtx_lib.o(i._mutex_release) refers to rtx_lib.o(i.os_kernel_is_active) for os_kernel_is_active
    rtx_lib.o(i._mutex_release) refers to rtx_mutex.o(.text.osMutexRelease) for osMutexRelease
    rtx_lib.o(i._platform_post_stackheap_init) refers to rtx_kernel.o(.text.osKernelInitialize) for osKernelInitialize
    rtx_lib.o(i.os_kernel_is_active) refers to rtx_kernel.o(.text.osKernelGetState) for osKernelGetState
    rtx_lib.o(i.os_kernel_is_active) refers to rtx_lib.o(.data) for os_kernel_active
    rtx_lib.o(.constdata) refers to rtx_lib.o(.bss.os.thread.cb) for os_idle_thread_cb
    rtx_lib.o(.constdata) refers to rtx_lib.o(.bss.os.thread.stack) for os_idle_thread_stack
    rtx_lib.o(.constdata) refers to rtx_lib.o(.bss.os.msgqueue.cb) for os_timer_mq_cb
    rtx_lib.o(.constdata) refers to rtx_lib.o(.bss.os.msgqueue.mem) for os_timer_mq_data
    rtx_lib.o(.data) refers to irq_cm3.o(.constdata) for irqRtxLib
    rtx_lib.o(.rodata) refers to rtx_lib.o(.bss.os) for os_isr_queue
    rtx_lib.o(.rodata) refers to rtx_lib.o(.constdata) for os_idle_thread_attr
    stm32f10x_gpio.o(i.GPIO_AFIODeInit) refers to stm32f10x_rcc.o(i.RCC_APB2PeriphResetCmd) for RCC_APB2PeriphResetCmd
    stm32f10x_gpio.o(i.GPIO_DeInit) refers to stm32f10x_rcc.o(i.RCC_APB2PeriphResetCmd) for RCC_APB2PeriphResetCmd
    stm32f10x_rcc.o(i.RCC_GetClocksFreq) refers to stm32f10x_rcc.o(.data) for APBAHBPrescTable
    stm32f10x_rcc.o(i.RCC_WaitForHSEStartUp) refers to stm32f10x_rcc.o(i.RCC_GetFlagStatus) for RCC_GetFlagStatus
    stm32f10x_usart.o(i.USART_DeInit) refers to stm32f10x_rcc.o(i.RCC_APB2PeriphResetCmd) for RCC_APB2PeriphResetCmd
    stm32f10x_usart.o(i.USART_DeInit) refers to stm32f10x_rcc.o(i.RCC_APB1PeriphResetCmd) for RCC_APB1PeriphResetCmd
    stm32f10x_usart.o(i.USART_Init) refers to stm32f10x_rcc.o(i.RCC_GetClocksFreq) for RCC_GetClocksFreq
    startup_stm32f10x_md.o(STACK) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32f10x_md.o(HEAP) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32f10x_md.o(RESET) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32f10x_md.o(RESET) refers to startup_stm32f10x_md.o(STACK) for __initial_sp
    startup_stm32f10x_md.o(RESET) refers to startup_stm32f10x_md.o(.text) for Reset_Handler
    startup_stm32f10x_md.o(RESET) refers to irq_cm3.o(.text) for SVC_Handler
    startup_stm32f10x_md.o(RESET) refers to usart.o(i.USART1_IRQHandler) for USART1_IRQHandler
    startup_stm32f10x_md.o(RESET) refers to usart.o(i.USART2_IRQHandler) for USART2_IRQHandler
    startup_stm32f10x_md.o(RESET) refers to usart.o(i.USART3_IRQHandler) for USART3_IRQHandler
    startup_stm32f10x_md.o(.text) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32f10x_md.o(.text) refers to system_stm32f10x.o(i.SystemInit) for SystemInit
    startup_stm32f10x_md.o(.text) refers to __main.o(!!!main) for __main
    startup_stm32f10x_md.o(.text) refers to startup_stm32f10x_md.o(HEAP) for Heap_Mem
    startup_stm32f10x_md.o(.text) refers to startup_stm32f10x_md.o(STACK) for Stack_Mem
    system_stm32f10x.o(i.SetSysClock) refers to system_stm32f10x.o(i.SetSysClockTo72) for SetSysClockTo72
    system_stm32f10x.o(i.SystemCoreClockUpdate) refers to system_stm32f10x.o(.data) for SystemCoreClock
    system_stm32f10x.o(i.SystemInit) refers to system_stm32f10x.o(i.SetSysClock) for SetSysClock
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rt_memclr_w.o(.text) for __aeabi_memclr8
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_memory.o(.text.osRtxMemoryInit) for osRtxMemoryInit
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_mempool.o(.text.osRtxMemoryPoolInit) for osRtxMemoryPoolInit
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelInitialize) refers to rtx_kernel.o(.text.svcRtxKernelInitialize) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetInfo) refers to rtx_kernel.o(.rodata.str1.4) for .L.str
    rtx_kernel.o(.text.svcRtxKernelGetInfo) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetInfo) refers to rtx_kernel.o(.text.svcRtxKernelGetInfo) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetState) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetState) refers to rtx_kernel.o(.text.svcRtxKernelGetState) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_config.o(i.osRtxIdleThread) for osRtxIdleThread
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_thread.o(.text.svcRtxThreadNew) for svcRtxThreadNew
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_kernel.o(.text.svcRtxKernelStart) refers to system_stm32f10x.o(.data) for SystemCoreClock
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_system.o(.text.osRtxSysTimerSetup) for osRtxSysTimerSetup
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_system.o(.text.osRtxSysTimerEnable) for osRtxSysTimerEnable
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelStart) refers to rtx_kernel.o(.text.svcRtxKernelStart) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelLock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelLock) refers to rtx_kernel.o(.text.svcRtxKernelLock) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelUnlock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelUnlock) refers to rtx_kernel.o(.text.svcRtxKernelUnlock) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelRestoreLock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelRestoreLock) refers to rtx_kernel.o(.text.svcRtxKernelRestoreLock) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelSuspend) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.svcRtxKernelSuspend) refers to rtx_system.o(.text.osRtxSysTimerDisable) for osRtxSysTimerDisable
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelSuspend) refers to rtx_kernel.o(.text.svcRtxKernelSuspend) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelResume) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.svcRtxKernelResume) refers to rtx_thread.o(.text.osRtxThreadDelayTick) for osRtxThreadDelayTick
    rtx_kernel.o(.text.svcRtxKernelResume) refers to rtx_timer.o(.text.osRtxTimerTick) for osRtxTimerTick
    rtx_kernel.o(.text.svcRtxKernelResume) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_kernel.o(.text.svcRtxKernelResume) refers to rtx_system.o(.text.osRtxSysTimerEnable) for osRtxSysTimerEnable
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelResume) refers to rtx_kernel.o(.text.svcRtxKernelResume) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetTickCount) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetTickCount) refers to rtx_kernel.o(.text.svcRtxKernelGetTickCount) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetTickFreq) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetTickFreq) refers to rtx_kernel.o(.text.svcRtxKernelGetTickFreq) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) refers to rtx_system.o(.text.osRtxSysTimerGetCount) for osRtxSysTimerGetCount
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetSysTimerCount) refers to rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerFreq) refers to rtx_system.o(.text.osRtxSysTimerGetFreq) for osRtxSysTimerGetFreq
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetSysTimerFreq) refers to rtx_kernel.o(.text.svcRtxKernelGetSysTimerFreq) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelInitialize) refers to rtx_kernel.o(.text.svcRtxKernelInitialize) for svcRtxKernelInitialize
    rtx_kernel.o(.ARM.exidx.text.osKernelInitialize) refers to rtx_kernel.o(.text.osKernelInitialize) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetInfo) refers to rtx_kernel.o(.rodata.str1.4) for .L.str
    rtx_kernel.o(.text.osKernelGetInfo) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    rtx_kernel.o(.text.osKernelGetInfo) refers to rtx_kernel.o(.text.svcRtxKernelGetInfo) for svcRtxKernelGetInfo
    rtx_kernel.o(.ARM.exidx.text.osKernelGetInfo) refers to rtx_kernel.o(.text.osKernelGetInfo) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetState) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.osKernelGetState) refers to rtx_kernel.o(.text.svcRtxKernelGetState) for svcRtxKernelGetState
    rtx_kernel.o(.ARM.exidx.text.osKernelGetState) refers to rtx_kernel.o(.text.osKernelGetState) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelStart) refers to rtx_kernel.o(.text.svcRtxKernelStart) for svcRtxKernelStart
    rtx_kernel.o(.ARM.exidx.text.osKernelStart) refers to rtx_kernel.o(.text.osKernelStart) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelLock) refers to rtx_kernel.o(.text.svcRtxKernelLock) for svcRtxKernelLock
    rtx_kernel.o(.ARM.exidx.text.osKernelLock) refers to rtx_kernel.o(.text.osKernelLock) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelUnlock) refers to rtx_kernel.o(.text.svcRtxKernelUnlock) for svcRtxKernelUnlock
    rtx_kernel.o(.ARM.exidx.text.osKernelUnlock) refers to rtx_kernel.o(.text.osKernelUnlock) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelRestoreLock) refers to rtx_kernel.o(.text.svcRtxKernelRestoreLock) for svcRtxKernelRestoreLock
    rtx_kernel.o(.ARM.exidx.text.osKernelRestoreLock) refers to rtx_kernel.o(.text.osKernelRestoreLock) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelSuspend) refers to rtx_kernel.o(.text.svcRtxKernelSuspend) for svcRtxKernelSuspend
    rtx_kernel.o(.ARM.exidx.text.osKernelSuspend) refers to rtx_kernel.o(.text.osKernelSuspend) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelResume) refers to rtx_kernel.o(.text.svcRtxKernelResume) for svcRtxKernelResume
    rtx_kernel.o(.ARM.exidx.text.osKernelResume) refers to rtx_kernel.o(.text.osKernelResume) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetTickCount) refers to rtx_kernel.o(.text.svcRtxKernelGetTickCount) for svcRtxKernelGetTickCount
    rtx_kernel.o(.ARM.exidx.text.osKernelGetTickCount) refers to rtx_kernel.o(.text.osKernelGetTickCount) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetTickFreq) refers to rtx_kernel.o(.text.svcRtxKernelGetTickFreq) for svcRtxKernelGetTickFreq
    rtx_kernel.o(.ARM.exidx.text.osKernelGetTickFreq) refers to rtx_kernel.o(.text.osKernelGetTickFreq) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetSysTimerCount) refers to rtx_system.o(.text.osRtxSysTimerGetCount) for osRtxSysTimerGetCount
    rtx_kernel.o(.text.osKernelGetSysTimerCount) refers to rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) for svcRtxKernelGetSysTimerCount
    rtx_kernel.o(.ARM.exidx.text.osKernelGetSysTimerCount) refers to rtx_kernel.o(.text.osKernelGetSysTimerCount) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetSysTimerFreq) refers to rtx_system.o(.text.osRtxSysTimerGetFreq) for osRtxSysTimerGetFreq
    rtx_kernel.o(.text.osKernelGetSysTimerFreq) refers to rtx_kernel.o(.text.svcRtxKernelGetSysTimerFreq) for svcRtxKernelGetSysTimerFreq
    rtx_kernel.o(.ARM.exidx.text.osKernelGetSysTimerFreq) refers to rtx_kernel.o(.text.osKernelGetSysTimerFreq) for [Anonymous Symbol]
    rtx_kernel.o(.data.os) refers to rtx_kernel.o(.rodata.str1.4) for .L.str
    rtx_kernel.o(.data.irqRtxLibRef) refers to irq_cm3.o(.constdata) for irqRtxLib
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListPut) refers to rtx_thread.o(.text.osRtxThreadListPut) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListGet) refers to rtx_thread.o(.text.osRtxThreadListGet) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListRoot) refers to rtx_thread.o(.text.osRtxThreadListRoot) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListSort) refers to rtx_thread.o(.text.osRtxThreadListSort) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListRemove) refers to rtx_thread.o(.text.osRtxThreadListRemove) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListUnlink) refers to rtx_thread.o(.text.osRtxThreadListUnlink) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadReadyPut) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadReadyPut) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadDelayInsert) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayInsert) refers to rtx_thread.o(.text.osRtxThreadDelayInsert) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadDelayRemove) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayRemove) refers to rtx_thread.o(.text.osRtxThreadDelayRemove) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayTick) refers to rtx_thread.o(.text.osRtxThreadDelayTick) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadRegPtr) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadBlock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadBlock) refers to rtx_thread.o(.text.osRtxThreadBlock) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadSwitch) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.osRtxThreadSwitch) refers to rtx_thread.o(.text.osRtxThreadStackCheck) for osRtxThreadStackCheck
    rtx_thread.o(.ARM.exidx.text.osRtxThreadSwitch) refers to rtx_thread.o(.text.osRtxThreadSwitch) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadStackCheck) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.osRtxThreadStackCheck) refers to rtx_config.o(i.osRtxErrorNotify) for osRtxErrorNotify
    rtx_thread.o(.ARM.exidx.text.osRtxThreadStackCheck) refers to rtx_thread.o(.text.osRtxThreadStackCheck) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_thread.o(.text.osRtxThreadStackCheck) for osRtxThreadStackCheck
    rtx_thread.o(.ARM.exidx.text.osRtxThreadDispatch) refers to rtx_thread.o(.text.osRtxThreadDispatch) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadWaitExit) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.osRtxThreadWaitExit) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.ARM.exidx.text.osRtxThreadWaitExit) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadWaitEnter) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.osRtxThreadWaitEnter) refers to rtx_thread.o(.text.osRtxThreadStackCheck) for osRtxThreadStackCheck
    rtx_thread.o(.ARM.exidx.text.osRtxThreadWaitEnter) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadPostProcess) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadPostProcess) refers to rtx_thread.o(.text.osRtxThreadPostProcess) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_thread.o(.text.svcRtxThreadNew) refers to aeabi_memset4.o(.text) for __aeabi_memset4
    rtx_thread.o(.text.svcRtxThreadNew) refers to rt_memclr_w.o(.text) for __aeabi_memclr4
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_thread.o(.text.osThreadExit) for osThreadExit
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_thread.o(.text.osRtxThreadPostProcess) for osRtxThreadPostProcess
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadNew) refers to rtx_thread.o(.text.svcRtxThreadNew) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadExit) refers to rtx_thread.o(.text.svcRtxThreadExit) for svcRtxThreadExit
    rtx_thread.o(.ARM.exidx.text.osThreadExit) refers to rtx_thread.o(.text.osThreadExit) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetName) refers to rtx_thread.o(.text.svcRtxThreadGetName) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetId) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetId) refers to rtx_thread.o(.text.svcRtxThreadGetId) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetState) refers to rtx_thread.o(.text.svcRtxThreadGetState) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetStackSize) refers to rtx_thread.o(.text.svcRtxThreadGetStackSize) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetStackSpace) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetStackSpace) refers to rtx_thread.o(.text.svcRtxThreadGetStackSpace) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadSetPriority) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.svcRtxThreadSetPriority) refers to rtx_thread.o(.text.osRtxThreadStackCheck) for osRtxThreadStackCheck
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadSetPriority) refers to rtx_thread.o(.text.svcRtxThreadSetPriority) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetPriority) refers to rtx_thread.o(.text.svcRtxThreadGetPriority) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadYield) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.svcRtxThreadYield) refers to rtx_thread.o(.text.osRtxThreadStackCheck) for osRtxThreadStackCheck
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadYield) refers to rtx_thread.o(.text.svcRtxThreadYield) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.osRtxThreadStackCheck) for osRtxThreadStackCheck
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.svcRtxThreadSuspend) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadResume) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.svcRtxThreadResume) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadResume) refers to rtx_thread.o(.text.svcRtxThreadResume) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadDetach) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.svcRtxThreadDetach) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_thread.o(.text.svcRtxThreadDetach) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadDetach) refers to rtx_thread.o(.text.svcRtxThreadDetach) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_thread.o(.text.osRtxThreadStackCheck) for osRtxThreadStackCheck
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadJoin) refers to rtx_thread.o(.text.svcRtxThreadJoin) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_mutex.o(.text.osRtxMutexOwnerRelease) for osRtxMutexOwnerRelease
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_thread.o(.text.osRtxThreadStackCheck) for osRtxThreadStackCheck
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadExit) refers to rtx_thread.o(.text.svcRtxThreadExit) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_mutex.o(.text.osRtxMutexOwnerRelease) for osRtxMutexOwnerRelease
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadStackCheck) for osRtxThreadStackCheck
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.svcRtxThreadTerminate) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetCount) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetCount) refers to rtx_thread.o(.text.svcRtxThreadGetCount) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadEnumerate) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadEnumerate) refers to rtx_thread.o(.text.svcRtxThreadEnumerate) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadFlagsSet) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.svcRtxThreadFlagsSet) refers to rtx_thread.o(.text.osRtxThreadStackCheck) for osRtxThreadStackCheck
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsSet) refers to rtx_thread.o(.text.svcRtxThreadFlagsSet) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadFlagsClear) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsClear) refers to rtx_thread.o(.text.svcRtxThreadFlagsClear) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadFlagsGet) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsGet) refers to rtx_thread.o(.text.svcRtxThreadFlagsGet) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadFlagsWait) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.svcRtxThreadFlagsWait) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsWait) refers to rtx_thread.o(.text.svcRtxThreadFlagsWait) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadNew) refers to rtx_thread.o(.text.svcRtxThreadNew) for svcRtxThreadNew
    rtx_thread.o(.ARM.exidx.text.osThreadNew) refers to rtx_thread.o(.text.osThreadNew) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetName) refers to rtx_thread.o(.text.svcRtxThreadGetName) for svcRtxThreadGetName
    rtx_thread.o(.ARM.exidx.text.osThreadGetName) refers to rtx_thread.o(.text.osThreadGetName) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetId) refers to rtx_thread.o(.text.svcRtxThreadGetId) for svcRtxThreadGetId
    rtx_thread.o(.ARM.exidx.text.osThreadGetId) refers to rtx_thread.o(.text.osThreadGetId) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetState) refers to rtx_thread.o(.text.svcRtxThreadGetState) for svcRtxThreadGetState
    rtx_thread.o(.ARM.exidx.text.osThreadGetState) refers to rtx_thread.o(.text.osThreadGetState) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetStackSize) refers to rtx_thread.o(.text.svcRtxThreadGetStackSize) for svcRtxThreadGetStackSize
    rtx_thread.o(.ARM.exidx.text.osThreadGetStackSize) refers to rtx_thread.o(.text.osThreadGetStackSize) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetStackSpace) refers to rtx_thread.o(.text.svcRtxThreadGetStackSpace) for svcRtxThreadGetStackSpace
    rtx_thread.o(.ARM.exidx.text.osThreadGetStackSpace) refers to rtx_thread.o(.text.osThreadGetStackSpace) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadSetPriority) refers to rtx_thread.o(.text.svcRtxThreadSetPriority) for svcRtxThreadSetPriority
    rtx_thread.o(.ARM.exidx.text.osThreadSetPriority) refers to rtx_thread.o(.text.osThreadSetPriority) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetPriority) refers to rtx_thread.o(.text.svcRtxThreadGetPriority) for svcRtxThreadGetPriority
    rtx_thread.o(.ARM.exidx.text.osThreadGetPriority) refers to rtx_thread.o(.text.osThreadGetPriority) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadYield) refers to rtx_thread.o(.text.svcRtxThreadYield) for svcRtxThreadYield
    rtx_thread.o(.ARM.exidx.text.osThreadYield) refers to rtx_thread.o(.text.osThreadYield) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadSuspend) refers to rtx_thread.o(.text.svcRtxThreadSuspend) for svcRtxThreadSuspend
    rtx_thread.o(.ARM.exidx.text.osThreadSuspend) refers to rtx_thread.o(.text.osThreadSuspend) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadResume) refers to rtx_thread.o(.text.svcRtxThreadResume) for svcRtxThreadResume
    rtx_thread.o(.ARM.exidx.text.osThreadResume) refers to rtx_thread.o(.text.osThreadResume) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadDetach) refers to rtx_thread.o(.text.svcRtxThreadDetach) for svcRtxThreadDetach
    rtx_thread.o(.ARM.exidx.text.osThreadDetach) refers to rtx_thread.o(.text.osThreadDetach) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadJoin) refers to rtx_thread.o(.text.svcRtxThreadJoin) for svcRtxThreadJoin
    rtx_thread.o(.ARM.exidx.text.osThreadJoin) refers to rtx_thread.o(.text.osThreadJoin) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadTerminate) refers to rtx_thread.o(.text.svcRtxThreadTerminate) for svcRtxThreadTerminate
    rtx_thread.o(.ARM.exidx.text.osThreadTerminate) refers to rtx_thread.o(.text.osThreadTerminate) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetCount) refers to rtx_thread.o(.text.svcRtxThreadGetCount) for svcRtxThreadGetCount
    rtx_thread.o(.ARM.exidx.text.osThreadGetCount) refers to rtx_thread.o(.text.osThreadGetCount) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadEnumerate) refers to rtx_thread.o(.text.svcRtxThreadEnumerate) for svcRtxThreadEnumerate
    rtx_thread.o(.ARM.exidx.text.osThreadEnumerate) refers to rtx_thread.o(.text.osThreadEnumerate) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadFlagsSet) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_thread.o(.text.osThreadFlagsSet) refers to rtx_thread.o(.text.svcRtxThreadFlagsSet) for svcRtxThreadFlagsSet
    rtx_thread.o(.ARM.exidx.text.osThreadFlagsSet) refers to rtx_thread.o(.text.osThreadFlagsSet) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadFlagsClear) refers to rtx_thread.o(.text.svcRtxThreadFlagsClear) for svcRtxThreadFlagsClear
    rtx_thread.o(.ARM.exidx.text.osThreadFlagsClear) refers to rtx_thread.o(.text.osThreadFlagsClear) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadFlagsGet) refers to rtx_thread.o(.text.svcRtxThreadFlagsGet) for svcRtxThreadFlagsGet
    rtx_thread.o(.ARM.exidx.text.osThreadFlagsGet) refers to rtx_thread.o(.text.osThreadFlagsGet) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadFlagsWait) refers to rtx_thread.o(.text.svcRtxThreadFlagsWait) for svcRtxThreadFlagsWait
    rtx_thread.o(.ARM.exidx.text.osThreadFlagsWait) refers to rtx_thread.o(.text.osThreadFlagsWait) for [Anonymous Symbol]
    rtx_delay.o(.text.svcRtxDelay) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_delay.o(.ARM.exidx.text.svcRtxDelay) refers to rtx_delay.o(.text.svcRtxDelay) for [Anonymous Symbol]
    rtx_delay.o(.text.svcRtxDelayUntil) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_delay.o(.text.svcRtxDelayUntil) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_delay.o(.ARM.exidx.text.svcRtxDelayUntil) refers to rtx_delay.o(.text.svcRtxDelayUntil) for [Anonymous Symbol]
    rtx_delay.o(.text.osDelay) refers to rtx_delay.o(.text.svcRtxDelay) for svcRtxDelay
    rtx_delay.o(.ARM.exidx.text.osDelay) refers to rtx_delay.o(.text.osDelay) for [Anonymous Symbol]
    rtx_delay.o(.text.osDelayUntil) refers to rtx_delay.o(.text.svcRtxDelayUntil) for svcRtxDelayUntil
    rtx_delay.o(.ARM.exidx.text.osDelayUntil) refers to rtx_delay.o(.text.osDelayUntil) for [Anonymous Symbol]
    rtx_evflags.o(.text.osRtxEventFlagsPostProcess) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_evflags.o(.text.osRtxEventFlagsPostProcess) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_evflags.o(.ARM.exidx.text.osRtxEventFlagsPostProcess) refers to rtx_evflags.o(.text.osRtxEventFlagsPostProcess) for [Anonymous Symbol]
    rtx_evflags.o(.text.svcRtxEventFlagsNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_evflags.o(.text.svcRtxEventFlagsNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_evflags.o(.text.svcRtxEventFlagsNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_evflags.o(.text.svcRtxEventFlagsNew) refers to rtx_evflags.o(.text.osRtxEventFlagsPostProcess) for osRtxEventFlagsPostProcess
    rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsNew) refers to rtx_evflags.o(.text.svcRtxEventFlagsNew) for [Anonymous Symbol]
    rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsGetName) refers to rtx_evflags.o(.text.svcRtxEventFlagsGetName) for [Anonymous Symbol]
    rtx_evflags.o(.text.svcRtxEventFlagsSet) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_evflags.o(.text.svcRtxEventFlagsSet) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_evflags.o(.text.svcRtxEventFlagsSet) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsSet) refers to rtx_evflags.o(.text.svcRtxEventFlagsSet) for [Anonymous Symbol]
    rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsClear) refers to rtx_evflags.o(.text.svcRtxEventFlagsClear) for [Anonymous Symbol]
    rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsGet) refers to rtx_evflags.o(.text.svcRtxEventFlagsGet) for [Anonymous Symbol]
    rtx_evflags.o(.text.svcRtxEventFlagsWait) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_evflags.o(.text.svcRtxEventFlagsWait) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_evflags.o(.text.svcRtxEventFlagsWait) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsWait) refers to rtx_evflags.o(.text.svcRtxEventFlagsWait) for [Anonymous Symbol]
    rtx_evflags.o(.text.svcRtxEventFlagsDelete) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_evflags.o(.text.svcRtxEventFlagsDelete) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_evflags.o(.text.svcRtxEventFlagsDelete) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_evflags.o(.text.svcRtxEventFlagsDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_evflags.o(.text.svcRtxEventFlagsDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_evflags.o(.text.svcRtxEventFlagsDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsDelete) refers to rtx_evflags.o(.text.svcRtxEventFlagsDelete) for [Anonymous Symbol]
    rtx_evflags.o(.text.osEventFlagsNew) refers to rtx_evflags.o(.text.svcRtxEventFlagsNew) for svcRtxEventFlagsNew
    rtx_evflags.o(.ARM.exidx.text.osEventFlagsNew) refers to rtx_evflags.o(.text.osEventFlagsNew) for [Anonymous Symbol]
    rtx_evflags.o(.text.osEventFlagsGetName) refers to rtx_evflags.o(.text.svcRtxEventFlagsGetName) for svcRtxEventFlagsGetName
    rtx_evflags.o(.ARM.exidx.text.osEventFlagsGetName) refers to rtx_evflags.o(.text.osEventFlagsGetName) for [Anonymous Symbol]
    rtx_evflags.o(.text.osEventFlagsSet) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_evflags.o(.text.osEventFlagsSet) refers to rtx_evflags.o(.text.svcRtxEventFlagsSet) for svcRtxEventFlagsSet
    rtx_evflags.o(.ARM.exidx.text.osEventFlagsSet) refers to rtx_evflags.o(.text.osEventFlagsSet) for [Anonymous Symbol]
    rtx_evflags.o(.text.osEventFlagsClear) refers to rtx_evflags.o(.text.svcRtxEventFlagsClear) for svcRtxEventFlagsClear
    rtx_evflags.o(.ARM.exidx.text.osEventFlagsClear) refers to rtx_evflags.o(.text.osEventFlagsClear) for [Anonymous Symbol]
    rtx_evflags.o(.text.osEventFlagsGet) refers to rtx_evflags.o(.text.svcRtxEventFlagsGet) for svcRtxEventFlagsGet
    rtx_evflags.o(.ARM.exidx.text.osEventFlagsGet) refers to rtx_evflags.o(.text.osEventFlagsGet) for [Anonymous Symbol]
    rtx_evflags.o(.text.osEventFlagsWait) refers to rtx_evflags.o(.text.svcRtxEventFlagsWait) for svcRtxEventFlagsWait
    rtx_evflags.o(.ARM.exidx.text.osEventFlagsWait) refers to rtx_evflags.o(.text.osEventFlagsWait) for [Anonymous Symbol]
    rtx_evflags.o(.text.osEventFlagsDelete) refers to rtx_evflags.o(.text.svcRtxEventFlagsDelete) for svcRtxEventFlagsDelete
    rtx_evflags.o(.ARM.exidx.text.osEventFlagsDelete) refers to rtx_evflags.o(.text.osEventFlagsDelete) for [Anonymous Symbol]
    rtx_mutex.o(.text.osRtxMutexOwnerRelease) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mutex.o(.text.osRtxMutexOwnerRelease) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mutex.o(.ARM.exidx.text.osRtxMutexOwnerRelease) refers to rtx_mutex.o(.text.osRtxMutexOwnerRelease) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mutex.o(.text.svcRtxMutexNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_mutex.o(.text.svcRtxMutexNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexNew) refers to rtx_mutex.o(.text.svcRtxMutexNew) for [Anonymous Symbol]
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexGetName) refers to rtx_mutex.o(.text.svcRtxMutexGetName) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_thread.o(.text.osRtxThreadListSort) for osRtxThreadListSort
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexAcquire) refers to rtx_mutex.o(.text.svcRtxMutexAcquire) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexRelease) refers to rtx_mutex.o(.text.svcRtxMutexRelease) for [Anonymous Symbol]
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexGetOwner) refers to rtx_mutex.o(.text.svcRtxMutexGetOwner) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_thread.o(.text.osRtxThreadListSort) for osRtxThreadListSort
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexDelete) refers to rtx_mutex.o(.text.svcRtxMutexDelete) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexNew) refers to rtx_mutex.o(.text.svcRtxMutexNew) for svcRtxMutexNew
    rtx_mutex.o(.ARM.exidx.text.osMutexNew) refers to rtx_mutex.o(.text.osMutexNew) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexGetName) refers to rtx_mutex.o(.text.svcRtxMutexGetName) for svcRtxMutexGetName
    rtx_mutex.o(.ARM.exidx.text.osMutexGetName) refers to rtx_mutex.o(.text.osMutexGetName) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexAcquire) refers to rtx_mutex.o(.text.svcRtxMutexAcquire) for svcRtxMutexAcquire
    rtx_mutex.o(.ARM.exidx.text.osMutexAcquire) refers to rtx_mutex.o(.text.osMutexAcquire) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexRelease) refers to rtx_mutex.o(.text.svcRtxMutexRelease) for svcRtxMutexRelease
    rtx_mutex.o(.ARM.exidx.text.osMutexRelease) refers to rtx_mutex.o(.text.osMutexRelease) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexGetOwner) refers to rtx_mutex.o(.text.svcRtxMutexGetOwner) for svcRtxMutexGetOwner
    rtx_mutex.o(.ARM.exidx.text.osMutexGetOwner) refers to rtx_mutex.o(.text.osMutexGetOwner) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexDelete) refers to rtx_mutex.o(.text.svcRtxMutexDelete) for svcRtxMutexDelete
    rtx_mutex.o(.ARM.exidx.text.osMutexDelete) refers to rtx_mutex.o(.text.osMutexDelete) for [Anonymous Symbol]
    rtx_semaphore.o(.text.osRtxSemaphorePostProcess) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_semaphore.o(.text.osRtxSemaphorePostProcess) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_semaphore.o(.ARM.exidx.text.osRtxSemaphorePostProcess) refers to rtx_semaphore.o(.text.osRtxSemaphorePostProcess) for [Anonymous Symbol]
    rtx_semaphore.o(.text.svcRtxSemaphoreNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_semaphore.o(.text.svcRtxSemaphoreNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_semaphore.o(.text.svcRtxSemaphoreNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_semaphore.o(.text.svcRtxSemaphoreNew) refers to rtx_semaphore.o(.text.osRtxSemaphorePostProcess) for osRtxSemaphorePostProcess
    rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreNew) refers to rtx_semaphore.o(.text.svcRtxSemaphoreNew) for [Anonymous Symbol]
    rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreGetName) refers to rtx_semaphore.o(.text.svcRtxSemaphoreGetName) for [Anonymous Symbol]
    rtx_semaphore.o(.text.svcRtxSemaphoreAcquire) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_semaphore.o(.text.svcRtxSemaphoreAcquire) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_semaphore.o(.text.svcRtxSemaphoreAcquire) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreAcquire) refers to rtx_semaphore.o(.text.svcRtxSemaphoreAcquire) for [Anonymous Symbol]
    rtx_semaphore.o(.text.svcRtxSemaphoreRelease) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_semaphore.o(.text.svcRtxSemaphoreRelease) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreRelease) refers to rtx_semaphore.o(.text.svcRtxSemaphoreRelease) for [Anonymous Symbol]
    rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreGetCount) refers to rtx_semaphore.o(.text.svcRtxSemaphoreGetCount) for [Anonymous Symbol]
    rtx_semaphore.o(.text.svcRtxSemaphoreDelete) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_semaphore.o(.text.svcRtxSemaphoreDelete) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_semaphore.o(.text.svcRtxSemaphoreDelete) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_semaphore.o(.text.svcRtxSemaphoreDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_semaphore.o(.text.svcRtxSemaphoreDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_semaphore.o(.text.svcRtxSemaphoreDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreDelete) refers to rtx_semaphore.o(.text.svcRtxSemaphoreDelete) for [Anonymous Symbol]
    rtx_semaphore.o(.text.osSemaphoreNew) refers to rtx_semaphore.o(.text.svcRtxSemaphoreNew) for svcRtxSemaphoreNew
    rtx_semaphore.o(.ARM.exidx.text.osSemaphoreNew) refers to rtx_semaphore.o(.text.osSemaphoreNew) for [Anonymous Symbol]
    rtx_semaphore.o(.text.osSemaphoreGetName) refers to rtx_semaphore.o(.text.svcRtxSemaphoreGetName) for svcRtxSemaphoreGetName
    rtx_semaphore.o(.ARM.exidx.text.osSemaphoreGetName) refers to rtx_semaphore.o(.text.osSemaphoreGetName) for [Anonymous Symbol]
    rtx_semaphore.o(.text.osSemaphoreAcquire) refers to rtx_semaphore.o(.text.svcRtxSemaphoreAcquire) for svcRtxSemaphoreAcquire
    rtx_semaphore.o(.ARM.exidx.text.osSemaphoreAcquire) refers to rtx_semaphore.o(.text.osSemaphoreAcquire) for [Anonymous Symbol]
    rtx_semaphore.o(.text.osSemaphoreRelease) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_semaphore.o(.text.osSemaphoreRelease) refers to rtx_semaphore.o(.text.svcRtxSemaphoreRelease) for svcRtxSemaphoreRelease
    rtx_semaphore.o(.ARM.exidx.text.osSemaphoreRelease) refers to rtx_semaphore.o(.text.osSemaphoreRelease) for [Anonymous Symbol]
    rtx_semaphore.o(.text.osSemaphoreGetCount) refers to rtx_semaphore.o(.text.svcRtxSemaphoreGetCount) for svcRtxSemaphoreGetCount
    rtx_semaphore.o(.ARM.exidx.text.osSemaphoreGetCount) refers to rtx_semaphore.o(.text.osSemaphoreGetCount) for [Anonymous Symbol]
    rtx_semaphore.o(.text.osSemaphoreDelete) refers to rtx_semaphore.o(.text.svcRtxSemaphoreDelete) for svcRtxSemaphoreDelete
    rtx_semaphore.o(.ARM.exidx.text.osSemaphoreDelete) refers to rtx_semaphore.o(.text.osSemaphoreDelete) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolInit) refers to rtx_mempool.o(.text.osRtxMemoryPoolInit) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolAlloc) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolFree) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for [Anonymous Symbol]
    rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolPostProcess) refers to rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rt_memclr.o(.text) for __aeabi_memclr
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) for osRtxMemoryPoolPostProcess
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolNew) refers to rtx_mempool.o(.text.svcRtxMemoryPoolNew) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetName) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetName) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolAlloc) refers to rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolFree) refers to rtx_mempool.o(.text.svcRtxMemoryPoolFree) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetCapacity) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetCapacity) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetBlockSize) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetBlockSize) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetCount) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetCount) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetSpace) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetSpace) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolDelete) refers to rtx_mempool.o(.text.svcRtxMemoryPoolDelete) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolNew) refers to rtx_mempool.o(.text.svcRtxMemoryPoolNew) for svcRtxMemoryPoolNew
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolNew) refers to rtx_mempool.o(.text.osMemoryPoolNew) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetName) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetName) for svcRtxMemoryPoolGetName
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetName) refers to rtx_mempool.o(.text.osMemoryPoolGetName) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolAlloc) refers to rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) for svcRtxMemoryPoolAlloc
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolAlloc) refers to rtx_mempool.o(.text.osMemoryPoolAlloc) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolFree) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_mempool.o(.text.osMemoryPoolFree) refers to rtx_mempool.o(.text.svcRtxMemoryPoolFree) for svcRtxMemoryPoolFree
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolFree) refers to rtx_mempool.o(.text.osMemoryPoolFree) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetCapacity) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetCapacity) for svcRtxMemoryPoolGetCapacity
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetCapacity) refers to rtx_mempool.o(.text.osMemoryPoolGetCapacity) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetBlockSize) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetBlockSize) for svcRtxMemoryPoolGetBlockSize
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetBlockSize) refers to rtx_mempool.o(.text.osMemoryPoolGetBlockSize) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetCount) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetCount) for svcRtxMemoryPoolGetCount
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetCount) refers to rtx_mempool.o(.text.osMemoryPoolGetCount) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetSpace) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetSpace) for svcRtxMemoryPoolGetSpace
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetSpace) refers to rtx_mempool.o(.text.osMemoryPoolGetSpace) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolDelete) refers to rtx_mempool.o(.text.svcRtxMemoryPoolDelete) for svcRtxMemoryPoolDelete
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolDelete) refers to rtx_mempool.o(.text.osMemoryPoolDelete) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for osRtxThreadRegPtr
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.ARM.exidx.text.osRtxMessageQueuePostProcess) refers to rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rt_memclr.o(.text) for __aeabi_memclr
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolInit) for osRtxMemoryPoolInit
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) for osRtxMessageQueuePostProcess
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueNew) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueNew) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetName) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetName) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for osRtxThreadRegPtr
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueuePut) refers to rtx_msgqueue.o(.text.svcRtxMessageQueuePut) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for osRtxThreadRegPtr
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGet) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGet) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetCapacity) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetCapacity) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetMsgSize) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetMsgSize) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetCount) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetCount) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetSpace) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetSpace) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for osRtxThreadRegPtr
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueReset) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueReset) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueDelete) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueNew) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueNew) for svcRtxMessageQueueNew
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueNew) refers to rtx_msgqueue.o(.text.osMessageQueueNew) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetName) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetName) for svcRtxMessageQueueGetName
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetName) refers to rtx_msgqueue.o(.text.osMessageQueueGetName) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to rtx_msgqueue.o(.text.svcRtxMessageQueuePut) for svcRtxMessageQueuePut
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueuePut) refers to rtx_msgqueue.o(.text.osMessageQueuePut) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGet) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGet) for svcRtxMessageQueueGet
    rtx_msgqueue.o(.text.osMessageQueueGet) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.osMessageQueueGet) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGet) refers to rtx_msgqueue.o(.text.osMessageQueueGet) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetCapacity) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetCapacity) for svcRtxMessageQueueGetCapacity
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetCapacity) refers to rtx_msgqueue.o(.text.osMessageQueueGetCapacity) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetMsgSize) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetMsgSize) for svcRtxMessageQueueGetMsgSize
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetMsgSize) refers to rtx_msgqueue.o(.text.osMessageQueueGetMsgSize) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetCount) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetCount) for svcRtxMessageQueueGetCount
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetCount) refers to rtx_msgqueue.o(.text.osMessageQueueGetCount) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetSpace) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetSpace) for svcRtxMessageQueueGetSpace
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetSpace) refers to rtx_msgqueue.o(.text.osMessageQueueGetSpace) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueReset) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueReset) for svcRtxMessageQueueReset
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueReset) refers to rtx_msgqueue.o(.text.osMessageQueueReset) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueDelete) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) for svcRtxMessageQueueDelete
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueDelete) refers to rtx_msgqueue.o(.text.osMessageQueueDelete) for [Anonymous Symbol]
    irq_cm3.o(.text) refers to rtx_system.o(.text.osRtxPendSV_Handler) for osRtxPendSV_Handler
    irq_cm3.o(.text) refers to rtx_system.o(.text.osRtxTick_Handler) for osRtxTick_Handler
    irq_cm3.o(.text) refers to rtx_kernel.o(.data.os) for osRtxInfo
    irq_cm3.o(.text) refers to rtx_lib.o(.constdata) for osRtxUserSVC
    rtx_timer.o(.text.osRtxTimerTick) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.text.osRtxTimerTick) refers to rtx_msgqueue.o(.text.osMessageQueuePut) for osMessageQueuePut
    rtx_timer.o(.text.osRtxTimerTick) refers to rtx_config.o(i.osRtxErrorNotify) for osRtxErrorNotify
    rtx_timer.o(.ARM.exidx.text.osRtxTimerTick) refers to rtx_timer.o(.text.osRtxTimerTick) for [Anonymous Symbol]
    rtx_timer.o(.text.osRtxTimerThread) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.text.osRtxTimerThread) refers to rtx_msgqueue.o(.text.osMessageQueueGet) for osMessageQueueGet
    rtx_timer.o(.ARM.exidx.text.osRtxTimerThread) refers to rtx_timer.o(.text.osRtxTimerThread) for [Anonymous Symbol]
    rtx_timer.o(.text.svcRtxTimerNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.text.svcRtxTimerNew) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_timer.o(.text.svcRtxTimerNew) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueNew) for svcRtxMessageQueueNew
    rtx_timer.o(.text.svcRtxTimerNew) refers to rtx_timer.o(.text.osRtxTimerThread) for osRtxTimerThread
    rtx_timer.o(.text.svcRtxTimerNew) refers to rtx_thread.o(.text.svcRtxThreadNew) for svcRtxThreadNew
    rtx_timer.o(.text.svcRtxTimerNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_timer.o(.text.svcRtxTimerNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerNew) refers to rtx_timer.o(.text.svcRtxTimerNew) for [Anonymous Symbol]
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerGetName) refers to rtx_timer.o(.text.svcRtxTimerGetName) for [Anonymous Symbol]
    rtx_timer.o(.text.svcRtxTimerStart) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerStart) refers to rtx_timer.o(.text.svcRtxTimerStart) for [Anonymous Symbol]
    rtx_timer.o(.text.svcRtxTimerStop) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerStop) refers to rtx_timer.o(.text.svcRtxTimerStop) for [Anonymous Symbol]
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerIsRunning) refers to rtx_timer.o(.text.svcRtxTimerIsRunning) for [Anonymous Symbol]
    rtx_timer.o(.text.svcRtxTimerDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.text.svcRtxTimerDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_timer.o(.text.svcRtxTimerDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerDelete) refers to rtx_timer.o(.text.svcRtxTimerDelete) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerNew) refers to rtx_timer.o(.text.svcRtxTimerNew) for svcRtxTimerNew
    rtx_timer.o(.ARM.exidx.text.osTimerNew) refers to rtx_timer.o(.text.osTimerNew) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerGetName) refers to rtx_timer.o(.text.svcRtxTimerGetName) for svcRtxTimerGetName
    rtx_timer.o(.ARM.exidx.text.osTimerGetName) refers to rtx_timer.o(.text.osTimerGetName) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerStart) refers to rtx_timer.o(.text.svcRtxTimerStart) for svcRtxTimerStart
    rtx_timer.o(.ARM.exidx.text.osTimerStart) refers to rtx_timer.o(.text.osTimerStart) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerStop) refers to rtx_timer.o(.text.svcRtxTimerStop) for svcRtxTimerStop
    rtx_timer.o(.ARM.exidx.text.osTimerStop) refers to rtx_timer.o(.text.osTimerStop) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerIsRunning) refers to rtx_timer.o(.text.svcRtxTimerIsRunning) for svcRtxTimerIsRunning
    rtx_timer.o(.ARM.exidx.text.osTimerIsRunning) refers to rtx_timer.o(.text.osTimerIsRunning) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerDelete) refers to rtx_timer.o(.text.svcRtxTimerDelete) for svcRtxTimerDelete
    rtx_timer.o(.ARM.exidx.text.osTimerDelete) refers to rtx_timer.o(.text.osTimerDelete) for [Anonymous Symbol]
    rtx_memory.o(.ARM.exidx.text.osRtxMemoryInit) refers to rtx_memory.o(.text.osRtxMemoryInit) for [Anonymous Symbol]
    rtx_memory.o(.ARM.exidx.text.osRtxMemoryAlloc) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for [Anonymous Symbol]
    rtx_memory.o(.ARM.exidx.text.osRtxMemoryFree) refers to rtx_memory.o(.text.osRtxMemoryFree) for [Anonymous Symbol]
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_system.o(.text.osRtxSysTimerAckIRQ) for osRtxSysTimerAckIRQ
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_timer.o(.text.osRtxTimerTick) for osRtxTimerTick
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadDelayTick) for osRtxThreadDelayTick
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for osRtxThreadReadyPut
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_system.o(.ARM.exidx.text.osRtxTick_Handler) refers to rtx_system.o(.text.osRtxTick_Handler) for [Anonymous Symbol]
    rtx_system.o(.ARM.exidx.text.osRtxSysTimerAckIRQ) refers to rtx_system.o(.text.osRtxSysTimerAckIRQ) for [Anonymous Symbol]
    rtx_system.o(.text.osRtxPendSV_Handler) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_system.o(.text.osRtxPendSV_Handler) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_system.o(.ARM.exidx.text.osRtxPendSV_Handler) refers to rtx_system.o(.text.osRtxPendSV_Handler) for [Anonymous Symbol]
    rtx_system.o(.text.osRtxPostProcess) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_system.o(.text.osRtxPostProcess) refers to rtx_config.o(i.osRtxErrorNotify) for osRtxErrorNotify
    rtx_system.o(.ARM.exidx.text.osRtxPostProcess) refers to rtx_system.o(.text.osRtxPostProcess) for [Anonymous Symbol]
    rtx_system.o(.text.osRtxSysTimerSetup) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_system.o(.text.osRtxSysTimerSetup) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_system.o(.ARM.exidx.text.osRtxSysTimerSetup) refers to rtx_system.o(.text.osRtxSysTimerSetup) for [Anonymous Symbol]
    rtx_system.o(.ARM.exidx.text.osRtxSysTimerEnable) refers to rtx_system.o(.text.osRtxSysTimerEnable) for [Anonymous Symbol]
    rtx_system.o(.ARM.exidx.text.osRtxSysTimerDisable) refers to rtx_system.o(.text.osRtxSysTimerDisable) for [Anonymous Symbol]
    rtx_system.o(.text.osRtxSysTimerGetCount) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_system.o(.ARM.exidx.text.osRtxSysTimerGetCount) refers to rtx_system.o(.text.osRtxSysTimerGetCount) for [Anonymous Symbol]
    rtx_system.o(.text.osRtxSysTimerGetFreq) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_system.o(.ARM.exidx.text.osRtxSysTimerGetFreq) refers to rtx_system.o(.text.osRtxSysTimerGetFreq) for [Anonymous Symbol]
    rt_memcpy_v6.o(.text) refers to rt_memcpy_w.o(.text) for __aeabi_memcpy4
    aeabi_memset4.o(.text) refers to rt_memclr_w.o(.text) for _memset_w
    rt_memclr.o(.text) refers to rt_memclr_w.o(.text) for _memset_w
    __main.o(!!!main) refers to __rtentry.o(.ARM.Collect$$rtentry$$00000000) for __rt_entry
    init_aeabi.o(.emb_text) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000031) for __rt_lib_init_cpp_2
    init_aeabi.o(.init_array) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000031) for __rt_lib_init_cpp_2
    init_aeabi.o(.init_array) refers to init_aeabi.o(.text) for __cpp_initialize__aeabi_
    init_aeabi.o(.dummy_text) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000031) for __rt_lib_init_cpp_2
    init_aeabi.o(.text) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000031) for __rt_lib_init_cpp_2
    init_aeabi.o(.ARM.exidx) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000031) for __rt_lib_init_cpp_2
    init_aeabi.o(.ARM.exidx) refers to init_aeabi.o(.text) for .text
    pure_virt.o(i.__cxa_pure_virtual) refers to defsig_pvfn_outer.o(.text) for __rt_SIGPVFN
    pure_virt.o(.ARM.exidx) refers to pure_virt.o(i.__cxa_pure_virtual) for i.__cxa_pure_virtual
    lib_rtti_impl.o(i._ZN10__cxxabiv116__enum_type_infoD0Ev) refers to lib_rtti_impl.o(i._ZN10__cxxabiv116__enum_type_infoD1Ev) for __cxxabiv1::__enum_type_info::~__enum_type_info()
    lib_rtti_impl.o(i._ZN10__cxxabiv117__array_type_infoD0Ev) refers to lib_rtti_impl.o(i._ZN10__cxxabiv117__array_type_infoD1Ev) for __cxxabiv1::__array_type_info::~__array_type_info()
    lib_rtti_impl.o(i._ZN10__cxxabiv117__class_type_infoD0Ev) refers to lib_rtti_impl.o(i._ZN10__cxxabiv117__class_type_infoD1Ev) for __cxxabiv1::__class_type_info::~__class_type_info()
    lib_rtti_impl.o(i._ZN10__cxxabiv117__pbase_type_infoD0Ev) refers to lib_rtti_impl.o(i._ZN10__cxxabiv117__pbase_type_infoD1Ev) for __cxxabiv1::__pbase_type_info::~__pbase_type_info()
    lib_rtti_impl.o(i._ZN10__cxxabiv119__pointer_type_infoD0Ev) refers to lib_rtti_impl.o(i._ZN10__cxxabiv119__pointer_type_infoD1Ev) for __cxxabiv1::__pointer_type_info::~__pointer_type_info()
    lib_rtti_impl.o(i._ZN10__cxxabiv119__pointer_type_infoD1Ev) refers to lib_rtti_impl.o(i._ZN10__cxxabiv117__pbase_type_infoD1Ev) for __cxxabiv1::__pbase_type_info::~__pbase_type_info()
    lib_rtti_impl.o(i._ZN10__cxxabiv120__function_type_infoD0Ev) refers to lib_rtti_impl.o(i._ZN10__cxxabiv120__function_type_infoD1Ev) for __cxxabiv1::__function_type_info::~__function_type_info()
    lib_rtti_impl.o(i._ZN10__cxxabiv120__si_class_type_infoD0Ev) refers to lib_rtti_impl.o(i._ZN10__cxxabiv120__si_class_type_infoD1Ev) for __cxxabiv1::__si_class_type_info::~__si_class_type_info()
    lib_rtti_impl.o(i._ZN10__cxxabiv120__si_class_type_infoD1Ev) refers to lib_rtti_impl.o(i._ZN10__cxxabiv117__class_type_infoD1Ev) for __cxxabiv1::__class_type_info::~__class_type_info()
    lib_rtti_impl.o(i._ZN10__cxxabiv121__vmi_class_type_infoD0Ev) refers to lib_rtti_impl.o(i._ZN10__cxxabiv121__vmi_class_type_infoD1Ev) for __cxxabiv1::__vmi_class_type_info::~__vmi_class_type_info()
    lib_rtti_impl.o(i._ZN10__cxxabiv121__vmi_class_type_infoD1Ev) refers to lib_rtti_impl.o(i._ZN10__cxxabiv117__class_type_infoD1Ev) for __cxxabiv1::__class_type_info::~__class_type_info()
    lib_rtti_impl.o(i._ZN10__cxxabiv123__fundamental_type_infoD0Ev) refers to lib_rtti_impl.o(i._ZN10__cxxabiv123__fundamental_type_infoD1Ev) for __cxxabiv1::__fundamental_type_info::~__fundamental_type_info()
    lib_rtti_impl.o(i._ZN10__cxxabiv129__pointer_to_member_type_infoD0Ev) refers to lib_rtti_impl.o(i._ZN10__cxxabiv129__pointer_to_member_type_infoD1Ev) for __cxxabiv1::__pointer_to_member_type_info::~__pointer_to_member_type_info()
    lib_rtti_impl.o(i._ZN10__cxxabiv129__pointer_to_member_type_infoD1Ev) refers to lib_rtti_impl.o(i._ZN10__cxxabiv117__pbase_type_infoD1Ev) for __cxxabiv1::__pbase_type_info::~__pbase_type_info()
    lib_rtti_impl.o(.ARM.exidx) refers to lib_rtti_impl.o(i._ZN10__cxxabiv123__fundamental_type_infoD1Ev) for i._ZN10__cxxabiv123__fundamental_type_infoD1Ev
    lib_rtti_impl.o(.ARM.exidx) refers to lib_rtti_impl.o(i._ZN10__cxxabiv123__fundamental_type_infoD0Ev) for i._ZN10__cxxabiv123__fundamental_type_infoD0Ev
    lib_rtti_impl.o(.ARM.exidx) refers to lib_rtti_impl.o(i._ZN10__cxxabiv117__array_type_infoD1Ev) for i._ZN10__cxxabiv117__array_type_infoD1Ev
    lib_rtti_impl.o(.ARM.exidx) refers to lib_rtti_impl.o(i._ZN10__cxxabiv117__array_type_infoD0Ev) for i._ZN10__cxxabiv117__array_type_infoD0Ev
    lib_rtti_impl.o(.ARM.exidx) refers to lib_rtti_impl.o(i._ZN10__cxxabiv120__function_type_infoD1Ev) for i._ZN10__cxxabiv120__function_type_infoD1Ev
    lib_rtti_impl.o(.ARM.exidx) refers to lib_rtti_impl.o(i._ZN10__cxxabiv120__function_type_infoD0Ev) for i._ZN10__cxxabiv120__function_type_infoD0Ev
    lib_rtti_impl.o(.ARM.exidx) refers to lib_rtti_impl.o(i._ZN10__cxxabiv116__enum_type_infoD1Ev) for i._ZN10__cxxabiv116__enum_type_infoD1Ev
    lib_rtti_impl.o(.ARM.exidx) refers to lib_rtti_impl.o(i._ZN10__cxxabiv116__enum_type_infoD0Ev) for i._ZN10__cxxabiv116__enum_type_infoD0Ev
    lib_rtti_impl.o(.ARM.exidx) refers to lib_rtti_impl.o(i._ZN10__cxxabiv117__class_type_infoD1Ev) for i._ZN10__cxxabiv117__class_type_infoD1Ev
    lib_rtti_impl.o(.ARM.exidx) refers to lib_rtti_impl.o(i._ZN10__cxxabiv117__class_type_infoD0Ev) for i._ZN10__cxxabiv117__class_type_infoD0Ev
    lib_rtti_impl.o(.ARM.exidx) refers to lib_rtti_impl.o(i._ZN10__cxxabiv120__si_class_type_infoD1Ev) for i._ZN10__cxxabiv120__si_class_type_infoD1Ev
    lib_rtti_impl.o(.ARM.exidx) refers to lib_rtti_impl.o(i._ZN10__cxxabiv120__si_class_type_infoD0Ev) for i._ZN10__cxxabiv120__si_class_type_infoD0Ev
    lib_rtti_impl.o(.ARM.exidx) refers to lib_rtti_impl.o(i._ZN10__cxxabiv121__vmi_class_type_infoD1Ev) for i._ZN10__cxxabiv121__vmi_class_type_infoD1Ev
    lib_rtti_impl.o(.ARM.exidx) refers to lib_rtti_impl.o(i._ZN10__cxxabiv121__vmi_class_type_infoD0Ev) for i._ZN10__cxxabiv121__vmi_class_type_infoD0Ev
    lib_rtti_impl.o(.ARM.exidx) refers to lib_rtti_impl.o(i._ZN10__cxxabiv117__pbase_type_infoD1Ev) for i._ZN10__cxxabiv117__pbase_type_infoD1Ev
    lib_rtti_impl.o(.ARM.exidx) refers to lib_rtti_impl.o(i._ZN10__cxxabiv117__pbase_type_infoD0Ev) for i._ZN10__cxxabiv117__pbase_type_infoD0Ev
    lib_rtti_impl.o(.ARM.exidx) refers to lib_rtti_impl.o(i._ZN10__cxxabiv119__pointer_type_infoD1Ev) for i._ZN10__cxxabiv119__pointer_type_infoD1Ev
    lib_rtti_impl.o(.ARM.exidx) refers to lib_rtti_impl.o(i._ZN10__cxxabiv119__pointer_type_infoD0Ev) for i._ZN10__cxxabiv119__pointer_type_infoD0Ev
    lib_rtti_impl.o(.ARM.exidx) refers to lib_rtti_impl.o(i._ZN10__cxxabiv129__pointer_to_member_type_infoD1Ev) for i._ZN10__cxxabiv129__pointer_to_member_type_infoD1Ev
    lib_rtti_impl.o(.ARM.exidx) refers to lib_rtti_impl.o(i._ZN10__cxxabiv129__pointer_to_member_type_infoD0Ev) for i._ZN10__cxxabiv129__pointer_to_member_type_infoD0Ev
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for __rt_entry_li
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for __rt_entry_main
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000C) for __rt_entry_postli_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000008) for __rt_entry_postsh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000002) for __rt_entry_presh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for __rt_entry_sh
    defsig_pvfn_outer.o(.text) refers to defsig_pvfn_inner.o(.text) for __rt_SIGPVFN_inner
    defsig_pvfn_outer.o(.text) refers to defsig_exit.o(.text) for __sig_exit
    defsig_pvfn_formal.o(.text) refers to rt_raise.o(.text) for __rt_raise
    libinit2.o(.ARM.Collect$$libinit$$00000005) refers (Weak) to init_alloc.o(.text) for _init_alloc
    libinit2.o(.ARM.Collect$$libinit$$00000010) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000012) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000014) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000016) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000018) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000026) refers to argv_veneer.o(.emb_text) for __ARM_argv_veneer
    libinit2.o(.ARM.Collect$$libinit$$00000027) refers to argv_veneer.o(.emb_text) for __ARM_argv_veneer
    libinit2.o(.ARM.Collect$$libinit$$00000031) refers (Weak) to init_aeabi.o(.text) for __cpp_initialize__aeabi_
    type_info_dtor.o(.ARM.exidx) refers to type_info_dtor.o(i._ZNSt9type_infoD1Ev) for i._ZNSt9type_infoD1Ev
    type_info_dtor.o(.ARM.exidx) refers to type_info_dtor.o(i._ZNSt9type_infoD0Ev) for i._ZNSt9type_infoD0Ev
    arm_exceptions_callterm.o(.text) refers to arm_exceptions_globs.o(.text) for __cxa_get_globals
    arm_exceptions_callterm.o(.text) refers to arm_exceptions_support.o(.text) for __ARM::is_foreign_exception(_Unwind_Control_Block*)
    arm_exceptions_callterm.o(.text) refers to arm_exceptions_terminate.o(.text) for std::terminate()
    arm_exceptions_callterm.o(.ARM.exidx) refers to arm_exceptions_callterm.o(.text) for .text
    __rtentry2.o(.ARM.Collect$$rtentry$$00000008) refers to rtx_lib.o(i._platform_post_stackheap_init) for _platform_post_stackheap_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) refers to libinit.o(.ARM.Collect$$libinit$$00000000) for __rt_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) refers to boardinit3.o(.text) for _platform_post_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to main.o(i.main) for main
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to exit.o(.text) for exit
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000001) for .ARM.Collect$$rtentry$$00000001
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000008) for .ARM.Collect$$rtentry$$00000008
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for .ARM.Collect$$rtentry$$0000000A
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) for .ARM.Collect$$rtentry$$0000000B
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for .ARM.Collect$$rtentry$$0000000D
    __rtentry4.o(.ARM.Collect$$rtentry$$00000004) refers to sys_stackheap_outer.o(.text) for __user_setup_stackheap
    __rtentry4.o(.ARM.exidx) refers to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for .ARM.Collect$$rtentry$$00000004
    rt_raise.o(.text) refers to __raise.o(.text) for __raise
    rt_raise.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_exit.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_pvfn_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    argv_veneer.o(.emb_text) refers to no_argv.o(.text) for __ARM_get_argv
    arm_begincatch_noexceptions.o(.ARM.exidx) refers to arm_begincatch_noexceptions.o(.text) for .text
    arm_exceptions_support.o(.text) refers to arm_exceptions_support.o(.constdata) for .constdata
    arm_exceptions_support.o(.ARM.exidx) refers to arm_exceptions_support.o(.text) for .text
    arm_exceptions_terminate.o(.text) refers to arm_exceptions_globs.o(.text) for __cxa_get_globals
    arm_exceptions_terminate.o(.text) refers to abort.o(.text) for abort
    arm_exceptions_terminate.o(.ARM.exidx) refers to arm_exceptions_terminate.o(.text) for .text
    arm_exceptions_globs.o(.text) refers to abort.o(.text) for abort
    arm_exceptions_globs.o(.text) refers to rt_eh_globals_addr_twolibspace.o(.text) for __rt_eh_globals_addr
    arm_exceptions_globs.o(.text) refers to h1_alloc_mt.o(.text) for malloc
    arm_exceptions_globs.o(.text) refers to arm_exceptions_mem.o(.text) for __ARM_exceptions_buffer_init
    arm_exceptions_globs.o(.ARM.exidx) refers to arm_exceptions_globs.o(.text) for .text
    sys_exit.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_exit.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_stackheap_outer.o(.text) refers to libspace.o(.text) for __user_perproc_libspace
    sys_stackheap_outer.o(.text) refers to startup_stm32f10x_md.o(.text) for __user_initial_stackheap
    rt_eh_globals_addr.o(.text) refers to rt_eh_globals_addr.o(.bss) for __rt_eh_globals_addr_data
    rt_eh_globals_addr_intlibspace.o(.text) refers to libspace.o(.bss) for __libspace_start
    rt_eh_globals_addr_twolibspace.o(.text) refers to libspace.o(.text) for __user_perproc_libspace
    malloc.o(.text) refers (Special) to hguard.o(.text) for __heap$guard
    malloc.o(.text) refers (Special) to init_alloc.o(.text) for _init_alloc
    malloc.o(.text) refers to rt_heap_descriptor_twolibspace.o(.text) for __rt_heap_descriptor
    malloc.o(.text) refers to heapstubs.o(.text) for __Heap_Alloc
    h1_alloc.o(.text) refers (Special) to h1_init_mt.o(.text) for __Heap_Initialize
    h1_alloc.o(.text) refers to rt_heap_descriptor_twolibspace.o(.text) for __rt_heap_descriptor
    h1_alloc.o(.text) refers to init_alloc.o(.text) for __Heap_Full
    h1_alloc_mt.o(.text) refers (Special) to h1_init_mt.o(.text) for __Heap_Initialize
    h1_alloc_mt.o(.text) refers (Weak) to rtx_lib.o(i._mutex_acquire) for _mutex_acquire
    h1_alloc_mt.o(.text) refers (Weak) to rtx_lib.o(i._mutex_release) for _mutex_release
    h1_alloc_mt.o(.text) refers to init_alloc.o(.text) for __Heap_Full
    h1_alloc_mt.o(.text) refers (Weak) to rtx_lib.o(i._mutex_release) for _mutex_release
    h1_alloc_mt.o(.text) refers to rt_heap_descriptor_twolibspace.o(.text) for __rt_heap_descriptor
    heap2.o(i._FDIterate) refers to heap2.o(.conststring) for .conststring
    heap2.o(i.___Heap_ProvideMemory$realtime) refers to fdtree.o(i._FDTree_Delete) for _FDTree_Delete
    heap2.o(i.___Heap_ProvideMemory$realtime) refers to fdtree.o(i._FDTree_Insert) for _FDTree_Insert
    heap2.o(i.___Heap_Stats$realtime) refers to heap2.o(i._Heap2_StatsIterate) for _Heap2_StatsIterate
    heap2.o(i.___Heap_Valid$realtime) refers to heap2.o(i._FDIterate) for _FDIterate
    heap2.o(i.___Heap_Valid$realtime) refers to heap2.o(.conststring) for .conststring
    heap2.o(i._free$realtime) refers to rt_heap_descriptor_twolibspace.o(.text) for __rt_heap_descriptor
    heap2.o(i._free$realtime) refers to fdtree.o(i._FDTree_Delete) for _FDTree_Delete
    heap2.o(i._free$realtime) refers to fdtree.o(i._FDTree_Insert) for _FDTree_Insert
    heap2.o(i._malloc$realtime) refers to rt_heap_descriptor_twolibspace.o(.text) for __rt_heap_descriptor
    heap2.o(i._malloc$realtime) refers to fdtree.o(i._FDTree_FindFirst) for _FDTree_FindFirst
    heap2.o(i._malloc$realtime) refers to init_alloc.o(.text) for __Heap_Full
    heap2.o(i._malloc$realtime) refers to fdtree.o(i._FDTree_RemoveNode) for _FDTree_RemoveNode
    heap2.o(i._malloc$realtime) refers to fdtree.o(i._FDTree_Insert) for _FDTree_Insert
    heap2.o(i._posix_memalign$realtime) refers to rt_heap_descriptor_twolibspace.o(.text) for __rt_heap_descriptor
    heap2.o(i._posix_memalign$realtime) refers to fdtree.o(i._FDTree_FindFirst) for _FDTree_FindFirst
    heap2.o(i._posix_memalign$realtime) refers to init_alloc.o(.text) for __Heap_Full
    heap2.o(i._posix_memalign$realtime) refers to fdtree.o(i._FDTree_RemoveNode) for _FDTree_RemoveNode
    heap2.o(i._posix_memalign$realtime) refers to fdtree.o(i._FDTree_Insert) for _FDTree_Insert
    heap2.o(i._realloc$realtime) refers to rt_heap_descriptor_twolibspace.o(.text) for __rt_heap_descriptor
    heap2.o(i._realloc$realtime) refers to fdtree.o(i._FDTree_Insert) for _FDTree_Insert
    heap2.o(i._realloc$realtime) refers to h1_free_mt.o(.text) for free
    heap2.o(i._realloc$realtime) refers to h1_alloc_mt.o(.text) for malloc
    heap2.o(i._realloc$realtime) refers to fdtree.o(i._FDTree_Delete) for _FDTree_Delete
    heap2.o(i._realloc$realtime) refers to rt_memcpy_w.o(.text) for __aeabi_memcpy4
    heap2mt.o(i._FDIterate) refers to heap2mt.o(.conststring) for .conststring
    heap2mt.o(i.___Heap_Finalize$realtime$concurrent) refers (Weak) to rtx_lib.o(i._mutex_free) for _mutex_free
    heap2mt.o(i.___Heap_Initialize$realtime$concurrent) refers to rtx_lib.o(i._mutex_initialize) for _mutex_initialize
    heap2mt.o(i.___Heap_ProvideMemory$realtime$concurrent) refers to fdtree.o(i._FDTree_Delete) for _FDTree_Delete
    heap2mt.o(i.___Heap_ProvideMemory$realtime$concurrent) refers to fdtree.o(i._FDTree_Insert) for _FDTree_Insert
    heap2mt.o(i.___Heap_Stats$realtime$concurrent) refers (Weak) to rtx_lib.o(i._mutex_acquire) for _mutex_acquire
    heap2mt.o(i.___Heap_Stats$realtime$concurrent) refers to heap2mt.o(i._Heap2_StatsIterate) for _Heap2_StatsIterate
    heap2mt.o(i.___Heap_Stats$realtime$concurrent) refers (Weak) to rtx_lib.o(i._mutex_release) for _mutex_release
    heap2mt.o(i.___Heap_Valid$realtime$concurrent) refers (Weak) to rtx_lib.o(i._mutex_acquire) for _mutex_acquire
    heap2mt.o(i.___Heap_Valid$realtime$concurrent) refers to heap2mt.o(i._FDIterate) for _FDIterate
    heap2mt.o(i.___Heap_Valid$realtime$concurrent) refers (Weak) to rtx_lib.o(i._mutex_release) for _mutex_release
    heap2mt.o(i.___Heap_Valid$realtime$concurrent) refers to heap2mt.o(.conststring) for .conststring
    heap2mt.o(i._free$realtime$concurrent) refers to rt_heap_descriptor_twolibspace.o(.text) for __rt_heap_descriptor
    heap2mt.o(i._free$realtime$concurrent) refers (Weak) to rtx_lib.o(i._mutex_acquire) for _mutex_acquire
    heap2mt.o(i._free$realtime$concurrent) refers to fdtree.o(i._FDTree_Delete) for _FDTree_Delete
    heap2mt.o(i._free$realtime$concurrent) refers to fdtree.o(i._FDTree_Insert) for _FDTree_Insert
    heap2mt.o(i._free$realtime$concurrent) refers (Weak) to rtx_lib.o(i._mutex_release) for _mutex_release
    heap2mt.o(i._malloc$realtime$concurrent) refers to rt_heap_descriptor_twolibspace.o(.text) for __rt_heap_descriptor
    heap2mt.o(i._malloc$realtime$concurrent) refers (Weak) to rtx_lib.o(i._mutex_acquire) for _mutex_acquire
    heap2mt.o(i._malloc$realtime$concurrent) refers to fdtree.o(i._FDTree_FindFirst) for _FDTree_FindFirst
    heap2mt.o(i._malloc$realtime$concurrent) refers to init_alloc.o(.text) for __Heap_Full
    heap2mt.o(i._malloc$realtime$concurrent) refers to fdtree.o(i._FDTree_RemoveNode) for _FDTree_RemoveNode
    heap2mt.o(i._malloc$realtime$concurrent) refers to fdtree.o(i._FDTree_Insert) for _FDTree_Insert
    heap2mt.o(i._malloc$realtime$concurrent) refers (Weak) to rtx_lib.o(i._mutex_release) for _mutex_release
    heap2mt.o(i._malloc$realtime$concurrent) refers (Weak) to rtx_lib.o(i._mutex_release) for _mutex_release
    heap2mt.o(i._posix_memalign$realtime$concurrent) refers to rt_heap_descriptor_twolibspace.o(.text) for __rt_heap_descriptor
    heap2mt.o(i._posix_memalign$realtime$concurrent) refers (Weak) to rtx_lib.o(i._mutex_acquire) for _mutex_acquire
    heap2mt.o(i._posix_memalign$realtime$concurrent) refers to fdtree.o(i._FDTree_FindFirst) for _FDTree_FindFirst
    heap2mt.o(i._posix_memalign$realtime$concurrent) refers to init_alloc.o(.text) for __Heap_Full
    heap2mt.o(i._posix_memalign$realtime$concurrent) refers to fdtree.o(i._FDTree_RemoveNode) for _FDTree_RemoveNode
    heap2mt.o(i._posix_memalign$realtime$concurrent) refers to fdtree.o(i._FDTree_Insert) for _FDTree_Insert
    heap2mt.o(i._posix_memalign$realtime$concurrent) refers (Weak) to rtx_lib.o(i._mutex_release) for _mutex_release
    heap2mt.o(i._realloc$realtime$concurrent) refers to rt_heap_descriptor_twolibspace.o(.text) for __rt_heap_descriptor
    heap2mt.o(i._realloc$realtime$concurrent) refers (Weak) to rtx_lib.o(i._mutex_acquire) for _mutex_acquire
    heap2mt.o(i._realloc$realtime$concurrent) refers to fdtree.o(i._FDTree_Insert) for _FDTree_Insert
    heap2mt.o(i._realloc$realtime$concurrent) refers to h1_free_mt.o(.text) for free
    heap2mt.o(i._realloc$realtime$concurrent) refers to h1_alloc_mt.o(.text) for malloc
    heap2mt.o(i._realloc$realtime$concurrent) refers to fdtree.o(i._FDTree_Delete) for _FDTree_Delete
    heap2mt.o(i._realloc$realtime$concurrent) refers (Weak) to rtx_lib.o(i._mutex_release) for _mutex_release
    heap2mt.o(i._realloc$realtime$concurrent) refers to rt_memcpy_w.o(.text) for __aeabi_memcpy4
    heap2mt.o(i._realloc$realtime$concurrent) refers (Weak) to rtx_lib.o(i._mutex_release) for _mutex_release
    heap2mt.o(i._realloc$realtime$concurrent) refers (Weak) to rtx_lib.o(i._mutex_release) for _mutex_release
    exit.o(.text) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for __rt_exit
    abort.o(.text) refers to defsig_abrt_outer.o(.text) for __rt_SIGABRT
    abort.o(.text) refers (Weak) to libshutdown.o(.ARM.Collect$$libshutdown$$00000000) for __rt_lib_shutdown
    abort.o(.text) refers to sys_exit.o(.text) for _sys_exit
    __raise.o(.text) refers to defsig.o(CL$$defsig) for __default_signal_handler
    defsig_general.o(.text) refers to sys_wrch.o(.text) for _ttywrch
    _get_argv_nomalloc.o(.text) refers (Special) to hrguard.o(.text) for __heap_region$guard
    _get_argv_nomalloc.o(.text) refers to defsig_rtmem_outer.o(.text) for __rt_SIGRTMEM
    _get_argv_nomalloc.o(.text) refers to sys_command.o(.text) for _sys_command_string
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002E) for __rt_lib_init_alloca_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002C) for __rt_lib_init_argv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001B) for __rt_lib_init_atexit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000021) for __rt_lib_init_clock_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000032) for __rt_lib_init_cpp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000030) for __rt_lib_init_exceptions_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000002) for __rt_lib_init_fp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001F) for __rt_lib_init_fp_trap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000023) for __rt_lib_init_getenv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000A) for __rt_lib_init_heap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000011) for __rt_lib_init_lc_collate_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000013) for __rt_lib_init_lc_ctype_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000015) for __rt_lib_init_lc_monetary_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000017) for __rt_lib_init_lc_numeric_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000019) for __rt_lib_init_lc_time_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000004) for __rt_lib_init_preinit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000E) for __rt_lib_init_rand_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000033) for __rt_lib_init_return
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001D) for __rt_lib_init_signal_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000025) for __rt_lib_init_stdio_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000C) for __rt_lib_init_user_alloc_1
    arm_exceptions_mem.o(.text) refers to h1_alloc_mt.o(.text) for malloc
    arm_exceptions_mem.o(.ARM.exidx) refers to arm_exceptions_mem.o(.text) for .text
    sys_wrch.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_wrch.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_command.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_command.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    libspace.o(.text) refers to libspace.o(.bss) for __libspace_start
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for .ARM.Collect$$rtexit$$00000000
    rt_heap_descriptor.o(.text) refers to rt_heap_descriptor.o(.bss) for __rt_heap_descriptor_data
    rt_heap_descriptor_intlibspace.o(.text) refers to libspace.o(.bss) for __libspace_start
    rt_heap_descriptor_twolibspace.o(.text) refers to libspace.o(.text) for __user_perproc_libspace
    init_alloc.o(.text) refers (Special) to hguard.o(.text) for __heap$guard
    init_alloc.o(.text) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000005) for __rt_lib_init_heap_2
    init_alloc.o(.text) refers (Special) to maybetermalloc2.o(.emb_text) for _maybe_terminate_alloc
    init_alloc.o(.text) refers to h1_extend_mt.o(.text) for __Heap_ProvideMemory
    init_alloc.o(.text) refers to defsig_rtmem_outer.o(.text) for __rt_SIGRTMEM
    init_alloc.o(.text) refers to rt_heap_descriptor_twolibspace.o(.text) for __rt_heap_descriptor
    init_alloc.o(.text) refers to h1_init_mt.o(.text) for __Heap_Initialize
    free.o(.text) refers (Special) to hguard.o(.text) for __heap$guard
    free.o(.text) refers to rt_heap_descriptor_twolibspace.o(.text) for __rt_heap_descriptor
    free.o(.text) refers to heapstubs.o(.text) for __Heap_Free
    h1_free.o(.text) refers to rt_heap_descriptor_twolibspace.o(.text) for __rt_heap_descriptor
    h1_init_mt.o(.text) refers to rtx_lib.o(i._mutex_initialize) for _mutex_initialize
    h1_free_mt.o(.text) refers (Weak) to rtx_lib.o(i._mutex_acquire) for _mutex_acquire
    h1_free_mt.o(.text) refers (Weak) to rtx_lib.o(i._mutex_release) for _mutex_release
    h1_free_mt.o(.text) refers to rt_heap_descriptor_twolibspace.o(.text) for __rt_heap_descriptor
    defsig_abrt_outer.o(.text) refers to defsig_abrt_inner.o(.text) for __rt_SIGABRT_inner
    defsig_abrt_outer.o(.text) refers to defsig_exit.o(.text) for __sig_exit
    defsig_abrt_formal.o(.text) refers to rt_raise.o(.text) for __rt_raise
    defsig_rtmem_outer.o(.text) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    defsig_rtmem_outer.o(.text) refers to defsig_exit.o(.text) for __sig_exit
    defsig_rtmem_formal.o(.text) refers to rt_raise.o(.text) for __rt_raise
    defsig.o(CL$$defsig) refers to defsig_abrt_inner.o(.text) for __rt_SIGABRT_inner
    defsig.o(CL$$defsig) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    defsig.o(CL$$defsig) refers to defsig_pvfn_inner.o(.text) for __rt_SIGPVFN_inner
    _get_argv.o(.text) refers (Special) to hrguard.o(.text) for __heap_region$guard
    _get_argv.o(.text) refers to h1_alloc_mt.o(.text) for malloc
    _get_argv.o(.text) refers to defsig_rtmem_outer.o(.text) for __rt_SIGRTMEM
    _get_argv.o(.text) refers to sys_command.o(.text) for _sys_command_string
    rtexit2.o(.ARM.Collect$$rtexit$$00000003) refers to libshutdown.o(.ARM.Collect$$libshutdown$$00000000) for __rt_lib_shutdown
    rtexit2.o(.ARM.Collect$$rtexit$$00000004) refers to sys_exit.o(.text) for _sys_exit
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000001) for .ARM.Collect$$rtexit$$00000001
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for .ARM.Collect$$rtexit$$00000003
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for .ARM.Collect$$rtexit$$00000004
    maybetermalloc2.o(.emb_text) refers (Special) to term_alloc.o(.text) for _terminate_alloc
    h1_extend.o(.text) refers to h1_free_mt.o(.text) for free
    h1_extend_mt.o(.text) refers to h1_free_mt.o(.text) for _free_internal
    defsig_abrt_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_fpe_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_rtred_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_rtmem_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_stak_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_cppl_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_segv_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_other.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    heapauxa.o(.text) refers to heapauxa.o(.data) for .data
    term_alloc.o(.text) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000D) for __rt_lib_shutdown_heap_2
    term_alloc.o(.text) refers to rt_heap_descriptor_twolibspace.o(.text) for __rt_heap_descriptor
    term_alloc.o(.text) refers to h1_final_mt.o(.text) for __Heap_Finalize
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000002) for __rt_lib_shutdown_cpp_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000007) for __rt_lib_shutdown_fp_trap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F) for __rt_lib_shutdown_heap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000010) for __rt_lib_shutdown_return
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A) for __rt_lib_shutdown_signal_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000004) for __rt_lib_shutdown_stdio_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C) for __rt_lib_shutdown_user_alloc_1
    h1_final_mt.o(.text) refers (Weak) to rtx_lib.o(i._mutex_free) for _mutex_free
    libshutdown2.o(.ARM.Collect$$libshutdown$$0000000D) refers (Weak) to term_alloc.o(.text) for _terminate_alloc
    main.o(.constdata__ZTVN6serial9interfaceE) refers to main.o(.constdata__ZTIN6serial9interfaceE) for typeinfo for serial::interface
    main.o(.constdata__ZTVN6serial9interfaceE) refers to pure_virt.o(i.__cxa_pure_virtual) for __cxa_pure_virtual
    main.o(.constdata__ZTIN6serial9interfaceE) refers to lib_rtti_impl.o(.constdata__ZTVN10__cxxabiv117__class_type_infoE) for vtable for __cxxabiv1::__class_type_info
    main.o(.constdata__ZTIN6serial9interfaceE) refers to main.o(.constdata__ZTSN6serial9interfaceE) for typeinfo name for serial::interface
    usart.o(.constdata__ZTVN5usart5usartE) refers to usart.o(.constdata__ZTIN5usart5usartE) for typeinfo for usart::usart
    usart.o(.constdata__ZTVN5usart5usartE) refers to usart.o(i._ZN5usart5usart3popERhj) for usart::usart::pop(unsigned char&, unsigned)
    usart.o(.constdata__ZTVN5usart5usartE) refers to usart.o(i._ZN5usart5usart3putEhj) for usart::usart::put(unsigned char, unsigned)
    usart.o(.constdata__ZTVN5usart5usartE) refers to usart.o(i._ZN5usart5usart5flushEv) for usart::usart::flush()
    usart.o(.constdata__ZTVN5usart5usartE) refers to usart.o(i._ZN5usart5usart12put_blockingEPKvj) for usart::usart::put_blocking(const void*, unsigned)
    usart.o(.constdata__ZTIN5usart5usartE) refers to lib_rtti_impl.o(.constdata__ZTVN10__cxxabiv120__si_class_type_infoE) for vtable for __cxxabiv1::__si_class_type_info
    usart.o(.constdata__ZTIN5usart5usartE) refers to usart.o(.constdata__ZTSN5usart5usartE) for typeinfo name for usart::usart
    usart.o(.constdata__ZTIN5usart5usartE) refers to main.o(.constdata__ZTIN6serial9interfaceE) for typeinfo for serial::interface
    lib_rtti_impl.o(.constdata__ZTVN10__cxxabiv123__fundamental_type_infoE) refers to lib_rtti_impl.o(.constdata__ZTIN10__cxxabiv123__fundamental_type_infoE) for typeinfo for __cxxabiv1::__fundamental_type_info
    lib_rtti_impl.o(.constdata__ZTVN10__cxxabiv123__fundamental_type_infoE) refers to lib_rtti_impl.o(i._ZN10__cxxabiv123__fundamental_type_infoD1Ev) for __cxxabiv1::__fundamental_type_info::~__fundamental_type_info()
    lib_rtti_impl.o(.constdata__ZTVN10__cxxabiv123__fundamental_type_infoE) refers to lib_rtti_impl.o(i._ZN10__cxxabiv123__fundamental_type_infoD0Ev) for __cxxabiv1::__fundamental_type_info::~__fundamental_type_info__deallocating()
    lib_rtti_impl.o(.constdata__ZTVN10__cxxabiv117__array_type_infoE) refers to lib_rtti_impl.o(.constdata__ZTIN10__cxxabiv117__array_type_infoE) for typeinfo for __cxxabiv1::__array_type_info
    lib_rtti_impl.o(.constdata__ZTVN10__cxxabiv117__array_type_infoE) refers to lib_rtti_impl.o(i._ZN10__cxxabiv117__array_type_infoD1Ev) for __cxxabiv1::__array_type_info::~__array_type_info()
    lib_rtti_impl.o(.constdata__ZTVN10__cxxabiv117__array_type_infoE) refers to lib_rtti_impl.o(i._ZN10__cxxabiv117__array_type_infoD0Ev) for __cxxabiv1::__array_type_info::~__array_type_info__deallocating()
    lib_rtti_impl.o(.constdata__ZTVN10__cxxabiv120__function_type_infoE) refers to lib_rtti_impl.o(.constdata__ZTIN10__cxxabiv120__function_type_infoE) for typeinfo for __cxxabiv1::__function_type_info
    lib_rtti_impl.o(.constdata__ZTVN10__cxxabiv120__function_type_infoE) refers to lib_rtti_impl.o(i._ZN10__cxxabiv120__function_type_infoD1Ev) for __cxxabiv1::__function_type_info::~__function_type_info()
    lib_rtti_impl.o(.constdata__ZTVN10__cxxabiv120__function_type_infoE) refers to lib_rtti_impl.o(i._ZN10__cxxabiv120__function_type_infoD0Ev) for __cxxabiv1::__function_type_info::~__function_type_info__deallocating()
    lib_rtti_impl.o(.constdata__ZTVN10__cxxabiv116__enum_type_infoE) refers to lib_rtti_impl.o(.constdata__ZTIN10__cxxabiv116__enum_type_infoE) for typeinfo for __cxxabiv1::__enum_type_info
    lib_rtti_impl.o(.constdata__ZTVN10__cxxabiv116__enum_type_infoE) refers to lib_rtti_impl.o(i._ZN10__cxxabiv116__enum_type_infoD1Ev) for __cxxabiv1::__enum_type_info::~__enum_type_info()
    lib_rtti_impl.o(.constdata__ZTVN10__cxxabiv116__enum_type_infoE) refers to lib_rtti_impl.o(i._ZN10__cxxabiv116__enum_type_infoD0Ev) for __cxxabiv1::__enum_type_info::~__enum_type_info__deallocating()
    lib_rtti_impl.o(.constdata__ZTVN10__cxxabiv117__class_type_infoE) refers to lib_rtti_impl.o(.constdata__ZTIN10__cxxabiv117__class_type_infoE) for typeinfo for __cxxabiv1::__class_type_info
    lib_rtti_impl.o(.constdata__ZTVN10__cxxabiv117__class_type_infoE) refers to lib_rtti_impl.o(i._ZN10__cxxabiv117__class_type_infoD1Ev) for __cxxabiv1::__class_type_info::~__class_type_info()
    lib_rtti_impl.o(.constdata__ZTVN10__cxxabiv117__class_type_infoE) refers to lib_rtti_impl.o(i._ZN10__cxxabiv117__class_type_infoD0Ev) for __cxxabiv1::__class_type_info::~__class_type_info__deallocating()
    lib_rtti_impl.o(.constdata__ZTVN10__cxxabiv120__si_class_type_infoE) refers to lib_rtti_impl.o(.constdata__ZTIN10__cxxabiv120__si_class_type_infoE) for typeinfo for __cxxabiv1::__si_class_type_info
    lib_rtti_impl.o(.constdata__ZTVN10__cxxabiv120__si_class_type_infoE) refers to lib_rtti_impl.o(i._ZN10__cxxabiv120__si_class_type_infoD1Ev) for __cxxabiv1::__si_class_type_info::~__si_class_type_info()
    lib_rtti_impl.o(.constdata__ZTVN10__cxxabiv120__si_class_type_infoE) refers to lib_rtti_impl.o(i._ZN10__cxxabiv120__si_class_type_infoD0Ev) for __cxxabiv1::__si_class_type_info::~__si_class_type_info__deallocating()
    lib_rtti_impl.o(.constdata__ZTVN10__cxxabiv121__vmi_class_type_infoE) refers to lib_rtti_impl.o(.constdata__ZTIN10__cxxabiv121__vmi_class_type_infoE) for typeinfo for __cxxabiv1::__vmi_class_type_info
    lib_rtti_impl.o(.constdata__ZTVN10__cxxabiv121__vmi_class_type_infoE) refers to lib_rtti_impl.o(i._ZN10__cxxabiv121__vmi_class_type_infoD1Ev) for __cxxabiv1::__vmi_class_type_info::~__vmi_class_type_info()
    lib_rtti_impl.o(.constdata__ZTVN10__cxxabiv121__vmi_class_type_infoE) refers to lib_rtti_impl.o(i._ZN10__cxxabiv121__vmi_class_type_infoD0Ev) for __cxxabiv1::__vmi_class_type_info::~__vmi_class_type_info__deallocating()
    lib_rtti_impl.o(.constdata__ZTVN10__cxxabiv117__pbase_type_infoE) refers to lib_rtti_impl.o(.constdata__ZTIN10__cxxabiv117__pbase_type_infoE) for typeinfo for __cxxabiv1::__pbase_type_info
    lib_rtti_impl.o(.constdata__ZTVN10__cxxabiv117__pbase_type_infoE) refers to lib_rtti_impl.o(i._ZN10__cxxabiv117__pbase_type_infoD1Ev) for __cxxabiv1::__pbase_type_info::~__pbase_type_info()
    lib_rtti_impl.o(.constdata__ZTVN10__cxxabiv117__pbase_type_infoE) refers to lib_rtti_impl.o(i._ZN10__cxxabiv117__pbase_type_infoD0Ev) for __cxxabiv1::__pbase_type_info::~__pbase_type_info__deallocating()
    lib_rtti_impl.o(.constdata__ZTVN10__cxxabiv119__pointer_type_infoE) refers to lib_rtti_impl.o(.constdata__ZTIN10__cxxabiv119__pointer_type_infoE) for typeinfo for __cxxabiv1::__pointer_type_info
    lib_rtti_impl.o(.constdata__ZTVN10__cxxabiv119__pointer_type_infoE) refers to lib_rtti_impl.o(i._ZN10__cxxabiv119__pointer_type_infoD1Ev) for __cxxabiv1::__pointer_type_info::~__pointer_type_info()
    lib_rtti_impl.o(.constdata__ZTVN10__cxxabiv119__pointer_type_infoE) refers to lib_rtti_impl.o(i._ZN10__cxxabiv119__pointer_type_infoD0Ev) for __cxxabiv1::__pointer_type_info::~__pointer_type_info__deallocating()
    lib_rtti_impl.o(.constdata__ZTVN10__cxxabiv129__pointer_to_member_type_infoE) refers to lib_rtti_impl.o(.constdata__ZTIN10__cxxabiv129__pointer_to_member_type_infoE) for typeinfo for __cxxabiv1::__pointer_to_member_type_info
    lib_rtti_impl.o(.constdata__ZTVN10__cxxabiv129__pointer_to_member_type_infoE) refers to lib_rtti_impl.o(i._ZN10__cxxabiv129__pointer_to_member_type_infoD1Ev) for __cxxabiv1::__pointer_to_member_type_info::~__pointer_to_member_type_info()
    lib_rtti_impl.o(.constdata__ZTVN10__cxxabiv129__pointer_to_member_type_infoE) refers to lib_rtti_impl.o(i._ZN10__cxxabiv129__pointer_to_member_type_infoD0Ev) for __cxxabiv1::__pointer_to_member_type_info::~__pointer_to_member_type_info__deallocating()
    lib_rtti_impl.o(.ARM.exidx) refers to lib_rtti_impl.o(i._ZNSt9type_infodlEPv) for i._ZNSt9type_infodlEPv
    lib_rtti_impl.o(.constdata__ZTIN10__cxxabiv123__fundamental_type_infoE) refers to lib_rtti_impl.o(.constdata__ZTVN10__cxxabiv120__si_class_type_infoE) for vtable for __cxxabiv1::__si_class_type_info
    lib_rtti_impl.o(.constdata__ZTIN10__cxxabiv123__fundamental_type_infoE) refers to lib_rtti_impl.o(.constdata__ZTSN10__cxxabiv123__fundamental_type_infoE) for typeinfo name for __cxxabiv1::__fundamental_type_info
    lib_rtti_impl.o(.constdata__ZTIN10__cxxabiv123__fundamental_type_infoE) refers to type_info_dtor.o(.constdata__ZTISt9type_info) for typeinfo for std::type_info
    lib_rtti_impl.o(.constdata__ZTIN10__cxxabiv117__array_type_infoE) refers to lib_rtti_impl.o(.constdata__ZTVN10__cxxabiv120__si_class_type_infoE) for vtable for __cxxabiv1::__si_class_type_info
    lib_rtti_impl.o(.constdata__ZTIN10__cxxabiv117__array_type_infoE) refers to lib_rtti_impl.o(.constdata__ZTSN10__cxxabiv117__array_type_infoE) for typeinfo name for __cxxabiv1::__array_type_info
    lib_rtti_impl.o(.constdata__ZTIN10__cxxabiv117__array_type_infoE) refers to type_info_dtor.o(.constdata__ZTISt9type_info) for typeinfo for std::type_info
    lib_rtti_impl.o(.constdata__ZTIN10__cxxabiv120__function_type_infoE) refers to lib_rtti_impl.o(.constdata__ZTVN10__cxxabiv120__si_class_type_infoE) for vtable for __cxxabiv1::__si_class_type_info
    lib_rtti_impl.o(.constdata__ZTIN10__cxxabiv120__function_type_infoE) refers to lib_rtti_impl.o(.constdata__ZTSN10__cxxabiv120__function_type_infoE) for typeinfo name for __cxxabiv1::__function_type_info
    lib_rtti_impl.o(.constdata__ZTIN10__cxxabiv120__function_type_infoE) refers to type_info_dtor.o(.constdata__ZTISt9type_info) for typeinfo for std::type_info
    lib_rtti_impl.o(.constdata__ZTIN10__cxxabiv116__enum_type_infoE) refers to lib_rtti_impl.o(.constdata__ZTVN10__cxxabiv120__si_class_type_infoE) for vtable for __cxxabiv1::__si_class_type_info
    lib_rtti_impl.o(.constdata__ZTIN10__cxxabiv116__enum_type_infoE) refers to lib_rtti_impl.o(.constdata__ZTSN10__cxxabiv116__enum_type_infoE) for typeinfo name for __cxxabiv1::__enum_type_info
    lib_rtti_impl.o(.constdata__ZTIN10__cxxabiv116__enum_type_infoE) refers to type_info_dtor.o(.constdata__ZTISt9type_info) for typeinfo for std::type_info
    lib_rtti_impl.o(.constdata__ZTIN10__cxxabiv117__class_type_infoE) refers to lib_rtti_impl.o(.constdata__ZTVN10__cxxabiv120__si_class_type_infoE) for vtable for __cxxabiv1::__si_class_type_info
    lib_rtti_impl.o(.constdata__ZTIN10__cxxabiv117__class_type_infoE) refers to lib_rtti_impl.o(.constdata__ZTSN10__cxxabiv117__class_type_infoE) for typeinfo name for __cxxabiv1::__class_type_info
    lib_rtti_impl.o(.constdata__ZTIN10__cxxabiv117__class_type_infoE) refers to type_info_dtor.o(.constdata__ZTISt9type_info) for typeinfo for std::type_info
    lib_rtti_impl.o(.constdata__ZTIN10__cxxabiv120__si_class_type_infoE) refers to lib_rtti_impl.o(.constdata__ZTVN10__cxxabiv120__si_class_type_infoE) for vtable for __cxxabiv1::__si_class_type_info
    lib_rtti_impl.o(.constdata__ZTIN10__cxxabiv120__si_class_type_infoE) refers to lib_rtti_impl.o(.constdata__ZTSN10__cxxabiv120__si_class_type_infoE) for typeinfo name for __cxxabiv1::__si_class_type_info
    lib_rtti_impl.o(.constdata__ZTIN10__cxxabiv120__si_class_type_infoE) refers to lib_rtti_impl.o(.constdata__ZTIN10__cxxabiv117__class_type_infoE) for typeinfo for __cxxabiv1::__class_type_info
    lib_rtti_impl.o(.constdata__ZTIN10__cxxabiv121__vmi_class_type_infoE) refers to lib_rtti_impl.o(.constdata__ZTVN10__cxxabiv120__si_class_type_infoE) for vtable for __cxxabiv1::__si_class_type_info
    lib_rtti_impl.o(.constdata__ZTIN10__cxxabiv121__vmi_class_type_infoE) refers to lib_rtti_impl.o(.constdata__ZTSN10__cxxabiv121__vmi_class_type_infoE) for typeinfo name for __cxxabiv1::__vmi_class_type_info
    lib_rtti_impl.o(.constdata__ZTIN10__cxxabiv121__vmi_class_type_infoE) refers to lib_rtti_impl.o(.constdata__ZTIN10__cxxabiv117__class_type_infoE) for typeinfo for __cxxabiv1::__class_type_info
    lib_rtti_impl.o(.constdata__ZTIN10__cxxabiv117__pbase_type_infoE) refers to lib_rtti_impl.o(.constdata__ZTVN10__cxxabiv120__si_class_type_infoE) for vtable for __cxxabiv1::__si_class_type_info
    lib_rtti_impl.o(.constdata__ZTIN10__cxxabiv117__pbase_type_infoE) refers to lib_rtti_impl.o(.constdata__ZTSN10__cxxabiv117__pbase_type_infoE) for typeinfo name for __cxxabiv1::__pbase_type_info
    lib_rtti_impl.o(.constdata__ZTIN10__cxxabiv117__pbase_type_infoE) refers to type_info_dtor.o(.constdata__ZTISt9type_info) for typeinfo for std::type_info
    lib_rtti_impl.o(.constdata__ZTIN10__cxxabiv119__pointer_type_infoE) refers to lib_rtti_impl.o(.constdata__ZTVN10__cxxabiv120__si_class_type_infoE) for vtable for __cxxabiv1::__si_class_type_info
    lib_rtti_impl.o(.constdata__ZTIN10__cxxabiv119__pointer_type_infoE) refers to lib_rtti_impl.o(.constdata__ZTSN10__cxxabiv119__pointer_type_infoE) for typeinfo name for __cxxabiv1::__pointer_type_info
    lib_rtti_impl.o(.constdata__ZTIN10__cxxabiv119__pointer_type_infoE) refers to lib_rtti_impl.o(.constdata__ZTIN10__cxxabiv117__pbase_type_infoE) for typeinfo for __cxxabiv1::__pbase_type_info
    lib_rtti_impl.o(.constdata__ZTIN10__cxxabiv129__pointer_to_member_type_infoE) refers to lib_rtti_impl.o(.constdata__ZTVN10__cxxabiv120__si_class_type_infoE) for vtable for __cxxabiv1::__si_class_type_info
    lib_rtti_impl.o(.constdata__ZTIN10__cxxabiv129__pointer_to_member_type_infoE) refers to lib_rtti_impl.o(.constdata__ZTSN10__cxxabiv129__pointer_to_member_type_infoE) for typeinfo name for __cxxabiv1::__pointer_to_member_type_info
    lib_rtti_impl.o(.constdata__ZTIN10__cxxabiv129__pointer_to_member_type_infoE) refers to lib_rtti_impl.o(.constdata__ZTIN10__cxxabiv117__pbase_type_infoE) for typeinfo for __cxxabiv1::__pbase_type_info
    lib_rtti_impl.o(i.__ARM_common_noexcept_landing) refers to arm_exceptions_callterm.o(.text) for __cxa_call_terminate
    lib_rtti_impl.o(.ARM.exidx) refers to lib_rtti_impl.o(i.__ARM_common_noexcept_landing) for i.__ARM_common_noexcept_landing
    type_info_dtor.o(.constdata__ZTVSt9type_info) refers to type_info_dtor.o(.constdata__ZTISt9type_info) for typeinfo for std::type_info
    type_info_dtor.o(.constdata__ZTVSt9type_info) refers to type_info_dtor.o(i._ZNSt9type_infoD1Ev) for std::type_info::~type_info()
    type_info_dtor.o(.constdata__ZTVSt9type_info) refers to type_info_dtor.o(i._ZNSt9type_infoD0Ev) for std::type_info::~type_info__deallocating()
    type_info_dtor.o(.constdata__ZTISt9type_info) refers to lib_rtti_impl.o(.constdata__ZTVN10__cxxabiv117__class_type_infoE) for vtable for __cxxabiv1::__class_type_info
    type_info_dtor.o(.constdata__ZTISt9type_info) refers to type_info_dtor.o(.constdata__ZTSSt9type_info) for typeinfo name for std::type_info


==============================================================================

Removing Unused input sections from the image.

    Removing main.o(.rev16_text), (4 bytes).
    Removing main.o(.revsh_text), (4 bytes).
    Removing main.o(.rrx_text), (6 bytes).
    Removing main.o(.ARM.exidx), (8 bytes).
    Removing main.o(.ARM.exidx), (8 bytes).
    Removing main.o(.ARM.exidx), (8 bytes).
    Removing main.o(.ARM.exidx), (8 bytes).
    Removing ring_pipe.o(i._ZN9ring_pipe10enaple_putEb), (8 bytes).
    Removing ring_pipe.o(i._ZN9ring_pipe8is_emptyEv), (20 bytes).
    Removing ring_pipe.o(.ARM.exidx), (8 bytes).
    Removing ring_pipe.o(.ARM.exidx), (8 bytes).
    Removing ring_pipe.o(.ARM.exidx), (8 bytes).
    Removing ring_pipe.o(.ARM.exidx), (8 bytes).
    Removing ring_pipe.o(.ARM.exidx), (8 bytes).
    Removing ring_pipe.o(.ARM.exidx), (8 bytes).
    Removing usart.o(.rev16_text), (4 bytes).
    Removing usart.o(.revsh_text), (4 bytes).
    Removing usart.o(.rrx_text), (6 bytes).
    Removing usart.o(i._ZN5usart5usart5flushEv), (6 bytes).
    Removing usart.o(.ARM.exidx), (8 bytes).
    Removing usart.o(.ARM.exidx), (8 bytes).
    Removing usart.o(.ARM.exidx), (8 bytes).
    Removing usart.o(.ARM.exidx), (8 bytes).
    Removing usart.o(.ARM.exidx), (8 bytes).
    Removing usart.o(.ARM.exidx), (8 bytes).
    Removing usart.o(.ARM.exidx), (8 bytes).
    Removing usart.o(.ARM.exidx), (8 bytes).
    Removing svvis_threads.o(.ARM.exidx), (8 bytes).
    Removing svvis_threads.o(.ARM.exidx), (8 bytes).
    Removing svvis_threads.o(.ARM.exidx), (8 bytes).
    Removing svvis.o(i._ZN5SvVis5SvVis10send_floatEhfj), (48 bytes).
    Removing svvis.o(i._ZN5SvVis5SvVis12max_priorityEv), (12 bytes).
    Removing svvis.o(i._ZN5SvVis5SvVis5flushEv), (46 bytes).
    Removing svvis.o(i._ZN5SvVis5SvVis8send_strEPKcj), (66 bytes).
    Removing svvis.o(i._ZN5SvVis5SvVis9availableEv), (12 bytes).
    Removing svvis.o(.ARM.exidx), (8 bytes).
    Removing svvis.o(.ARM.exidx), (8 bytes).
    Removing svvis.o(.ARM.exidx), (8 bytes).
    Removing svvis.o(.ARM.exidx), (8 bytes).
    Removing svvis.o(.ARM.exidx), (8 bytes).
    Removing svvis.o(.ARM.exidx), (8 bytes).
    Removing svvis.o(.ARM.exidx), (8 bytes).
    Removing svvis.o(.ARM.exidx), (8 bytes).
    Removing svvis.o(.ARM.exidx), (8 bytes).
    Removing rtx_lib.o(.rev16_text), (4 bytes).
    Removing rtx_lib.o(.revsh_text), (4 bytes).
    Removing rtx_lib.o(.rrx_text), (6 bytes).
    Removing rtx_lib.o(i.__user_perthread_libspace), (112 bytes).
    Removing rtx_config.o(.rev16_text), (4 bytes).
    Removing rtx_config.o(.revsh_text), (4 bytes).
    Removing rtx_config.o(.rrx_text), (6 bytes).
    Removing misc.o(.rev16_text), (4 bytes).
    Removing misc.o(.revsh_text), (4 bytes).
    Removing misc.o(.rrx_text), (6 bytes).
    Removing misc.o(i.NVIC_PriorityGroupConfig), (20 bytes).
    Removing misc.o(i.NVIC_SetVectorTable), (20 bytes).
    Removing misc.o(i.NVIC_SystemLPConfig), (32 bytes).
    Removing misc.o(i.SysTick_CLKSourceConfig), (40 bytes).
    Removing stm32f10x_gpio.o(.rev16_text), (4 bytes).
    Removing stm32f10x_gpio.o(.revsh_text), (4 bytes).
    Removing stm32f10x_gpio.o(.rrx_text), (6 bytes).
    Removing stm32f10x_gpio.o(i.GPIO_AFIODeInit), (20 bytes).
    Removing stm32f10x_gpio.o(i.GPIO_DeInit), (200 bytes).
    Removing stm32f10x_gpio.o(i.GPIO_ETH_MediaInterfaceConfig), (12 bytes).
    Removing stm32f10x_gpio.o(i.GPIO_EXTILineConfig), (64 bytes).
    Removing stm32f10x_gpio.o(i.GPIO_EventOutputCmd), (12 bytes).
    Removing stm32f10x_gpio.o(i.GPIO_EventOutputConfig), (32 bytes).
    Removing stm32f10x_gpio.o(i.GPIO_PinLockConfig), (18 bytes).
    Removing stm32f10x_gpio.o(i.GPIO_PinRemapConfig), (144 bytes).
    Removing stm32f10x_gpio.o(i.GPIO_ReadInputData), (8 bytes).
    Removing stm32f10x_gpio.o(i.GPIO_ReadInputDataBit), (18 bytes).
    Removing stm32f10x_gpio.o(i.GPIO_ReadOutputData), (8 bytes).
    Removing stm32f10x_gpio.o(i.GPIO_ReadOutputDataBit), (18 bytes).
    Removing stm32f10x_gpio.o(i.GPIO_ResetBits), (4 bytes).
    Removing stm32f10x_gpio.o(i.GPIO_SetBits), (4 bytes).
    Removing stm32f10x_gpio.o(i.GPIO_StructInit), (16 bytes).
    Removing stm32f10x_gpio.o(i.GPIO_Write), (4 bytes).
    Removing stm32f10x_gpio.o(i.GPIO_WriteBit), (10 bytes).
    Removing stm32f10x_rcc.o(.rev16_text), (4 bytes).
    Removing stm32f10x_rcc.o(.revsh_text), (4 bytes).
    Removing stm32f10x_rcc.o(.rrx_text), (6 bytes).
    Removing stm32f10x_rcc.o(i.RCC_ADCCLKConfig), (24 bytes).
    Removing stm32f10x_rcc.o(i.RCC_AHBPeriphClockCmd), (32 bytes).
    Removing stm32f10x_rcc.o(i.RCC_AdjustHSICalibrationValue), (24 bytes).
    Removing stm32f10x_rcc.o(i.RCC_BackupResetCmd), (12 bytes).
    Removing stm32f10x_rcc.o(i.RCC_ClearFlag), (20 bytes).
    Removing stm32f10x_rcc.o(i.RCC_ClearITPendingBit), (12 bytes).
    Removing stm32f10x_rcc.o(i.RCC_ClockSecuritySystemCmd), (12 bytes).
    Removing stm32f10x_rcc.o(i.RCC_DeInit), (76 bytes).
    Removing stm32f10x_rcc.o(i.RCC_GetFlagStatus), (60 bytes).
    Removing stm32f10x_rcc.o(i.RCC_GetITStatus), (24 bytes).
    Removing stm32f10x_rcc.o(i.RCC_GetSYSCLKSource), (16 bytes).
    Removing stm32f10x_rcc.o(i.RCC_HCLKConfig), (24 bytes).
    Removing stm32f10x_rcc.o(i.RCC_HSEConfig), (76 bytes).
    Removing stm32f10x_rcc.o(i.RCC_HSICmd), (12 bytes).
    Removing stm32f10x_rcc.o(i.RCC_ITConfig), (32 bytes).
    Removing stm32f10x_rcc.o(i.RCC_LSEConfig), (52 bytes).
    Removing stm32f10x_rcc.o(i.RCC_LSICmd), (12 bytes).
    Removing stm32f10x_rcc.o(i.RCC_MCOConfig), (12 bytes).
    Removing stm32f10x_rcc.o(i.RCC_PCLK1Config), (24 bytes).
    Removing stm32f10x_rcc.o(i.RCC_PCLK2Config), (24 bytes).
    Removing stm32f10x_rcc.o(i.RCC_PLLCmd), (12 bytes).
    Removing stm32f10x_rcc.o(i.RCC_PLLConfig), (28 bytes).
    Removing stm32f10x_rcc.o(i.RCC_RTCCLKCmd), (12 bytes).
    Removing stm32f10x_rcc.o(i.RCC_RTCCLKConfig), (16 bytes).
    Removing stm32f10x_rcc.o(i.RCC_SYSCLKConfig), (24 bytes).
    Removing stm32f10x_rcc.o(i.RCC_USBCLKConfig), (12 bytes).
    Removing stm32f10x_rcc.o(i.RCC_WaitForHSEStartUp), (56 bytes).
    Removing stm32f10x_usart.o(.rev16_text), (4 bytes).
    Removing stm32f10x_usart.o(.revsh_text), (4 bytes).
    Removing stm32f10x_usart.o(.rrx_text), (6 bytes).
    Removing stm32f10x_usart.o(i.USART_ClearFlag), (18 bytes).
    Removing stm32f10x_usart.o(i.USART_ClockStructInit), (12 bytes).
    Removing stm32f10x_usart.o(i.USART_DMACmd), (18 bytes).
    Removing stm32f10x_usart.o(i.USART_GetITStatus), (84 bytes).
    Removing stm32f10x_usart.o(i.USART_HalfDuplexCmd), (24 bytes).
    Removing stm32f10x_usart.o(i.USART_IrDACmd), (24 bytes).
    Removing stm32f10x_usart.o(i.USART_IrDAConfig), (18 bytes).
    Removing stm32f10x_usart.o(i.USART_LINBreakDetectLengthConfig), (18 bytes).
    Removing stm32f10x_usart.o(i.USART_LINCmd), (24 bytes).
    Removing stm32f10x_usart.o(i.USART_OneBitMethodCmd), (24 bytes).
    Removing stm32f10x_usart.o(i.USART_OverSampling8Cmd), (22 bytes).
    Removing stm32f10x_usart.o(i.USART_ReceiverWakeUpCmd), (24 bytes).
    Removing stm32f10x_usart.o(i.USART_SendBreak), (10 bytes).
    Removing stm32f10x_usart.o(i.USART_SetAddress), (18 bytes).
    Removing stm32f10x_usart.o(i.USART_SetGuardTime), (16 bytes).
    Removing stm32f10x_usart.o(i.USART_SetPrescaler), (16 bytes).
    Removing stm32f10x_usart.o(i.USART_SmartCardCmd), (24 bytes).
    Removing stm32f10x_usart.o(i.USART_SmartCardNACKCmd), (24 bytes).
    Removing stm32f10x_usart.o(i.USART_StructInit), (24 bytes).
    Removing stm32f10x_usart.o(i.USART_WakeUpConfig), (18 bytes).
    Removing system_stm32f10x.o(.rev16_text), (4 bytes).
    Removing system_stm32f10x.o(.revsh_text), (4 bytes).
    Removing system_stm32f10x.o(.rrx_text), (6 bytes).
    Removing rtx_kernel.o(.text), (0 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelInitialize), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetInfo), (66 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetInfo), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetState), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelStart), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelLock), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelLock), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelUnlock), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelUnlock), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelRestoreLock), (46 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelRestoreLock), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelSuspend), (134 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelSuspend), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelResume), (226 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelResume), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetTickCount), (14 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetTickCount), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetTickFreq), (12 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetTickFreq), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount), (4 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetSysTimerCount), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetSysTimerFreq), (4 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetSysTimerFreq), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelInitialize), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetInfo), (112 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetInfo), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetState), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelStart), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelLock), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelLock), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelUnlock), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelUnlock), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelRestoreLock), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelRestoreLock), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelSuspend), (34 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelSuspend), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelResume), (34 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelResume), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetTickCount), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetTickCount), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetTickFreq), (34 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetTickFreq), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetSysTimerCount), (40 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetSysTimerCount), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetSysTimerFreq), (40 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetSysTimerFreq), (8 bytes).
    Removing rtx_kernel.o(.data.irqRtxLibRef), (4 bytes).
    Removing rtx_thread.o(.text), (0 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListPut), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListGet), (8 bytes).
    Removing rtx_thread.o(.text.osRtxThreadListRoot), (26 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListRoot), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListSort), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListRemove), (8 bytes).
    Removing rtx_thread.o(.text.osRtxThreadListUnlink), (26 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListUnlink), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadReadyPut), (8 bytes).
    Removing rtx_thread.o(.text.osRtxThreadDelayInsert), (160 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayInsert), (8 bytes).
    Removing rtx_thread.o(.text.osRtxThreadDelayRemove), (118 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayRemove), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayTick), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadRegPtr), (8 bytes).
    Removing rtx_thread.o(.text.osRtxThreadBlock), (70 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadBlock), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadSwitch), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadStackCheck), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadDispatch), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadWaitExit), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadWaitEnter), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadPostProcess), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadNew), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadExit), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetName), (22 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetName), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetId), (12 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetId), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetState), (22 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetState), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetStackSize), (22 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetStackSize), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetStackSpace), (74 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetStackSpace), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadSetPriority), (324 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadSetPriority), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetPriority), (30 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetPriority), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadYield), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadSuspend), (330 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadSuspend), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadResume), (170 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadResume), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadDetach), (186 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadDetach), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadJoin), (336 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadJoin), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadExit), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadTerminate), (664 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadTerminate), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetCount), (54 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetCount), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadEnumerate), (112 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadEnumerate), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadFlagsSet), (486 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsSet), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadFlagsClear), (82 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsClear), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadFlagsGet), (30 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsGet), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadFlagsWait), (194 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsWait), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadNew), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetName), (34 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetName), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetId), (34 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetId), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetState), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetState), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetStackSize), (34 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetStackSize), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetStackSpace), (34 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetStackSpace), (8 bytes).
    Removing rtx_thread.o(.text.osThreadSetPriority), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadSetPriority), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetPriority), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetPriority), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadYield), (8 bytes).
    Removing rtx_thread.o(.text.osThreadSuspend), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadSuspend), (8 bytes).
    Removing rtx_thread.o(.text.osThreadResume), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadResume), (8 bytes).
    Removing rtx_thread.o(.text.osThreadDetach), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadDetach), (8 bytes).
    Removing rtx_thread.o(.text.osThreadJoin), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadJoin), (8 bytes).
    Removing rtx_thread.o(.text.osThreadTerminate), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadTerminate), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetCount), (34 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetCount), (8 bytes).
    Removing rtx_thread.o(.text.osThreadEnumerate), (34 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadEnumerate), (8 bytes).
    Removing rtx_thread.o(.text.osThreadFlagsSet), (94 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadFlagsSet), (8 bytes).
    Removing rtx_thread.o(.text.osThreadFlagsClear), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadFlagsClear), (8 bytes).
    Removing rtx_thread.o(.text.osThreadFlagsGet), (34 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadFlagsGet), (8 bytes).
    Removing rtx_thread.o(.text.osThreadFlagsWait), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadFlagsWait), (8 bytes).
    Removing rtx_delay.o(.text), (0 bytes).
    Removing rtx_delay.o(.ARM.exidx.text.svcRtxDelay), (8 bytes).
    Removing rtx_delay.o(.text.svcRtxDelayUntil), (58 bytes).
    Removing rtx_delay.o(.ARM.exidx.text.svcRtxDelayUntil), (8 bytes).
    Removing rtx_delay.o(.ARM.exidx.text.osDelay), (8 bytes).
    Removing rtx_delay.o(.text.osDelayUntil), (36 bytes).
    Removing rtx_delay.o(.ARM.exidx.text.osDelayUntil), (8 bytes).
    Removing rtx_evflags.o(.text), (0 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.osRtxEventFlagsPostProcess), (8 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsNew), (8 bytes).
    Removing rtx_evflags.o(.text.svcRtxEventFlagsGetName), (22 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsGetName), (8 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsSet), (8 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsClear), (8 bytes).
    Removing rtx_evflags.o(.text.svcRtxEventFlagsGet), (22 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsGet), (8 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsWait), (8 bytes).
    Removing rtx_evflags.o(.text.svcRtxEventFlagsDelete), (116 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsDelete), (8 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.osEventFlagsNew), (8 bytes).
    Removing rtx_evflags.o(.text.osEventFlagsGetName), (34 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.osEventFlagsGetName), (8 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.osEventFlagsSet), (8 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.osEventFlagsClear), (8 bytes).
    Removing rtx_evflags.o(.text.osEventFlagsGet), (52 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.osEventFlagsGet), (8 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.osEventFlagsWait), (8 bytes).
    Removing rtx_evflags.o(.text.osEventFlagsDelete), (36 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.osEventFlagsDelete), (8 bytes).
    Removing rtx_mutex.o(.text), (0 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osRtxMutexOwnerRelease), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexNew), (8 bytes).
    Removing rtx_mutex.o(.text.svcRtxMutexGetName), (22 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexGetName), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexAcquire), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexRelease), (8 bytes).
    Removing rtx_mutex.o(.text.svcRtxMutexGetOwner), (28 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexGetOwner), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexDelete), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexNew), (8 bytes).
    Removing rtx_mutex.o(.text.osMutexGetName), (34 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexGetName), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexAcquire), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexRelease), (8 bytes).
    Removing rtx_mutex.o(.text.osMutexGetOwner), (34 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexGetOwner), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexDelete), (8 bytes).
    Removing rtx_semaphore.o(.text), (0 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.osRtxSemaphorePostProcess), (8 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreNew), (8 bytes).
    Removing rtx_semaphore.o(.text.svcRtxSemaphoreGetName), (22 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreGetName), (8 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreAcquire), (8 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreRelease), (8 bytes).
    Removing rtx_semaphore.o(.text.svcRtxSemaphoreGetCount), (22 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreGetCount), (8 bytes).
    Removing rtx_semaphore.o(.text.svcRtxSemaphoreDelete), (116 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreDelete), (8 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.osSemaphoreNew), (8 bytes).
    Removing rtx_semaphore.o(.text.osSemaphoreGetName), (34 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.osSemaphoreGetName), (8 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.osSemaphoreAcquire), (8 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.osSemaphoreRelease), (8 bytes).
    Removing rtx_semaphore.o(.text.osSemaphoreGetCount), (52 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.osSemaphoreGetCount), (8 bytes).
    Removing rtx_semaphore.o(.text.osSemaphoreDelete), (36 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.osSemaphoreDelete), (8 bytes).
    Removing rtx_mempool.o(.text), (0 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolInit), (8 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolAlloc), (8 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolFree), (8 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolPostProcess), (8 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolNew), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetName), (22 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetName), (8 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolAlloc), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolFree), (204 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolFree), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetCapacity), (22 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetCapacity), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetBlockSize), (22 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetBlockSize), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetCount), (22 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetCount), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetSpace), (26 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetSpace), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolDelete), (204 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolDelete), (8 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolNew), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetName), (34 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetName), (8 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolAlloc), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolFree), (154 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolFree), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetCapacity), (52 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetCapacity), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetBlockSize), (52 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetBlockSize), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetCount), (52 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetCount), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetSpace), (56 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetSpace), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolDelete), (36 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolDelete), (8 bytes).
    Removing rtx_msgqueue.o(.text), (0 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osRtxMessageQueuePostProcess), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueNew), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetName), (22 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetName), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueuePut), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGet), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetCapacity), (22 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetCapacity), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetMsgSize), (22 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetMsgSize), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetCount), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetSpace), (26 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetSpace), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueReset), (394 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueReset), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueDelete), (142 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueDelete), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueNew), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetName), (34 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetName), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueuePut), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGet), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetCapacity), (52 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetCapacity), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetMsgSize), (52 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetMsgSize), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetCount), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetSpace), (56 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetSpace), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueReset), (36 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueReset), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueDelete), (36 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueDelete), (8 bytes).
    Removing rtx_timer.o(.text), (0 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osRtxTimerTick), (8 bytes).
    Removing rtx_timer.o(.text.osRtxTimerThread), (42 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osRtxTimerThread), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerNew), (216 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerNew), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerGetName), (22 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerGetName), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerStart), (184 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerStart), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerStop), (82 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerStop), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerIsRunning), (24 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerIsRunning), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerDelete), (132 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerDelete), (8 bytes).
    Removing rtx_timer.o(.text.osTimerNew), (72 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerNew), (8 bytes).
    Removing rtx_timer.o(.text.osTimerGetName), (34 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerGetName), (8 bytes).
    Removing rtx_timer.o(.text.osTimerStart), (36 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerStart), (8 bytes).
    Removing rtx_timer.o(.text.osTimerStop), (36 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerStop), (8 bytes).
    Removing rtx_timer.o(.text.osTimerIsRunning), (34 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerIsRunning), (8 bytes).
    Removing rtx_timer.o(.text.osTimerDelete), (36 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerDelete), (8 bytes).
    Removing rtx_memory.o(.text), (0 bytes).
    Removing rtx_memory.o(.ARM.exidx.text.osRtxMemoryInit), (8 bytes).
    Removing rtx_memory.o(.ARM.exidx.text.osRtxMemoryAlloc), (8 bytes).
    Removing rtx_memory.o(.ARM.exidx.text.osRtxMemoryFree), (8 bytes).
    Removing rtx_system.o(.text), (0 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxTick_Handler), (8 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxSysTimerAckIRQ), (8 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxPendSV_Handler), (8 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxPostProcess), (8 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxSysTimerSetup), (8 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxSysTimerEnable), (8 bytes).
    Removing rtx_system.o(.text.osRtxSysTimerDisable), (14 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxSysTimerDisable), (8 bytes).
    Removing rtx_system.o(.text.osRtxSysTimerGetCount), (58 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxSysTimerGetCount), (8 bytes).
    Removing rtx_system.o(.text.osRtxSysTimerGetFreq), (12 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxSysTimerGetFreq), (8 bytes).
    Removing main.o(.constdata__ZTIN6serial9interfaceE), (8 bytes).
    Removing main.o(.constdata__ZTSN6serial9interfaceE), (20 bytes).
    Removing usart.o(.constdata__ZTIN5usart5usartE), (12 bytes).
    Removing usart.o(.constdata__ZTSN5usart5usartE), (15 bytes).

471 unused section(s) (total 13179 bytes) removed from the image.

==============================================================================

Image Symbol Table

    Local Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    ../../../Source/rtx_delay.c              0x00000000   Number         0  rtx_delay.o ABSOLUTE
    ../../../Source/rtx_evflags.c            0x00000000   Number         0  rtx_evflags.o ABSOLUTE
    ../../../Source/rtx_kernel.c             0x00000000   Number         0  rtx_kernel.o ABSOLUTE
    ../../../Source/rtx_memory.c             0x00000000   Number         0  rtx_memory.o ABSOLUTE
    ../../../Source/rtx_mempool.c            0x00000000   Number         0  rtx_mempool.o ABSOLUTE
    ../../../Source/rtx_msgqueue.c           0x00000000   Number         0  rtx_msgqueue.o ABSOLUTE
    ../../../Source/rtx_mutex.c              0x00000000   Number         0  rtx_mutex.o ABSOLUTE
    ../../../Source/rtx_semaphore.c          0x00000000   Number         0  rtx_semaphore.o ABSOLUTE
    ../../../Source/rtx_system.c             0x00000000   Number         0  rtx_system.o ABSOLUTE
    ../../../Source/rtx_thread.c             0x00000000   Number         0  rtx_thread.o ABSOLUTE
    ../../../Source/rtx_timer.c              0x00000000   Number         0  rtx_timer.o ABSOLUTE
    ../../../edgfe/lib_src/arm_exceptions.c  0x00000000   Number         0  arm_exceptions_globs.o ABSOLUTE
    ../../../edgfe/lib_src/arm_exceptions.c  0x00000000   Number         0  arm_exceptions_terminate.o ABSOLUTE
    ../../../edgfe/lib_src/arm_exceptions.c  0x00000000   Number         0  arm_exceptions_support.o ABSOLUTE
    ../../../edgfe/lib_src/arm_exceptions.c  0x00000000   Number         0  arm_exceptions_mem.o ABSOLUTE
    ../../../edgfe/lib_src/arm_exceptions.c  0x00000000   Number         0  arm_exceptions_callterm.o ABSOLUTE
    ../../../edgfe/lib_src/arm_noexceptions.c 0x00000000   Number         0  arm_begincatch_noexceptions.o ABSOLUTE
    ../../../edgfe/lib_src/pure_virt.c       0x00000000   Number         0  pure_virt.o ABSOLUTE
    ../../../edgfe/lib_src/typeinfo.c        0x00000000   Number         0  type_info_dtor.o ABSOLUTE
    ../../../edgfe/lib_src/typeinfo.c        0x00000000   Number         0  lib_rtti_impl.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardshut.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit1.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit3.o ABSOLUTE
    ../clib/angel/dczerorl2.s                0x00000000   Number         0  __dczerorl2.o ABSOLUTE
    ../clib/angel/handlers.s                 0x00000000   Number         0  __scatter_zi.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit2.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry4.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry2.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_eh_globals_addr_twolibspace.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_eh_globals_addr_intlibspace.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_eh_globals_addr.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_raise.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_heap_descriptor.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_heap_descriptor_intlibspace.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_heap_descriptor_twolibspace.o ABSOLUTE
    ../clib/angel/scatter.s                  0x00000000   Number         0  __scatter.o ABSOLUTE
    ../clib/angel/startup.s                  0x00000000   Number         0  __main.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  sys_stackheap_outer.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  indicate_semi.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  libspace.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  use_no_semi.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_exit.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_wrch.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_command.o ABSOLUTE
    ../clib/arm_runtime.c                    0x00000000   Number         0  init_aeabi.o ABSOLUTE
    ../clib/arm_runtime.c                    0x00000000   Number         0  init_aeabi.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  _get_argv.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  no_argv.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  argv_veneer.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  argv_veneer.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  _get_argv_nomalloc.o ABSOLUTE
    ../clib/heap1.c                          0x00000000   Number         0  h1_final.o ABSOLUTE
    ../clib/heap1.c                          0x00000000   Number         0  h1_init_mt.o ABSOLUTE
    ../clib/heap1.c                          0x00000000   Number         0  h1_extend.o ABSOLUTE
    ../clib/heap1.c                          0x00000000   Number         0  h1_free_mt.o ABSOLUTE
    ../clib/heap1.c                          0x00000000   Number         0  h1_free.o ABSOLUTE
    ../clib/heap1.c                          0x00000000   Number         0  h1_init.o ABSOLUTE
    ../clib/heap1.c                          0x00000000   Number         0  h1_extend_mt.o ABSOLUTE
    ../clib/heap1.c                          0x00000000   Number         0  h1_alloc_mt.o ABSOLUTE
    ../clib/heap1.c                          0x00000000   Number         0  h1_alloc.o ABSOLUTE
    ../clib/heap1.c                          0x00000000   Number         0  h1_final_mt.o ABSOLUTE
    ../clib/heap2.c                          0x00000000   Number         0  heap2mt.o ABSOLUTE
    ../clib/heap2.c                          0x00000000   Number         0  fdtree.o ABSOLUTE
    ../clib/heap2.c                          0x00000000   Number         0  heap2.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  maybetermalloc1.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  malloc.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  init_alloc.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  hguard.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  term_alloc.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  maybetermalloc2.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  maybetermalloc1.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  hrguard.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  maybetermalloc2.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  heapstubs.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  free.o ABSOLUTE
    ../clib/heapaux.c                        0x00000000   Number         0  heapauxa.o ABSOLUTE
    ../clib/heapaux.c                        0x00000000   Number         0  heapauxi.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown2.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit2.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memclr_w.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memclr.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  aeabi_memset4.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memcpy_w.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memcpy_v6.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  __raise.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_abrt_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_outer.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtred_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_formal.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_fpe_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_stak_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_abrt_outer.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_pvfn_outer.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_abrt_formal.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_cppl_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_other.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_exit.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_general.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_segv_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_pvfn_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_pvfn_formal.o ABSOLUTE
    ../clib/signal.s                         0x00000000   Number         0  defsig.o ABSOLUTE
    ../clib/stdlib.c                         0x00000000   Number         0  abort.o ABSOLUTE
    ../clib/stdlib.c                         0x00000000   Number         0  exit.o ABSOLUTE
    ../clib/string.c                         0x00000000   Number         0  strlen.o ABSOLUTE
    ../fplib/fpinit.s                        0x00000000   Number         0  fpinit.o ABSOLUTE
    ..\..\..\Source\ARM\irq_cm3.s            0x00000000   Number         0  irq_cm3.o ABSOLUTE
    C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.0.1\CMSIS\RTOS2\RTX\Source\rtx_lib.c 0x00000000   Number         0  rtx_lib.o ABSOLUTE
    C:\Keil_v5\ARM\PACK\Keil\STM32F1xx_DFP\2.3.0\Device\StdPeriph_Driver\src\misc.c 0x00000000   Number         0  misc.o ABSOLUTE
    C:\Keil_v5\ARM\PACK\Keil\STM32F1xx_DFP\2.3.0\Device\StdPeriph_Driver\src\stm32f10x_gpio.c 0x00000000   Number         0  stm32f10x_gpio.o ABSOLUTE
    C:\Keil_v5\ARM\PACK\Keil\STM32F1xx_DFP\2.3.0\Device\StdPeriph_Driver\src\stm32f10x_rcc.c 0x00000000   Number         0  stm32f10x_rcc.o ABSOLUTE
    C:\Keil_v5\ARM\PACK\Keil\STM32F1xx_DFP\2.3.0\Device\StdPeriph_Driver\src\stm32f10x_usart.c 0x00000000   Number         0  stm32f10x_usart.o ABSOLUTE
    C:\\Keil_v5\\ARM\\PACK\\ARM\\CMSIS\\5.0.1\\CMSIS\\RTOS2\\RTX\\Source\\rtx_lib.c 0x00000000   Number         0  rtx_lib.o ABSOLUTE
    C:\\Keil_v5\\ARM\\PACK\\Keil\\STM32F1xx_DFP\\2.3.0\\Device\\StdPeriph_Driver\\src\\misc.c 0x00000000   Number         0  misc.o ABSOLUTE
    C:\\Keil_v5\\ARM\\PACK\\Keil\\STM32F1xx_DFP\\2.3.0\\Device\\StdPeriph_Driver\\src\\stm32f10x_gpio.c 0x00000000   Number         0  stm32f10x_gpio.o ABSOLUTE
    C:\\Keil_v5\\ARM\\PACK\\Keil\\STM32F1xx_DFP\\2.3.0\\Device\\StdPeriph_Driver\\src\\stm32f10x_rcc.c 0x00000000   Number         0  stm32f10x_rcc.o ABSOLUTE
    C:\\Keil_v5\\ARM\\PACK\\Keil\\STM32F1xx_DFP\\2.3.0\\Device\\StdPeriph_Driver\\src\\stm32f10x_usart.c 0x00000000   Number         0  stm32f10x_usart.o ABSOLUTE
    RTE\CMSIS\RTX_Config.c                   0x00000000   Number         0  rtx_config.o ABSOLUTE
    RTE\Device\STM32F103RB\startup_stm32f10x_md.s 0x00000000   Number         0  startup_stm32f10x_md.o ABSOLUTE
    RTE\Device\STM32F103RB\system_stm32f10x.c 0x00000000   Number         0  system_stm32f10x.o ABSOLUTE
    RTE\\CMSIS\\RTX_Config.c                 0x00000000   Number         0  rtx_config.o ABSOLUTE
    RTE\\Device\\STM32F103RB\\system_stm32f10x.c 0x00000000   Number         0  system_stm32f10x.o ABSOLUTE
    SvVis.cpp                                0x00000000   Number         0  svvis.o ABSOLUTE
    SvVis_threads.cpp                        0x00000000   Number         0  svvis_threads.o ABSOLUTE
    USART.cpp                                0x00000000   Number         0  usart.o ABSOLUTE
    USART.cpp                                0x00000000   Number         0  usart.o ABSOLUTE
    dc.s                                     0x00000000   Number         0  dc.o ABSOLUTE
    main.cpp                                 0x00000000   Number         0  main.o ABSOLUTE
    main.cpp                                 0x00000000   Number         0  main.o ABSOLUTE
    ring_pipe.cpp                            0x00000000   Number         0  ring_pipe.o ABSOLUTE
    RESET                                    0x08000000   Section      236  startup_stm32f10x_md.o(RESET)
    !!!main                                  0x080000ec   Section        8  __main.o(!!!main)
    !!!scatter                               0x080000f4   Section       52  __scatter.o(!!!scatter)
    !!dczerorl2                              0x08000128   Section       90  __dczerorl2.o(!!dczerorl2)
    !!handler_zi                             0x08000184   Section       28  __scatter_zi.o(!!handler_zi)
    .ARM.Collect$$libinit$$00000000          0x080001a0   Section        2  libinit.o(.ARM.Collect$$libinit$$00000000)
    .ARM.Collect$$libinit$$00000002          0x080001a2   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000002)
    .ARM.Collect$$libinit$$00000004          0x080001a2   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000004)
    .ARM.Collect$$libinit$$0000000A          0x080001a2   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000A)
    .ARM.Collect$$libinit$$0000000C          0x080001a2   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    .ARM.Collect$$libinit$$0000000E          0x080001a2   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000E)
    .ARM.Collect$$libinit$$00000011          0x080001a2   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000011)
    .ARM.Collect$$libinit$$00000013          0x080001a2   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    .ARM.Collect$$libinit$$00000015          0x080001a2   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    .ARM.Collect$$libinit$$00000017          0x080001a2   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    .ARM.Collect$$libinit$$00000019          0x080001a2   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    .ARM.Collect$$libinit$$0000001B          0x080001a2   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    .ARM.Collect$$libinit$$0000001D          0x080001a2   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    .ARM.Collect$$libinit$$0000001F          0x080001a2   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    .ARM.Collect$$libinit$$00000021          0x080001a2   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    .ARM.Collect$$libinit$$00000023          0x080001a2   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    .ARM.Collect$$libinit$$00000025          0x080001a2   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000025)
    .ARM.Collect$$libinit$$0000002C          0x080001a2   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000002C)
    .ARM.Collect$$libinit$$0000002E          0x080001a2   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    .ARM.Collect$$libinit$$00000030          0x080001a2   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    .ARM.Collect$$libinit$$00000031          0x080001a2   Section        4  libinit2.o(.ARM.Collect$$libinit$$00000031)
    .ARM.Collect$$libinit$$00000032          0x080001a6   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000032)
    .ARM.Collect$$libinit$$00000033          0x080001a6   Section        2  libinit2.o(.ARM.Collect$$libinit$$00000033)
    .ARM.Collect$$libshutdown$$00000000      0x080001a8   Section        2  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    .ARM.Collect$$libshutdown$$00000002      0x080001aa   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000002)
    .ARM.Collect$$libshutdown$$00000004      0x080001aa   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000004)
    .ARM.Collect$$libshutdown$$00000007      0x080001aa   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000007)
    .ARM.Collect$$libshutdown$$0000000A      0x080001aa   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A)
    .ARM.Collect$$libshutdown$$0000000C      0x080001aa   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C)
    .ARM.Collect$$libshutdown$$0000000F      0x080001aa   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    .ARM.Collect$$libshutdown$$00000010      0x080001aa   Section        2  libshutdown2.o(.ARM.Collect$$libshutdown$$00000010)
    .ARM.Collect$$rtentry$$00000000          0x080001ac   Section        0  __rtentry.o(.ARM.Collect$$rtentry$$00000000)
    .ARM.Collect$$rtentry$$00000002          0x080001ac   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    .ARM.Collect$$rtentry$$00000004          0x080001ac   Section        6  __rtentry4.o(.ARM.Collect$$rtentry$$00000004)
    .ARM.Collect$$rtentry$$00000008          0x080001b2   Section        8  __rtentry2.o(.ARM.Collect$$rtentry$$00000008)
    .ARM.Collect$$rtentry$$0000000A          0x080001ba   Section        4  __rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    .ARM.Collect$$rtentry$$0000000C          0x080001be   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    .ARM.Collect$$rtentry$$0000000D          0x080001be   Section        8  __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    .ARM.Collect$$rtexit$$00000000           0x080001c6   Section        2  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    .ARM.Collect$$rtexit$$00000002           0x080001c8   Section        0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    .ARM.Collect$$rtexit$$00000003           0x080001c8   Section        4  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    .ARM.Collect$$rtexit$$00000004           0x080001cc   Section        6  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    .text                                    0x080001d4   Section       64  startup_stm32f10x_md.o(.text)
    .text                                    0x08000214   Section      136  irq_cm3.o(.text)
    .text                                    0x0800029c   Section      138  rt_memcpy_v6.o(.text)
    .text                                    0x08000326   Section       16  aeabi_memset4.o(.text)
    .text                                    0x08000336   Section       68  rt_memclr.o(.text)
    .text                                    0x0800037a   Section       78  rt_memclr_w.o(.text)
    .text                                    0x080003c8   Section        0  heapauxi.o(.text)
    .text                                    0x080003d0   Section        0  init_aeabi.o(.text)
    .text                                    0x080003f4   Section        0  defsig_pvfn_outer.o(.text)
    .text                                    0x08000402   Section      100  rt_memcpy_w.o(.text)
    .text                                    0x08000466   Section        0  defsig_exit.o(.text)
    .text                                    0x08000470   Section        0  defsig_pvfn_inner.o(.text)
    .text                                    0x080004a0   Section        0  sys_exit.o(.text)
    .text                                    0x080004ac   Section       74  sys_stackheap_outer.o(.text)
    .text                                    0x080004f6   Section        0  exit.o(.text)
    .text                                    0x08000508   Section        0  defsig_general.o(.text)
    .text                                    0x0800053a   Section        0  sys_wrch.o(.text)
    .text                                    0x08000548   Section        8  libspace.o(.text)
    .text                                    0x08000550   Section        2  use_no_semi.o(.text)
    .text                                    0x08000552   Section        0  indicate_semi.o(.text)
    [Anonymous Symbol]                       0x08000554   Section        0  rtx_delay.o(.text.osDelay)
    [Anonymous Symbol]                       0x08000578   Section        0  rtx_evflags.o(.text.osEventFlagsClear)
    [Anonymous Symbol]                       0x080005d0   Section        0  rtx_evflags.o(.text.osEventFlagsNew)
    [Anonymous Symbol]                       0x0800060c   Section        0  rtx_evflags.o(.text.osEventFlagsSet)
    [Anonymous Symbol]                       0x08000668   Section        0  rtx_evflags.o(.text.osEventFlagsWait)
    [Anonymous Symbol]                       0x08000730   Section        0  rtx_kernel.o(.text.osKernelGetState)
    [Anonymous Symbol]                       0x0800076c   Section        0  rtx_kernel.o(.text.osKernelInitialize)
    [Anonymous Symbol]                       0x080007a8   Section        0  rtx_kernel.o(.text.osKernelStart)
    [Anonymous Symbol]                       0x080007e4   Section        0  rtx_mempool.o(.text.osMemoryPoolAlloc)
    [Anonymous Symbol]                       0x08000868   Section        0  rtx_mempool.o(.text.osMemoryPoolNew)
    [Anonymous Symbol]                       0x080008a4   Section        0  rtx_msgqueue.o(.text.osMessageQueueGet)
    [Anonymous Symbol]                       0x08000958   Section        0  rtx_msgqueue.o(.text.osMessageQueueGetCount)
    [Anonymous Symbol]                       0x0800098c   Section        0  rtx_msgqueue.o(.text.osMessageQueueNew)
    [Anonymous Symbol]                       0x080009c8   Section        0  rtx_msgqueue.o(.text.osMessageQueuePut)
    [Anonymous Symbol]                       0x08000a4c   Section        0  rtx_mutex.o(.text.osMutexAcquire)
    [Anonymous Symbol]                       0x08000a70   Section        0  rtx_mutex.o(.text.osMutexDelete)
    [Anonymous Symbol]                       0x08000a94   Section        0  rtx_mutex.o(.text.osMutexNew)
    [Anonymous Symbol]                       0x08000ad0   Section        0  rtx_mutex.o(.text.osMutexRelease)
    [Anonymous Symbol]                       0x08000af4   Section        0  rtx_evflags.o(.text.osRtxEventFlagsPostProcess)
    [Anonymous Symbol]                       0x08000b98   Section        0  rtx_memory.o(.text.osRtxMemoryAlloc)
    [Anonymous Symbol]                       0x08000c08   Section        0  rtx_memory.o(.text.osRtxMemoryFree)
    [Anonymous Symbol]                       0x08000c60   Section        0  rtx_memory.o(.text.osRtxMemoryInit)
    [Anonymous Symbol]                       0x08000c90   Section        0  rtx_mempool.o(.text.osRtxMemoryPoolAlloc)
    [Anonymous Symbol]                       0x08000cdc   Section        0  rtx_mempool.o(.text.osRtxMemoryPoolFree)
    [Anonymous Symbol]                       0x08000d38   Section        0  rtx_mempool.o(.text.osRtxMemoryPoolInit)
    [Anonymous Symbol]                       0x08000d88   Section        0  rtx_mempool.o(.text.osRtxMemoryPoolPostProcess)
    [Anonymous Symbol]                       0x08000dec   Section        0  rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess)
    [Anonymous Symbol]                       0x08000fac   Section        0  rtx_mutex.o(.text.osRtxMutexOwnerRelease)
    [Anonymous Symbol]                       0x08000ff8   Section        0  rtx_system.o(.text.osRtxPendSV_Handler)
    [Anonymous Symbol]                       0x080010a0   Section        0  rtx_system.o(.text.osRtxPostProcess)
    [Anonymous Symbol]                       0x08001118   Section        0  rtx_semaphore.o(.text.osRtxSemaphorePostProcess)
    [Anonymous Symbol]                       0x0800115c   Section        0  rtx_system.o(.text.osRtxSysTimerAckIRQ)
    [Anonymous Symbol]                       0x08001168   Section        0  rtx_system.o(.text.osRtxSysTimerEnable)
    [Anonymous Symbol]                       0x08001178   Section        0  rtx_system.o(.text.osRtxSysTimerSetup)
    [Anonymous Symbol]                       0x080011b4   Section        0  rtx_thread.o(.text.osRtxThreadDelayTick)
    [Anonymous Symbol]                       0x0800123c   Section        0  rtx_thread.o(.text.osRtxThreadDispatch)
    [Anonymous Symbol]                       0x08001394   Section        0  rtx_thread.o(.text.osRtxThreadListGet)
    [Anonymous Symbol]                       0x080013b0   Section        0  rtx_thread.o(.text.osRtxThreadListPut)
    [Anonymous Symbol]                       0x080013e8   Section        0  rtx_thread.o(.text.osRtxThreadListRemove)
    [Anonymous Symbol]                       0x08001404   Section        0  rtx_thread.o(.text.osRtxThreadListSort)
    [Anonymous Symbol]                       0x08001464   Section        0  rtx_thread.o(.text.osRtxThreadPostProcess)
    [Anonymous Symbol]                       0x0800158c   Section        0  rtx_thread.o(.text.osRtxThreadReadyPut)
    [Anonymous Symbol]                       0x080015d4   Section        0  rtx_thread.o(.text.osRtxThreadRegPtr)
    [Anonymous Symbol]                       0x080015dc   Section        0  rtx_thread.o(.text.osRtxThreadStackCheck)
    [Anonymous Symbol]                       0x0800160c   Section        0  rtx_thread.o(.text.osRtxThreadSwitch)
    [Anonymous Symbol]                       0x08001620   Section        0  rtx_thread.o(.text.osRtxThreadWaitEnter)
    [Anonymous Symbol]                       0x08001704   Section        0  rtx_thread.o(.text.osRtxThreadWaitExit)
    [Anonymous Symbol]                       0x080017c4   Section        0  rtx_system.o(.text.osRtxTick_Handler)
    [Anonymous Symbol]                       0x0800183c   Section        0  rtx_timer.o(.text.osRtxTimerTick)
    [Anonymous Symbol]                       0x080018e8   Section        0  rtx_semaphore.o(.text.osSemaphoreAcquire)
    [Anonymous Symbol]                       0x0800194c   Section        0  rtx_semaphore.o(.text.osSemaphoreNew)
    [Anonymous Symbol]                       0x08001988   Section        0  rtx_semaphore.o(.text.osSemaphoreRelease)
    [Anonymous Symbol]                       0x080019f8   Section        0  rtx_thread.o(.text.osThreadExit)
    [Anonymous Symbol]                       0x08001a08   Section        0  rtx_thread.o(.text.osThreadNew)
    [Anonymous Symbol]                       0x08001a44   Section        0  rtx_thread.o(.text.osThreadYield)
    [Anonymous Symbol]                       0x08001a68   Section        0  rtx_delay.o(.text.svcRtxDelay)
    [Anonymous Symbol]                       0x08001a7c   Section        0  rtx_evflags.o(.text.svcRtxEventFlagsClear)
    [Anonymous Symbol]                       0x08001ab8   Section        0  rtx_evflags.o(.text.svcRtxEventFlagsNew)
    [Anonymous Symbol]                       0x08001b30   Section        0  rtx_evflags.o(.text.svcRtxEventFlagsSet)
    [Anonymous Symbol]                       0x08001c28   Section        0  rtx_evflags.o(.text.svcRtxEventFlagsWait)
    [Anonymous Symbol]                       0x08001d04   Section        0  rtx_kernel.o(.text.svcRtxKernelGetState)
    [Anonymous Symbol]                       0x08001d10   Section        0  rtx_kernel.o(.text.svcRtxKernelInitialize)
    [Anonymous Symbol]                       0x08001ebc   Section        0  rtx_kernel.o(.text.svcRtxKernelStart)
    [Anonymous Symbol]                       0x08001f54   Section        0  rtx_mempool.o(.text.svcRtxMemoryPoolAlloc)
    [Anonymous Symbol]                       0x08001fd0   Section        0  rtx_mempool.o(.text.svcRtxMemoryPoolNew)
    [Anonymous Symbol]                       0x080021cc   Section        0  rtx_msgqueue.o(.text.svcRtxMessageQueueGet)
    [Anonymous Symbol]                       0x08002368   Section        0  rtx_msgqueue.o(.text.svcRtxMessageQueueGetCount)
    [Anonymous Symbol]                       0x08002380   Section        0  rtx_msgqueue.o(.text.svcRtxMessageQueueNew)
    [Anonymous Symbol]                       0x080024e0   Section        0  rtx_msgqueue.o(.text.svcRtxMessageQueuePut)
    [Anonymous Symbol]                       0x080025f8   Section        0  rtx_mutex.o(.text.svcRtxMutexAcquire)
    [Anonymous Symbol]                       0x08002698   Section        0  rtx_mutex.o(.text.svcRtxMutexDelete)
    [Anonymous Symbol]                       0x08002770   Section        0  rtx_mutex.o(.text.svcRtxMutexNew)
    [Anonymous Symbol]                       0x080027e4   Section        0  rtx_mutex.o(.text.svcRtxMutexRelease)
    [Anonymous Symbol]                       0x080028ac   Section        0  rtx_semaphore.o(.text.svcRtxSemaphoreAcquire)
    [Anonymous Symbol]                       0x08002918   Section        0  rtx_semaphore.o(.text.svcRtxSemaphoreNew)
    [Anonymous Symbol]                       0x080029a4   Section        0  rtx_semaphore.o(.text.svcRtxSemaphoreRelease)
    [Anonymous Symbol]                       0x08002a04   Section        0  rtx_thread.o(.text.svcRtxThreadExit)
    [Anonymous Symbol]                       0x08002b48   Section        0  rtx_thread.o(.text.svcRtxThreadNew)
    [Anonymous Symbol]                       0x08002d88   Section        0  rtx_thread.o(.text.svcRtxThreadYield)
    i.GPIO_Init                              0x08002e16   Section        0  stm32f10x_gpio.o(i.GPIO_Init)
    i.NVIC_Init                              0x08002f2c   Section        0  misc.o(i.NVIC_Init)
    i.RCC_APB1PeriphClockCmd                 0x08002f9c   Section        0  stm32f10x_rcc.o(i.RCC_APB1PeriphClockCmd)
    i.RCC_APB1PeriphResetCmd                 0x08002fbc   Section        0  stm32f10x_rcc.o(i.RCC_APB1PeriphResetCmd)
    i.RCC_APB2PeriphClockCmd                 0x08002fdc   Section        0  stm32f10x_rcc.o(i.RCC_APB2PeriphClockCmd)
    i.RCC_APB2PeriphResetCmd                 0x08002ffc   Section        0  stm32f10x_rcc.o(i.RCC_APB2PeriphResetCmd)
    i.RCC_GetClocksFreq                      0x0800301c   Section        0  stm32f10x_rcc.o(i.RCC_GetClocksFreq)
    i.SetSysClock                            0x080030f0   Section        0  system_stm32f10x.o(i.SetSysClock)
    SetSysClock                              0x080030f1   Thumb Code     8  system_stm32f10x.o(i.SetSysClock)
    i.SetSysClockTo72                        0x080030f8   Section        0  system_stm32f10x.o(i.SetSysClockTo72)
    SetSysClockTo72                          0x080030f9   Thumb Code   214  system_stm32f10x.o(i.SetSysClockTo72)
    i.SystemCoreClockUpdate                  0x080031d8   Section        0  system_stm32f10x.o(i.SystemCoreClockUpdate)
    i.SystemInit                             0x0800327c   Section        0  system_stm32f10x.o(i.SystemInit)
    i.USART1_IRQHandler                      0x080032dc   Section        0  usart.o(i.USART1_IRQHandler)
    i.USART2_IRQHandler                      0x08003304   Section        0  usart.o(i.USART2_IRQHandler)
    i.USART3_IRQHandler                      0x0800332c   Section        0  usart.o(i.USART3_IRQHandler)
    i.USART_ClearITPendingBit                0x08003354   Section        0  stm32f10x_usart.o(i.USART_ClearITPendingBit)
    i.USART_ClockInit                        0x08003372   Section        0  stm32f10x_usart.o(i.USART_ClockInit)
    i.USART_Cmd                              0x08003394   Section        0  stm32f10x_usart.o(i.USART_Cmd)
    i.USART_DeInit                           0x080033ac   Section        0  stm32f10x_usart.o(i.USART_DeInit)
    i.USART_GetFlagStatus                    0x08003448   Section        0  stm32f10x_usart.o(i.USART_GetFlagStatus)
    i.USART_ITConfig                         0x08003462   Section        0  stm32f10x_usart.o(i.USART_ITConfig)
    i.USART_Init                             0x080034ac   Section        0  stm32f10x_usart.o(i.USART_Init)
    i.USART_ReceiveData                      0x08003584   Section        0  stm32f10x_usart.o(i.USART_ReceiveData)
    i.USART_SendData                         0x0800358e   Section        0  stm32f10x_usart.o(i.USART_SendData)
    i._Z11main_threadPv                      0x08003598   Section        0  main.o(i._Z11main_threadPv)
    i._Z13send_tri_dataPv                    0x080035bc   Section        0  main.o(i._Z13send_tri_dataPv)
    i._ZN5SvVis5SvVis4initERN6serial9interfaceEjj 0x080035ec   Section        0  svvis.o(i._ZN5SvVis5SvVis4initERN6serial9interfaceEjj)
    i._ZN5SvVis5SvVis8recv_msgERNS_9message_tEj 0x08003660   Section        0  svvis.o(i._ZN5SvVis5SvVis8recv_msgERNS_9message_tEj)
    i._ZN5SvVis5SvVis8send_i16Ehsj           0x08003676   Section        0  svvis.o(i._ZN5SvVis5SvVis8send_i16Ehsj)
    i._ZN5SvVis5SvVis8send_msgERNS_9message_tEj 0x080036a8   Section        0  svvis.o(i._ZN5SvVis5SvVis8send_msgERNS_9message_tEj)
    i._ZN5SvVis5SvVis9func_recvEPv           0x080036dc   Section        0  svvis_threads.o(i._ZN5SvVis5SvVis9func_recvEPv)
    i._ZN5SvVis5SvVis9func_sendEPv           0x080037ce   Section        0  svvis_threads.o(i._ZN5SvVis5SvVis9func_sendEPv)
    i._ZN5SvVis8chid2lenEh                   0x08003824   Section        0  svvis_threads.o(i._ZN5SvVis8chid2lenEh)
    i._ZN5usart5usart12put_blockingEPKvj     0x0800384a   Section        0  usart.o(i._ZN5usart5usart12put_blockingEPKvj)
    i._ZN5usart5usart3popERhj                0x08003874   Section        0  usart.o(i._ZN5usart5usart3popERhj)
    i._ZN5usart5usart3putEhj                 0x08003888   Section        0  usart.o(i._ZN5usart5usart3putEhj)
    i._ZN5usart5usart4initEP13USART_TypeDefjj 0x080038b0   Section        0  usart.o(i._ZN5usart5usart4initEP13USART_TypeDefjj)
    i._ZN9ring_pipe3popERhj                  0x08003a80   Section        0  ring_pipe.o(i._ZN9ring_pipe3popERhj)
    i._ZN9ring_pipe3putEhj                   0x08003ab8   Section        0  ring_pipe.o(i._ZN9ring_pipe3putEhj)
    i._ZN9ring_pipe4initEj                   0x08003af8   Section        0  ring_pipe.o(i._ZN9ring_pipe4initEj)
    i._ZN9ring_pipe6accessEPh                0x08003b40   Section        0  ring_pipe.o(i._ZN9ring_pipe6accessEPh)
    i.__cxa_pure_virtual                     0x08003b5a   Section        0  pure_virt.o(i.__cxa_pure_virtual)
    i.__sti___8_main_cpp_usart1              0x08003b60   Section        0  main.o(i.__sti___8_main_cpp_usart1)
    __sti___8_main_cpp_usart1                0x08003b61   Thumb Code    18  main.o(i.__sti___8_main_cpp_usart1)
    i._mutex_acquire                         0x08003b84   Section        0  rtx_lib.o(i._mutex_acquire)
    __tagsym$$used                           0x08003b85   Number         0  rtx_lib.o(i._mutex_acquire)
    i._mutex_free                            0x08003b9a   Section        0  rtx_lib.o(i._mutex_free)
    __tagsym$$used                           0x08003b9b   Number         0  rtx_lib.o(i._mutex_free)
    i._mutex_initialize                      0x08003ba6   Section        0  rtx_lib.o(i._mutex_initialize)
    __tagsym$$used                           0x08003ba7   Number         0  rtx_lib.o(i._mutex_initialize)
    i._mutex_release                         0x08003bc6   Section        0  rtx_lib.o(i._mutex_release)
    __tagsym$$used                           0x08003bc7   Number         0  rtx_lib.o(i._mutex_release)
    i._platform_post_stackheap_init          0x08003bd8   Section        0  rtx_lib.o(i._platform_post_stackheap_init)
    i.main                                   0x08003be0   Section        0  main.o(i.main)
    i.osRtxErrorNotify                       0x08003c30   Section        0  rtx_config.o(i.osRtxErrorNotify)
    i.osRtxIdleThread                        0x08003c50   Section        0  rtx_config.o(i.osRtxIdleThread)
    i.os_kernel_is_active                    0x08003c54   Section        0  rtx_lib.o(i.os_kernel_is_active)
    os_kernel_is_active                      0x08003c55   Thumb Code    32  rtx_lib.o(i.os_kernel_is_active)
    .constdata                               0x08003c78   Section       20  main.o(.constdata)
    data_tri                                 0x08003c78   Data          20  main.o(.constdata)
    .constdata                               0x08003c8c   Section      100  rtx_lib.o(.constdata)
    os_idle_thread_attr                      0x08003c8c   Data          36  rtx_lib.o(.constdata)
    os_timer_thread_attr                     0x08003cb0   Data          36  rtx_lib.o(.constdata)
    os_timer_mq_attr                         0x08003cd4   Data          24  rtx_lib.o(.constdata)
    .constdata                               0x08003cf0   Section        1  irq_cm3.o(.constdata)
    .constdata__ZTVN5usart5usartE            0x08003cf4   Section       24  usart.o(.constdata__ZTVN5usart5usartE)
    .constdata__ZTVN6serial9interfaceE       0x08003d0c   Section       24  main.o(.constdata__ZTVN6serial9interfaceE)
    .rodata                                  0x08003d24   Section      104  rtx_lib.o(.rodata)
    __tagsym$$used                           0x08003d24   Number         0  rtx_lib.o(.rodata)
    [Anonymous Symbol]                       0x08003d8c   Section        0  rtx_kernel.o(.rodata.str1.4)
    .L.str                                   0x08003d8c   Data          11  rtx_kernel.o(.rodata.str1.4)
    .init_array                              0x08003db8   Section        4  main.o(.init_array)
    .init_array                              0x08003dbc   Section        0  init_aeabi.o(.init_array)
    .bss.os                                  0x20000000   Section     4656  rtx_lib.o(.bss.os)
    os_mem                                   0x20000000   Data        4096  rtx_lib.o(.bss.os)
    os_isr_queue                             0x20001000   Data          64  rtx_lib.o(.bss.os)
    os_libspace                              0x20001040   Data         480  rtx_lib.o(.bss.os)
    os_libspace_id                           0x20001220   Data          16  rtx_lib.o(.bss.os)
    .bss.os.msgqueue.cb                      0x20001230   Section       52  rtx_lib.o(.bss.os.msgqueue.cb)
    os_timer_mq_cb                           0x20001230   Data          52  rtx_lib.o(.bss.os.msgqueue.cb)
    .bss.os.msgqueue.mem                     0x20001264   Section       80  rtx_lib.o(.bss.os.msgqueue.mem)
    os_timer_mq_data                         0x20001264   Data          80  rtx_lib.o(.bss.os.msgqueue.mem)
    .bss.os.thread.cb                        0x200012b4   Section      136  rtx_lib.o(.bss.os.thread.cb)
    os_idle_thread_cb                        0x200012b4   Data          68  rtx_lib.o(.bss.os.thread.cb)
    os_timer_thread_cb                       0x200012f8   Data          68  rtx_lib.o(.bss.os.thread.cb)
    .bss.os.thread.stack                     0x20001340   Section      400  rtx_lib.o(.bss.os.thread.stack)
    os_idle_thread_stack                     0x20001340   Data         200  rtx_lib.o(.bss.os.thread.stack)
    os_timer_thread_stack                    0x20001408   Data         200  rtx_lib.o(.bss.os.thread.stack)
    .data                                    0x200014d0   Section       12  usart.o(.data)
    .data                                    0x200014dc   Section        5  rtx_lib.o(.data)
    os_kernel_active                         0x200014e0   Data           1  rtx_lib.o(.data)
    .data                                    0x200014e1   Section       20  stm32f10x_rcc.o(.data)
    APBAHBPrescTable                         0x200014e1   Data          16  stm32f10x_rcc.o(.data)
    ADCPrescTable                            0x200014f1   Data           4  stm32f10x_rcc.o(.data)
    .data                                    0x200014f8   Section       20  system_stm32f10x.o(.data)
    .bss                                     0x200015b8   Section       80  main.o(.bss)
    .bss                                     0x20001608   Section       96  usart.o(.bss)
    .bss                                     0x20001668   Section       96  libspace.o(.bss)
    HEAP                                     0x200016c8   Section      512  startup_stm32f10x_md.o(HEAP)
    Heap_Mem                                 0x200016c8   Data         512  startup_stm32f10x_md.o(HEAP)
    STACK                                    0x200018c8   Section     1024  startup_stm32f10x_md.o(STACK)
    Stack_Mem                                0x200018c8   Data        1024  startup_stm32f10x_md.o(STACK)
    __initial_sp                             0x20001cc8   Data           0  startup_stm32f10x_md.o(STACK)

    Global Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    BuildAttributes$$THM_ISAv4$P$D$K$B$S$PE$A:L22UL41UL21$X:L11$S22US41US21$IEEE1$IW$~IW$USESV6$~STKCKD$USESV7$~SHL$OTIME$ROPI$EBA8$UX$STANDARDLIB$REQ8$PRES8$EABIv2 0x00000000   Number         0  anon$$obj.o ABSOLUTE
    __ARM_use_no_argv                        0x00000000   Number         0  main.o ABSOLUTE
    __ARM::default_unexpected_handler()       - Undefined Weak Reference
    __ARM_exceptions_buffer_required          - Undefined Weak Reference
    __ARM_exceptions_init                     - Undefined Weak Reference
    __alloca_initialize                       - Undefined Weak Reference
    __arm_preinit_                            - Undefined Weak Reference
    __cxa_finalize                            - Undefined Weak Reference
    __rt_locale                               - Undefined Weak Reference
    __sigvec_lookup                           - Undefined Weak Reference
    __user_heap_extent                        - Undefined Weak Reference
    _atexit_init                              - Undefined Weak Reference
    _call_atexit_fns                          - Undefined Weak Reference
    _clock_init                               - Undefined Weak Reference
    _fp_trap_init                             - Undefined Weak Reference
    _fp_trap_shutdown                         - Undefined Weak Reference
    _get_lc_collate                           - Undefined Weak Reference
    _get_lc_ctype                             - Undefined Weak Reference
    _get_lc_monetary                          - Undefined Weak Reference
    _get_lc_numeric                           - Undefined Weak Reference
    _get_lc_time                              - Undefined Weak Reference
    _getenv_init                              - Undefined Weak Reference
    _handle_redirection                       - Undefined Weak Reference
    _initio                                   - Undefined Weak Reference
    _rand_init                                - Undefined Weak Reference
    _signal_finish                            - Undefined Weak Reference
    _signal_init                              - Undefined Weak Reference
    _terminateio                              - Undefined Weak Reference
    __Vectors_Size                           0x000000ec   Number         0  startup_stm32f10x_md.o ABSOLUTE
    __Vectors                                0x08000000   Data           4  startup_stm32f10x_md.o(RESET)
    __Vectors_End                            0x080000ec   Data           0  startup_stm32f10x_md.o(RESET)
    __main                                   0x080000ed   Thumb Code     8  __main.o(!!!main)
    __scatterload                            0x080000f5   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_rt2                        0x080000f5   Thumb Code    44  __scatter.o(!!!scatter)
    __scatterload_rt2_thumb_only             0x080000f5   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_null                       0x08000103   Thumb Code     0  __scatter.o(!!!scatter)
    __decompress                             0x08000129   Thumb Code    90  __dczerorl2.o(!!dczerorl2)
    __decompress1                            0x08000129   Thumb Code     0  __dczerorl2.o(!!dczerorl2)
    __scatterload_zeroinit                   0x08000185   Thumb Code    28  __scatter_zi.o(!!handler_zi)
    __rt_lib_init                            0x080001a1   Thumb Code     0  libinit.o(.ARM.Collect$$libinit$$00000000)
    __rt_lib_init_alloca_1                   0x080001a3   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    __rt_lib_init_argv_1                     0x080001a3   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000002C)
    __rt_lib_init_atexit_1                   0x080001a3   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    __rt_lib_init_clock_1                    0x080001a3   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    __rt_lib_init_cpp_2                      0x080001a3   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000031)
    __rt_lib_init_exceptions_1               0x080001a3   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    __rt_lib_init_fp_1                       0x080001a3   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000002)
    __rt_lib_init_fp_trap_1                  0x080001a3   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    __rt_lib_init_getenv_1                   0x080001a3   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    __rt_lib_init_heap_1                     0x080001a3   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000A)
    __rt_lib_init_lc_collate_1               0x080001a3   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000011)
    __rt_lib_init_lc_ctype_1                 0x080001a3   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    __rt_lib_init_lc_monetary_1              0x080001a3   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    __rt_lib_init_lc_numeric_1               0x080001a3   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    __rt_lib_init_lc_time_1                  0x080001a3   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    __rt_lib_init_preinit_1                  0x080001a3   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000004)
    __rt_lib_init_rand_1                     0x080001a3   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000E)
    __rt_lib_init_signal_1                   0x080001a3   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    __rt_lib_init_stdio_1                    0x080001a3   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000025)
    __rt_lib_init_user_alloc_1               0x080001a3   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    __rt_lib_init_cpp_1                      0x080001a7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000032)
    __rt_lib_init_return                     0x080001a7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000033)
    __rt_lib_shutdown                        0x080001a9   Thumb Code     0  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    __rt_lib_shutdown_cpp_1                  0x080001ab   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000002)
    __rt_lib_shutdown_fp_trap_1              0x080001ab   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000007)
    __rt_lib_shutdown_heap_1                 0x080001ab   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    __rt_lib_shutdown_return                 0x080001ab   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000010)
    __rt_lib_shutdown_signal_1               0x080001ab   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A)
    __rt_lib_shutdown_stdio_1                0x080001ab   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000004)
    __rt_lib_shutdown_user_alloc_1           0x080001ab   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C)
    __rt_entry                               0x080001ad   Thumb Code     0  __rtentry.o(.ARM.Collect$$rtentry$$00000000)
    __rt_entry_presh_1                       0x080001ad   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    __rt_entry_sh                            0x080001ad   Thumb Code     0  __rtentry4.o(.ARM.Collect$$rtentry$$00000004)
    __rt_entry_postsh_1                      0x080001b3   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$00000008)
    __rt_entry_li                            0x080001bb   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    __rt_entry_main                          0x080001bf   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    __rt_entry_postli_1                      0x080001bf   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    __rt_exit                                0x080001c7   Thumb Code     0  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    __rt_exit_ls                             0x080001c9   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    __rt_exit_prels_1                        0x080001c9   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    __rt_exit_exit                           0x080001cd   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    Reset_Handler                            0x080001d5   Thumb Code     8  startup_stm32f10x_md.o(.text)
    NMI_Handler                              0x080001dd   Thumb Code     2  startup_stm32f10x_md.o(.text)
    HardFault_Handler                        0x080001df   Thumb Code     2  startup_stm32f10x_md.o(.text)
    MemManage_Handler                        0x080001e1   Thumb Code     2  startup_stm32f10x_md.o(.text)
    BusFault_Handler                         0x080001e3   Thumb Code     2  startup_stm32f10x_md.o(.text)
    UsageFault_Handler                       0x080001e5   Thumb Code     2  startup_stm32f10x_md.o(.text)
    DebugMon_Handler                         0x080001e9   Thumb Code     2  startup_stm32f10x_md.o(.text)
    ADC1_2_IRQHandler                        0x080001ef   Thumb Code     0  startup_stm32f10x_md.o(.text)
    CAN1_RX1_IRQHandler                      0x080001ef   Thumb Code     0  startup_stm32f10x_md.o(.text)
    CAN1_SCE_IRQHandler                      0x080001ef   Thumb Code     0  startup_stm32f10x_md.o(.text)
    DMA1_Channel1_IRQHandler                 0x080001ef   Thumb Code     0  startup_stm32f10x_md.o(.text)
    DMA1_Channel2_IRQHandler                 0x080001ef   Thumb Code     0  startup_stm32f10x_md.o(.text)
    DMA1_Channel3_IRQHandler                 0x080001ef   Thumb Code     0  startup_stm32f10x_md.o(.text)
    DMA1_Channel4_IRQHandler                 0x080001ef   Thumb Code     0  startup_stm32f10x_md.o(.text)
    DMA1_Channel5_IRQHandler                 0x080001ef   Thumb Code     0  startup_stm32f10x_md.o(.text)
    DMA1_Channel6_IRQHandler                 0x080001ef   Thumb Code     0  startup_stm32f10x_md.o(.text)
    DMA1_Channel7_IRQHandler                 0x080001ef   Thumb Code     0  startup_stm32f10x_md.o(.text)
    EXTI0_IRQHandler                         0x080001ef   Thumb Code     0  startup_stm32f10x_md.o(.text)
    EXTI15_10_IRQHandler                     0x080001ef   Thumb Code     0  startup_stm32f10x_md.o(.text)
    EXTI1_IRQHandler                         0x080001ef   Thumb Code     0  startup_stm32f10x_md.o(.text)
    EXTI2_IRQHandler                         0x080001ef   Thumb Code     0  startup_stm32f10x_md.o(.text)
    EXTI3_IRQHandler                         0x080001ef   Thumb Code     0  startup_stm32f10x_md.o(.text)
    EXTI4_IRQHandler                         0x080001ef   Thumb Code     0  startup_stm32f10x_md.o(.text)
    EXTI9_5_IRQHandler                       0x080001ef   Thumb Code     0  startup_stm32f10x_md.o(.text)
    FLASH_IRQHandler                         0x080001ef   Thumb Code     0  startup_stm32f10x_md.o(.text)
    I2C1_ER_IRQHandler                       0x080001ef   Thumb Code     0  startup_stm32f10x_md.o(.text)
    I2C1_EV_IRQHandler                       0x080001ef   Thumb Code     0  startup_stm32f10x_md.o(.text)
    I2C2_ER_IRQHandler                       0x080001ef   Thumb Code     0  startup_stm32f10x_md.o(.text)
    I2C2_EV_IRQHandler                       0x080001ef   Thumb Code     0  startup_stm32f10x_md.o(.text)
    PVD_IRQHandler                           0x080001ef   Thumb Code     0  startup_stm32f10x_md.o(.text)
    RCC_IRQHandler                           0x080001ef   Thumb Code     0  startup_stm32f10x_md.o(.text)
    RTCAlarm_IRQHandler                      0x080001ef   Thumb Code     0  startup_stm32f10x_md.o(.text)
    RTC_IRQHandler                           0x080001ef   Thumb Code     0  startup_stm32f10x_md.o(.text)
    SPI1_IRQHandler                          0x080001ef   Thumb Code     0  startup_stm32f10x_md.o(.text)
    SPI2_IRQHandler                          0x080001ef   Thumb Code     0  startup_stm32f10x_md.o(.text)
    TAMPER_IRQHandler                        0x080001ef   Thumb Code     0  startup_stm32f10x_md.o(.text)
    TIM1_BRK_IRQHandler                      0x080001ef   Thumb Code     0  startup_stm32f10x_md.o(.text)
    TIM1_CC_IRQHandler                       0x080001ef   Thumb Code     0  startup_stm32f10x_md.o(.text)
    TIM1_TRG_COM_IRQHandler                  0x080001ef   Thumb Code     0  startup_stm32f10x_md.o(.text)
    TIM1_UP_IRQHandler                       0x080001ef   Thumb Code     0  startup_stm32f10x_md.o(.text)
    TIM2_IRQHandler                          0x080001ef   Thumb Code     0  startup_stm32f10x_md.o(.text)
    TIM3_IRQHandler                          0x080001ef   Thumb Code     0  startup_stm32f10x_md.o(.text)
    TIM4_IRQHandler                          0x080001ef   Thumb Code     0  startup_stm32f10x_md.o(.text)
    USBWakeUp_IRQHandler                     0x080001ef   Thumb Code     0  startup_stm32f10x_md.o(.text)
    USB_HP_CAN1_TX_IRQHandler                0x080001ef   Thumb Code     0  startup_stm32f10x_md.o(.text)
    USB_LP_CAN1_RX0_IRQHandler               0x080001ef   Thumb Code     0  startup_stm32f10x_md.o(.text)
    WWDG_IRQHandler                          0x080001ef   Thumb Code     0  startup_stm32f10x_md.o(.text)
    __user_initial_stackheap                 0x080001f1   Thumb Code     0  startup_stm32f10x_md.o(.text)
    SVC_Handler                              0x08000215   Thumb Code    96  irq_cm3.o(.text)
    PendSV_Handler                           0x08000275   Thumb Code    16  irq_cm3.o(.text)
    SysTick_Handler                          0x08000285   Thumb Code    16  irq_cm3.o(.text)
    __aeabi_memcpy                           0x0800029d   Thumb Code     0  rt_memcpy_v6.o(.text)
    __rt_memcpy                              0x0800029d   Thumb Code   138  rt_memcpy_v6.o(.text)
    _memcpy_lastbytes                        0x08000303   Thumb Code     0  rt_memcpy_v6.o(.text)
    __aeabi_memset4                          0x08000327   Thumb Code    16  aeabi_memset4.o(.text)
    __aeabi_memset8                          0x08000327   Thumb Code     0  aeabi_memset4.o(.text)
    __aeabi_memclr                           0x08000337   Thumb Code     0  rt_memclr.o(.text)
    __rt_memclr                              0x08000337   Thumb Code    68  rt_memclr.o(.text)
    _memset                                  0x0800033b   Thumb Code     0  rt_memclr.o(.text)
    __aeabi_memclr4                          0x0800037b   Thumb Code     0  rt_memclr_w.o(.text)
    __aeabi_memclr8                          0x0800037b   Thumb Code     0  rt_memclr_w.o(.text)
    __rt_memclr_w                            0x0800037b   Thumb Code    78  rt_memclr_w.o(.text)
    _memset_w                                0x0800037f   Thumb Code     0  rt_memclr_w.o(.text)
    __use_two_region_memory                  0x080003c9   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_escrow                         0x080003cb   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_expand                         0x080003cd   Thumb Code     2  heapauxi.o(.text)
    __cpp_initialize__aeabi_                 0x080003d1   Thumb Code    26  init_aeabi.o(.text)
    __rt_SIGPVFN                             0x080003f5   Thumb Code    14  defsig_pvfn_outer.o(.text)
    __aeabi_memcpy4                          0x08000403   Thumb Code     0  rt_memcpy_w.o(.text)
    __aeabi_memcpy8                          0x08000403   Thumb Code     0  rt_memcpy_w.o(.text)
    __rt_memcpy_w                            0x08000403   Thumb Code   100  rt_memcpy_w.o(.text)
    _memcpy_lastbytes_aligned                0x0800044b   Thumb Code     0  rt_memcpy_w.o(.text)
    __sig_exit                               0x08000467   Thumb Code    10  defsig_exit.o(.text)
    __rt_SIGPVFN_inner                       0x08000471   Thumb Code    14  defsig_pvfn_inner.o(.text)
    _sys_exit                                0x080004a1   Thumb Code     8  sys_exit.o(.text)
    __user_setup_stackheap                   0x080004ad   Thumb Code    74  sys_stackheap_outer.o(.text)
    exit                                     0x080004f7   Thumb Code    18  exit.o(.text)
    __default_signal_display                 0x08000509   Thumb Code    50  defsig_general.o(.text)
    _ttywrch                                 0x0800053b   Thumb Code    14  sys_wrch.o(.text)
    __user_libspace                          0x08000549   Thumb Code     8  libspace.o(.text)
    __user_perproc_libspace                  0x08000549   Thumb Code     0  libspace.o(.text)
    __I$use$semihosting                      0x08000551   Thumb Code     0  use_no_semi.o(.text)
    __use_no_semihosting_swi                 0x08000551   Thumb Code     2  use_no_semi.o(.text)
    __semihosting_library_function           0x08000553   Thumb Code     0  indicate_semi.o(.text)
    osDelay                                  0x08000555   Thumb Code    36  rtx_delay.o(.text.osDelay)
    osEventFlagsClear                        0x08000579   Thumb Code    88  rtx_evflags.o(.text.osEventFlagsClear)
    osEventFlagsNew                          0x080005d1   Thumb Code    58  rtx_evflags.o(.text.osEventFlagsNew)
    osEventFlagsSet                          0x0800060d   Thumb Code    90  rtx_evflags.o(.text.osEventFlagsSet)
    osEventFlagsWait                         0x08000669   Thumb Code   198  rtx_evflags.o(.text.osEventFlagsWait)
    osKernelGetState                         0x08000731   Thumb Code    58  rtx_kernel.o(.text.osKernelGetState)
    osKernelInitialize                       0x0800076d   Thumb Code    60  rtx_kernel.o(.text.osKernelInitialize)
    osKernelStart                            0x080007a9   Thumb Code    60  rtx_kernel.o(.text.osKernelStart)
    osMemoryPoolAlloc                        0x080007e5   Thumb Code   132  rtx_mempool.o(.text.osMemoryPoolAlloc)
    osMemoryPoolNew                          0x08000869   Thumb Code    58  rtx_mempool.o(.text.osMemoryPoolNew)
    osMessageQueueGet                        0x080008a5   Thumb Code   180  rtx_msgqueue.o(.text.osMessageQueueGet)
    osMessageQueueGetCount                   0x08000959   Thumb Code    52  rtx_msgqueue.o(.text.osMessageQueueGetCount)
    osMessageQueueNew                        0x0800098d   Thumb Code    58  rtx_msgqueue.o(.text.osMessageQueueNew)
    osMessageQueuePut                        0x080009c9   Thumb Code   132  rtx_msgqueue.o(.text.osMessageQueuePut)
    osMutexAcquire                           0x08000a4d   Thumb Code    36  rtx_mutex.o(.text.osMutexAcquire)
    osMutexDelete                            0x08000a71   Thumb Code    36  rtx_mutex.o(.text.osMutexDelete)
    osMutexNew                               0x08000a95   Thumb Code    58  rtx_mutex.o(.text.osMutexNew)
    osMutexRelease                           0x08000ad1   Thumb Code    36  rtx_mutex.o(.text.osMutexRelease)
    osRtxEventFlagsPostProcess               0x08000af5   Thumb Code   162  rtx_evflags.o(.text.osRtxEventFlagsPostProcess)
    osRtxMemoryAlloc                         0x08000b99   Thumb Code   110  rtx_memory.o(.text.osRtxMemoryAlloc)
    osRtxMemoryFree                          0x08000c09   Thumb Code    88  rtx_memory.o(.text.osRtxMemoryFree)
    osRtxMemoryInit                          0x08000c61   Thumb Code    48  rtx_memory.o(.text.osRtxMemoryInit)
    osRtxMemoryPoolAlloc                     0x08000c91   Thumb Code    76  rtx_mempool.o(.text.osRtxMemoryPoolAlloc)
    osRtxMemoryPoolFree                      0x08000cdd   Thumb Code    90  rtx_mempool.o(.text.osRtxMemoryPoolFree)
    osRtxMemoryPoolInit                      0x08000d39   Thumb Code    80  rtx_mempool.o(.text.osRtxMemoryPoolInit)
    osRtxMemoryPoolPostProcess               0x08000d89   Thumb Code    98  rtx_mempool.o(.text.osRtxMemoryPoolPostProcess)
    osRtxMessageQueuePostProcess             0x08000ded   Thumb Code   446  rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess)
    osRtxMutexOwnerRelease                   0x08000fad   Thumb Code    76  rtx_mutex.o(.text.osRtxMutexOwnerRelease)
    osRtxPendSV_Handler                      0x08000ff9   Thumb Code   168  rtx_system.o(.text.osRtxPendSV_Handler)
    osRtxPostProcess                         0x080010a1   Thumb Code   120  rtx_system.o(.text.osRtxPostProcess)
    osRtxSemaphorePostProcess                0x08001119   Thumb Code    68  rtx_semaphore.o(.text.osRtxSemaphorePostProcess)
    osRtxSysTimerAckIRQ                      0x0800115d   Thumb Code    12  rtx_system.o(.text.osRtxSysTimerAckIRQ)
    osRtxSysTimerEnable                      0x08001169   Thumb Code    14  rtx_system.o(.text.osRtxSysTimerEnable)
    osRtxSysTimerSetup                       0x08001179   Thumb Code    58  rtx_system.o(.text.osRtxSysTimerSetup)
    osRtxThreadDelayTick                     0x080011b5   Thumb Code   136  rtx_thread.o(.text.osRtxThreadDelayTick)
    osRtxThreadDispatch                      0x0800123d   Thumb Code   344  rtx_thread.o(.text.osRtxThreadDispatch)
    osRtxThreadListGet                       0x08001395   Thumb Code    26  rtx_thread.o(.text.osRtxThreadListGet)
    osRtxThreadListPut                       0x080013b1   Thumb Code    56  rtx_thread.o(.text.osRtxThreadListPut)
    osRtxThreadListRemove                    0x080013e9   Thumb Code    26  rtx_thread.o(.text.osRtxThreadListRemove)
    osRtxThreadListSort                      0x08001405   Thumb Code    96  rtx_thread.o(.text.osRtxThreadListSort)
    osRtxThreadPostProcess                   0x08001465   Thumb Code   296  rtx_thread.o(.text.osRtxThreadPostProcess)
    osRtxThreadReadyPut                      0x0800158d   Thumb Code    72  rtx_thread.o(.text.osRtxThreadReadyPut)
    osRtxThreadRegPtr                        0x080015d5   Thumb Code     6  rtx_thread.o(.text.osRtxThreadRegPtr)
    osRtxThreadStackCheck                    0x080015dd   Thumb Code    46  rtx_thread.o(.text.osRtxThreadStackCheck)
    osRtxThreadSwitch                        0x0800160d   Thumb Code    18  rtx_thread.o(.text.osRtxThreadSwitch)
    osRtxThreadWaitEnter                     0x08001621   Thumb Code   226  rtx_thread.o(.text.osRtxThreadWaitEnter)
    osRtxThreadWaitExit                      0x08001705   Thumb Code   190  rtx_thread.o(.text.osRtxThreadWaitExit)
    osRtxTick_Handler                        0x080017c5   Thumb Code   120  rtx_system.o(.text.osRtxTick_Handler)
    osRtxTimerTick                           0x0800183d   Thumb Code   170  rtx_timer.o(.text.osRtxTimerTick)
    osSemaphoreAcquire                       0x080018e9   Thumb Code    98  rtx_semaphore.o(.text.osSemaphoreAcquire)
    osSemaphoreNew                           0x0800194d   Thumb Code    58  rtx_semaphore.o(.text.osSemaphoreNew)
    osSemaphoreRelease                       0x08001989   Thumb Code   110  rtx_semaphore.o(.text.osSemaphoreRelease)
    osThreadExit                             0x080019f9   Thumb Code    14  rtx_thread.o(.text.osThreadExit)
    osThreadNew                              0x08001a09   Thumb Code    58  rtx_thread.o(.text.osThreadNew)
    osThreadYield                            0x08001a45   Thumb Code    36  rtx_thread.o(.text.osThreadYield)
    svcRtxDelay                              0x08001a69   Thumb Code    20  rtx_delay.o(.text.svcRtxDelay)
    svcRtxEventFlagsClear                    0x08001a7d   Thumb Code    58  rtx_evflags.o(.text.svcRtxEventFlagsClear)
    svcRtxEventFlagsNew                      0x08001ab9   Thumb Code   120  rtx_evflags.o(.text.svcRtxEventFlagsNew)
    svcRtxEventFlagsSet                      0x08001b31   Thumb Code   246  rtx_evflags.o(.text.svcRtxEventFlagsSet)
    svcRtxEventFlagsWait                     0x08001c29   Thumb Code   220  rtx_evflags.o(.text.svcRtxEventFlagsWait)
    svcRtxKernelGetState                     0x08001d05   Thumb Code    12  rtx_kernel.o(.text.svcRtxKernelGetState)
    svcRtxKernelInitialize                   0x08001d11   Thumb Code   428  rtx_kernel.o(.text.svcRtxKernelInitialize)
    svcRtxKernelStart                        0x08001ebd   Thumb Code   150  rtx_kernel.o(.text.svcRtxKernelStart)
    svcRtxMemoryPoolAlloc                    0x08001f55   Thumb Code   122  rtx_mempool.o(.text.svcRtxMemoryPoolAlloc)
    svcRtxMemoryPoolNew                      0x08001fd1   Thumb Code   508  rtx_mempool.o(.text.svcRtxMemoryPoolNew)
    svcRtxMessageQueueGet                    0x080021cd   Thumb Code   410  rtx_msgqueue.o(.text.svcRtxMessageQueueGet)
    svcRtxMessageQueueGetCount               0x08002369   Thumb Code    22  rtx_msgqueue.o(.text.svcRtxMessageQueueGetCount)
    svcRtxMessageQueueNew                    0x08002381   Thumb Code   352  rtx_msgqueue.o(.text.svcRtxMessageQueueNew)
    svcRtxMessageQueuePut                    0x080024e1   Thumb Code   280  rtx_msgqueue.o(.text.svcRtxMessageQueuePut)
    svcRtxMutexAcquire                       0x080025f9   Thumb Code   158  rtx_mutex.o(.text.svcRtxMutexAcquire)
    svcRtxMutexDelete                        0x08002699   Thumb Code   214  rtx_mutex.o(.text.svcRtxMutexDelete)
    svcRtxMutexNew                           0x08002771   Thumb Code   114  rtx_mutex.o(.text.svcRtxMutexNew)
    svcRtxMutexRelease                       0x080027e5   Thumb Code   200  rtx_mutex.o(.text.svcRtxMutexRelease)
    svcRtxSemaphoreAcquire                   0x080028ad   Thumb Code   106  rtx_semaphore.o(.text.svcRtxSemaphoreAcquire)
    svcRtxSemaphoreNew                       0x08002919   Thumb Code   140  rtx_semaphore.o(.text.svcRtxSemaphoreNew)
    svcRtxSemaphoreRelease                   0x080029a5   Thumb Code    94  rtx_semaphore.o(.text.svcRtxSemaphoreRelease)
    svcRtxThreadExit                         0x08002a05   Thumb Code   322  rtx_thread.o(.text.svcRtxThreadExit)
    svcRtxThreadNew                          0x08002b49   Thumb Code   576  rtx_thread.o(.text.svcRtxThreadNew)
    svcRtxThreadYield                        0x08002d89   Thumb Code   142  rtx_thread.o(.text.svcRtxThreadYield)
    GPIO_Init                                0x08002e17   Thumb Code   278  stm32f10x_gpio.o(i.GPIO_Init)
    NVIC_Init                                0x08002f2d   Thumb Code   100  misc.o(i.NVIC_Init)
    RCC_APB1PeriphClockCmd                   0x08002f9d   Thumb Code    26  stm32f10x_rcc.o(i.RCC_APB1PeriphClockCmd)
    RCC_APB1PeriphResetCmd                   0x08002fbd   Thumb Code    26  stm32f10x_rcc.o(i.RCC_APB1PeriphResetCmd)
    RCC_APB2PeriphClockCmd                   0x08002fdd   Thumb Code    26  stm32f10x_rcc.o(i.RCC_APB2PeriphClockCmd)
    RCC_APB2PeriphResetCmd                   0x08002ffd   Thumb Code    26  stm32f10x_rcc.o(i.RCC_APB2PeriphResetCmd)
    RCC_GetClocksFreq                        0x0800301d   Thumb Code   192  stm32f10x_rcc.o(i.RCC_GetClocksFreq)
    SystemCoreClockUpdate                    0x080031d9   Thumb Code   142  system_stm32f10x.o(i.SystemCoreClockUpdate)
    SystemInit                               0x0800327d   Thumb Code    78  system_stm32f10x.o(i.SystemInit)
    USART1_IRQHandler                        0x080032dd   Thumb Code    32  usart.o(i.USART1_IRQHandler)
    USART2_IRQHandler                        0x08003305   Thumb Code    32  usart.o(i.USART2_IRQHandler)
    USART3_IRQHandler                        0x0800332d   Thumb Code    32  usart.o(i.USART3_IRQHandler)
    USART_ClearITPendingBit                  0x08003355   Thumb Code    30  stm32f10x_usart.o(i.USART_ClearITPendingBit)
    USART_ClockInit                          0x08003373   Thumb Code    34  stm32f10x_usart.o(i.USART_ClockInit)
    USART_Cmd                                0x08003395   Thumb Code    24  stm32f10x_usart.o(i.USART_Cmd)
    USART_DeInit                             0x080033ad   Thumb Code   134  stm32f10x_usart.o(i.USART_DeInit)
    USART_GetFlagStatus                      0x08003449   Thumb Code    26  stm32f10x_usart.o(i.USART_GetFlagStatus)
    USART_ITConfig                           0x08003463   Thumb Code    74  stm32f10x_usart.o(i.USART_ITConfig)
    USART_Init                               0x080034ad   Thumb Code   210  stm32f10x_usart.o(i.USART_Init)
    USART_ReceiveData                        0x08003585   Thumb Code    10  stm32f10x_usart.o(i.USART_ReceiveData)
    USART_SendData                           0x0800358f   Thumb Code     8  stm32f10x_usart.o(i.USART_SendData)
    main_thread(void*)                       0x08003599   Thumb Code    28  main.o(i._Z11main_threadPv)
    send_tri_data(void*)                     0x080035bd   Thumb Code    40  main.o(i._Z13send_tri_dataPv)
    SvVis::SvVis::init(serial::interface&, unsigned, unsigned) 0x080035ed   Thumb Code   108  svvis.o(i._ZN5SvVis5SvVis4initERN6serial9interfaceEjj)
    SvVis::SvVis::recv_msg(SvVis::message_t&, unsigned) 0x08003661   Thumb Code    22  svvis.o(i._ZN5SvVis5SvVis8recv_msgERNS_9message_tEj)
    SvVis::SvVis::send_i16(unsigned char, short, unsigned) 0x08003677   Thumb Code    50  svvis.o(i._ZN5SvVis5SvVis8send_i16Ehsj)
    SvVis::SvVis::send_msg(SvVis::message_t&, unsigned) 0x080036a9   Thumb Code    52  svvis.o(i._ZN5SvVis5SvVis8send_msgERNS_9message_tEj)
    SvVis::SvVis::func_recv(void*)           0x080036dd   Thumb Code   242  svvis_threads.o(i._ZN5SvVis5SvVis9func_recvEPv)
    SvVis::SvVis::func_send(void*)           0x080037cf   Thumb Code    86  svvis_threads.o(i._ZN5SvVis5SvVis9func_sendEPv)
    SvVis::chid2len(unsigned char)           0x08003825   Thumb Code    38  svvis_threads.o(i._ZN5SvVis8chid2lenEh)
    usart::usart::put_blocking(const void*, unsigned) 0x0800384b   Thumb Code    42  usart.o(i._ZN5usart5usart12put_blockingEPKvj)
    usart::usart::pop(unsigned char&, unsigned) 0x08003875   Thumb Code    20  usart.o(i._ZN5usart5usart3popERhj)
    usart::usart::put(unsigned char, unsigned) 0x08003889   Thumb Code    38  usart.o(i._ZN5usart5usart3putEhj)
    usart::usart::init(USART_TypeDef*, unsigned, unsigned) 0x080038b1   Thumb Code   420  usart.o(i._ZN5usart5usart4initEP13USART_TypeDefjj)
    ring_pipe::pop(unsigned char&, unsigned) 0x08003a81   Thumb Code    56  ring_pipe.o(i._ZN9ring_pipe3popERhj)
    ring_pipe::put(unsigned char, unsigned)  0x08003ab9   Thumb Code    64  ring_pipe.o(i._ZN9ring_pipe3putEhj)
    ring_pipe::init(unsigned)                0x08003af9   Thumb Code    72  ring_pipe.o(i._ZN9ring_pipe4initEj)
    ring_pipe::access(unsigned char*)        0x08003b41   Thumb Code    26  ring_pipe.o(i._ZN9ring_pipe6accessEPh)
    __cxa_pure_virtual                       0x08003b5b   Thumb Code     6  pure_virt.o(i.__cxa_pure_virtual)
    _mutex_acquire                           0x08003b85   Thumb Code    22  rtx_lib.o(i._mutex_acquire)
    _mutex_free                              0x08003b9b   Thumb Code    12  rtx_lib.o(i._mutex_free)
    _mutex_initialize                        0x08003ba7   Thumb Code    32  rtx_lib.o(i._mutex_initialize)
    _mutex_release                           0x08003bc7   Thumb Code    18  rtx_lib.o(i._mutex_release)
    _platform_post_stackheap_init            0x08003bd9   Thumb Code     8  rtx_lib.o(i._platform_post_stackheap_init)
    main                                     0x08003be1   Thumb Code    60  main.o(i.main)
    osRtxErrorNotify                         0x08003c31   Thumb Code    32  rtx_config.o(i.osRtxErrorNotify)
    osRtxIdleThread                          0x08003c51   Thumb Code     4  rtx_config.o(i.osRtxIdleThread)
    osRtxUserSVC                             0x08003cec   Data           4  rtx_lib.o(.constdata)
    irqRtxLib                                0x08003cf0   Data           1  irq_cm3.o(.constdata)
    vtable for usart::usart                  0x08003cf4   Data          24  usart.o(.constdata__ZTVN5usart5usartE)
    vtable for serial::interface             0x08003d0c   Data          24  main.o(.constdata__ZTVN6serial9interfaceE)
    osRtxConfig                              0x08003d24   Data         104  rtx_lib.o(.rodata)
    Region$$Table$$Base                      0x08003d98   Number         0  anon$$obj.o(Region$$Table)
    Region$$Table$$Limit                     0x08003db8   Number         0  anon$$obj.o(Region$$Table)
    SHT$$INIT_ARRAY$$Base                    0x08003db8   Number         0  main.o(.init_array)
    SHT$$INIT_ARRAY$$Limit                   0x08003dbc   Number         0  init_aeabi.o(.init_array)
    usart::usart1::handler                   0x200014d0   Data           4  usart.o(.data)
    usart::usart2::handler                   0x200014d4   Data           4  usart.o(.data)
    usart::usart3::handler                   0x200014d8   Data           4  usart.o(.data)
    irqRtxLibRef                             0x200014dc   Data           4  rtx_lib.o(.data)
    SystemCoreClock                          0x200014f8   Data           4  system_stm32f10x.o(.data)
    AHBPrescTable                            0x200014fc   Data          16  system_stm32f10x.o(.data)
    osRtxInfo                                0x20001510   Data         168  rtx_kernel.o(.data.os)
    usart1                                   0x200015b8   Data          20  main.o(.bss)
    svvis                                    0x200015cc   Data          24  main.o(.bss)
    msg                                      0x200015e4   Data          36  main.o(.bss)
    usart::usart1::pipe                      0x20001608   Data          32  usart.o(.bss)
    usart::usart2::pipe                      0x20001628   Data          32  usart.o(.bss)
    usart::usart3::pipe                      0x20001648   Data          32  usart.o(.bss)
    __libspace_start                         0x20001668   Data          96  libspace.o(.bss)
    __temporary_stack_top$libspace           0x200016c8   Data           0  libspace.o(.bss)



==============================================================================

Memory Map of the image

  Image Entry point : 0x080001d5

  Load Region LR_1 (Base: 0x08000000, Size: 0x00005374, Max: 0xffffffff, ABSOLUTE, COMPRESSED[0x00003e0c])

    Execution Region ER_RO (Exec base: 0x08000000, Load base: 0x08000000, Size: 0x00003dbc, Max: 0xffffffff, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x08000000   0x08000000   0x000000ec   Data   RO         1087    RESET               startup_stm32f10x_md.o
    0x080000ec   0x080000ec   0x00000008   Code   RO         1681  * !!!main             c_w.l(__main.o)
    0x080000f4   0x080000f4   0x00000034   Code   RO         2107    !!!scatter          c_w.l(__scatter.o)
    0x08000128   0x08000128   0x0000005a   Code   RO         2105    !!dczerorl2         c_w.l(__dczerorl2.o)
    0x08000182   0x08000182   0x00000002   PAD
    0x08000184   0x08000184   0x0000001c   Code   RO         2109    !!handler_zi        c_w.l(__scatter_zi.o)
    0x080001a0   0x080001a0   0x00000002   Code   RO         1983    .ARM.Collect$$libinit$$00000000  c_w.l(libinit.o)
    0x080001a2   0x080001a2   0x00000000   Code   RO         1806    .ARM.Collect$$libinit$$00000002  c_w.l(libinit2.o)
    0x080001a2   0x080001a2   0x00000000   Code   RO         1808    .ARM.Collect$$libinit$$00000004  c_w.l(libinit2.o)
    0x080001a2   0x080001a2   0x00000000   Code   RO         1811    .ARM.Collect$$libinit$$0000000A  c_w.l(libinit2.o)
    0x080001a2   0x080001a2   0x00000000   Code   RO         1813    .ARM.Collect$$libinit$$0000000C  c_w.l(libinit2.o)
    0x080001a2   0x080001a2   0x00000000   Code   RO         1815    .ARM.Collect$$libinit$$0000000E  c_w.l(libinit2.o)
    0x080001a2   0x080001a2   0x00000000   Code   RO         1818    .ARM.Collect$$libinit$$00000011  c_w.l(libinit2.o)
    0x080001a2   0x080001a2   0x00000000   Code   RO         1820    .ARM.Collect$$libinit$$00000013  c_w.l(libinit2.o)
    0x080001a2   0x080001a2   0x00000000   Code   RO         1822    .ARM.Collect$$libinit$$00000015  c_w.l(libinit2.o)
    0x080001a2   0x080001a2   0x00000000   Code   RO         1824    .ARM.Collect$$libinit$$00000017  c_w.l(libinit2.o)
    0x080001a2   0x080001a2   0x00000000   Code   RO         1826    .ARM.Collect$$libinit$$00000019  c_w.l(libinit2.o)
    0x080001a2   0x080001a2   0x00000000   Code   RO         1828    .ARM.Collect$$libinit$$0000001B  c_w.l(libinit2.o)
    0x080001a2   0x080001a2   0x00000000   Code   RO         1830    .ARM.Collect$$libinit$$0000001D  c_w.l(libinit2.o)
    0x080001a2   0x080001a2   0x00000000   Code   RO         1832    .ARM.Collect$$libinit$$0000001F  c_w.l(libinit2.o)
    0x080001a2   0x080001a2   0x00000000   Code   RO         1834    .ARM.Collect$$libinit$$00000021  c_w.l(libinit2.o)
    0x080001a2   0x080001a2   0x00000000   Code   RO         1836    .ARM.Collect$$libinit$$00000023  c_w.l(libinit2.o)
    0x080001a2   0x080001a2   0x00000000   Code   RO         1838    .ARM.Collect$$libinit$$00000025  c_w.l(libinit2.o)
    0x080001a2   0x080001a2   0x00000000   Code   RO         1842    .ARM.Collect$$libinit$$0000002C  c_w.l(libinit2.o)
    0x080001a2   0x080001a2   0x00000000   Code   RO         1844    .ARM.Collect$$libinit$$0000002E  c_w.l(libinit2.o)
    0x080001a2   0x080001a2   0x00000000   Code   RO         1846    .ARM.Collect$$libinit$$00000030  c_w.l(libinit2.o)
    0x080001a2   0x080001a2   0x00000004   Code   RO         1847    .ARM.Collect$$libinit$$00000031  c_w.l(libinit2.o)
    0x080001a6   0x080001a6   0x00000000   Code   RO         1848    .ARM.Collect$$libinit$$00000032  c_w.l(libinit2.o)
    0x080001a6   0x080001a6   0x00000002   Code   RO         1849    .ARM.Collect$$libinit$$00000033  c_w.l(libinit2.o)
    0x080001a8   0x080001a8   0x00000002   Code   RO         2082    .ARM.Collect$$libshutdown$$00000000  c_w.l(libshutdown.o)
    0x080001aa   0x080001aa   0x00000000   Code   RO         2088    .ARM.Collect$$libshutdown$$00000002  c_w.l(libshutdown2.o)
    0x080001aa   0x080001aa   0x00000000   Code   RO         2090    .ARM.Collect$$libshutdown$$00000004  c_w.l(libshutdown2.o)
    0x080001aa   0x080001aa   0x00000000   Code   RO         2093    .ARM.Collect$$libshutdown$$00000007  c_w.l(libshutdown2.o)
    0x080001aa   0x080001aa   0x00000000   Code   RO         2096    .ARM.Collect$$libshutdown$$0000000A  c_w.l(libshutdown2.o)
    0x080001aa   0x080001aa   0x00000000   Code   RO         2098    .ARM.Collect$$libshutdown$$0000000C  c_w.l(libshutdown2.o)
    0x080001aa   0x080001aa   0x00000000   Code   RO         2101    .ARM.Collect$$libshutdown$$0000000F  c_w.l(libshutdown2.o)
    0x080001aa   0x080001aa   0x00000002   Code   RO         2102    .ARM.Collect$$libshutdown$$00000010  c_w.l(libshutdown2.o)
    0x080001ac   0x080001ac   0x00000000   Code   RO         1798    .ARM.Collect$$rtentry$$00000000  c_w.l(__rtentry.o)
    0x080001ac   0x080001ac   0x00000000   Code   RO         1864    .ARM.Collect$$rtentry$$00000002  c_w.l(__rtentry2.o)
    0x080001ac   0x080001ac   0x00000006   Code   RO         1876    .ARM.Collect$$rtentry$$00000004  c_w.l(__rtentry4.o)
    0x080001b2   0x080001b2   0x00000008   Code   RO         1865    .ARM.Collect$$rtentry$$00000008  c_w.l(__rtentry2.o)
    0x080001ba   0x080001ba   0x00000004   Code   RO         1867    .ARM.Collect$$rtentry$$0000000A  c_w.l(__rtentry2.o)
    0x080001be   0x080001be   0x00000000   Code   RO         1869    .ARM.Collect$$rtentry$$0000000C  c_w.l(__rtentry2.o)
    0x080001be   0x080001be   0x00000008   Code   RO         1870    .ARM.Collect$$rtentry$$0000000D  c_w.l(__rtentry2.o)
    0x080001c6   0x080001c6   0x00000002   Code   RO         1997    .ARM.Collect$$rtexit$$00000000  c_w.l(rtexit.o)
    0x080001c8   0x080001c8   0x00000000   Code   RO         2047    .ARM.Collect$$rtexit$$00000002  c_w.l(rtexit2.o)
    0x080001c8   0x080001c8   0x00000004   Code   RO         2048    .ARM.Collect$$rtexit$$00000003  c_w.l(rtexit2.o)
    0x080001cc   0x080001cc   0x00000006   Code   RO         2049    .ARM.Collect$$rtexit$$00000004  c_w.l(rtexit2.o)
    0x080001d2   0x080001d2   0x00000002   PAD
    0x080001d4   0x080001d4   0x00000040   Code   RO         1088  * .text               startup_stm32f10x_md.o
    0x08000214   0x08000214   0x00000088   Code   RO         1578    .text               RTX_CM3.lib(irq_cm3.o)
    0x0800029c   0x0800029c   0x0000008a   Code   RO         1671    .text               c_w.l(rt_memcpy_v6.o)
    0x08000326   0x08000326   0x00000010   Code   RO         1673    .text               c_w.l(aeabi_memset4.o)
    0x08000336   0x08000336   0x00000044   Code   RO         1675    .text               c_w.l(rt_memclr.o)
    0x0800037a   0x0800037a   0x0000004e   Code   RO         1677    .text               c_w.l(rt_memclr_w.o)
    0x080003c8   0x080003c8   0x00000006   Code   RO         1679    .text               c_w.l(heapauxi.o)
    0x080003ce   0x080003ce   0x00000002   PAD
    0x080003d0   0x080003d0   0x00000024   Code   RO         1686    .text               c_w.l(init_aeabi.o)
    0x080003f4   0x080003f4   0x0000000e   Code   RO         1799    .text               c_w.l(defsig_pvfn_outer.o)
    0x08000402   0x08000402   0x00000064   Code   RO         1803    .text               c_w.l(rt_memcpy_w.o)
    0x08000466   0x08000466   0x0000000a   Code   RO         1880    .text               c_w.l(defsig_exit.o)
    0x08000470   0x08000470   0x00000030   Code   RO         1882    .text               c_w.l(defsig_pvfn_inner.o)
    0x080004a0   0x080004a0   0x0000000c   Code   RO         1901    .text               c_w.l(sys_exit.o)
    0x080004ac   0x080004ac   0x0000004a   Code   RO         1903    .text               c_w.l(sys_stackheap_outer.o)
    0x080004f6   0x080004f6   0x00000012   Code   RO         1968    .text               c_w.l(exit.o)
    0x08000508   0x08000508   0x00000032   Code   RO         1974    .text               c_w.l(defsig_general.o)
    0x0800053a   0x0800053a   0x0000000e   Code   RO         1987    .text               c_w.l(sys_wrch.o)
    0x08000548   0x08000548   0x00000008   Code   RO         1991    .text               c_w.l(libspace.o)
    0x08000550   0x08000550   0x00000002   Code   RO         1994    .text               c_w.l(use_no_semi.o)
    0x08000552   0x08000552   0x00000000   Code   RO         1996    .text               c_w.l(indicate_semi.o)
    0x08000552   0x08000552   0x00000002   PAD
    0x08000554   0x08000554   0x00000024   Code   RO         1340    .text.osDelay       RTX_CM3.lib(rtx_delay.o)
    0x08000578   0x08000578   0x00000058   Code   RO         1377    .text.osEventFlagsClear  RTX_CM3.lib(rtx_evflags.o)
    0x080005d0   0x080005d0   0x0000003a   Code   RO         1371    .text.osEventFlagsNew  RTX_CM3.lib(rtx_evflags.o)
    0x0800060a   0x0800060a   0x00000002   PAD
    0x0800060c   0x0800060c   0x0000005a   Code   RO         1375    .text.osEventFlagsSet  RTX_CM3.lib(rtx_evflags.o)
    0x08000666   0x08000666   0x00000002   PAD
    0x08000668   0x08000668   0x000000c6   Code   RO         1381    .text.osEventFlagsWait  RTX_CM3.lib(rtx_evflags.o)
    0x0800072e   0x0800072e   0x00000002   PAD
    0x08000730   0x08000730   0x0000003a   Code   RO         1169    .text.osKernelGetState  RTX_CM3.lib(rtx_kernel.o)
    0x0800076a   0x0800076a   0x00000002   PAD
    0x0800076c   0x0800076c   0x0000003c   Code   RO         1165    .text.osKernelInitialize  RTX_CM3.lib(rtx_kernel.o)
    0x080007a8   0x080007a8   0x0000003c   Code   RO         1171    .text.osKernelStart  RTX_CM3.lib(rtx_kernel.o)
    0x080007e4   0x080007e4   0x00000084   Code   RO         1500    .text.osMemoryPoolAlloc  RTX_CM3.lib(rtx_mempool.o)
    0x08000868   0x08000868   0x0000003a   Code   RO         1496    .text.osMemoryPoolNew  RTX_CM3.lib(rtx_mempool.o)
    0x080008a2   0x080008a2   0x00000002   PAD
    0x080008a4   0x080008a4   0x000000b4   Code   RO         1553    .text.osMessageQueueGet  RTX_CM3.lib(rtx_msgqueue.o)
    0x08000958   0x08000958   0x00000034   Code   RO         1559    .text.osMessageQueueGetCount  RTX_CM3.lib(rtx_msgqueue.o)
    0x0800098c   0x0800098c   0x0000003a   Code   RO         1547    .text.osMessageQueueNew  RTX_CM3.lib(rtx_msgqueue.o)
    0x080009c6   0x080009c6   0x00000002   PAD
    0x080009c8   0x080009c8   0x00000084   Code   RO         1551    .text.osMessageQueuePut  RTX_CM3.lib(rtx_msgqueue.o)
    0x08000a4c   0x08000a4c   0x00000024   Code   RO         1414    .text.osMutexAcquire  RTX_CM3.lib(rtx_mutex.o)
    0x08000a70   0x08000a70   0x00000024   Code   RO         1420    .text.osMutexDelete  RTX_CM3.lib(rtx_mutex.o)
    0x08000a94   0x08000a94   0x0000003a   Code   RO         1410    .text.osMutexNew    RTX_CM3.lib(rtx_mutex.o)
    0x08000ace   0x08000ace   0x00000002   PAD
    0x08000ad0   0x08000ad0   0x00000024   Code   RO         1416    .text.osMutexRelease  RTX_CM3.lib(rtx_mutex.o)
    0x08000af4   0x08000af4   0x000000a2   Code   RO         1355    .text.osRtxEventFlagsPostProcess  RTX_CM3.lib(rtx_evflags.o)
    0x08000b96   0x08000b96   0x00000002   PAD
    0x08000b98   0x08000b98   0x0000006e   Code   RO         1624    .text.osRtxMemoryAlloc  RTX_CM3.lib(rtx_memory.o)
    0x08000c06   0x08000c06   0x00000002   PAD
    0x08000c08   0x08000c08   0x00000058   Code   RO         1626    .text.osRtxMemoryFree  RTX_CM3.lib(rtx_memory.o)
    0x08000c60   0x08000c60   0x00000030   Code   RO         1622    .text.osRtxMemoryInit  RTX_CM3.lib(rtx_memory.o)
    0x08000c90   0x08000c90   0x0000004c   Code   RO         1472    .text.osRtxMemoryPoolAlloc  RTX_CM3.lib(rtx_mempool.o)
    0x08000cdc   0x08000cdc   0x0000005a   Code   RO         1474    .text.osRtxMemoryPoolFree  RTX_CM3.lib(rtx_mempool.o)
    0x08000d36   0x08000d36   0x00000002   PAD
    0x08000d38   0x08000d38   0x00000050   Code   RO         1470    .text.osRtxMemoryPoolInit  RTX_CM3.lib(rtx_mempool.o)
    0x08000d88   0x08000d88   0x00000062   Code   RO         1476    .text.osRtxMemoryPoolPostProcess  RTX_CM3.lib(rtx_mempool.o)
    0x08000dea   0x08000dea   0x00000002   PAD
    0x08000dec   0x08000dec   0x000001be   Code   RO         1525    .text.osRtxMessageQueuePostProcess  RTX_CM3.lib(rtx_msgqueue.o)
    0x08000faa   0x08000faa   0x00000002   PAD
    0x08000fac   0x08000fac   0x0000004c   Code   RO         1396    .text.osRtxMutexOwnerRelease  RTX_CM3.lib(rtx_mutex.o)
    0x08000ff8   0x08000ff8   0x000000a8   Code   RO         1643    .text.osRtxPendSV_Handler  RTX_CM3.lib(rtx_system.o)
    0x080010a0   0x080010a0   0x00000078   Code   RO         1645    .text.osRtxPostProcess  RTX_CM3.lib(rtx_system.o)
    0x08001118   0x08001118   0x00000044   Code   RO         1433    .text.osRtxSemaphorePostProcess  RTX_CM3.lib(rtx_semaphore.o)
    0x0800115c   0x0800115c   0x0000000c   Code   RO         1641    .text.osRtxSysTimerAckIRQ  RTX_CM3.lib(rtx_system.o)
    0x08001168   0x08001168   0x0000000e   Code   RO         1649    .text.osRtxSysTimerEnable  RTX_CM3.lib(rtx_system.o)
    0x08001176   0x08001176   0x00000002   PAD
    0x08001178   0x08001178   0x0000003a   Code   RO         1647    .text.osRtxSysTimerSetup  RTX_CM3.lib(rtx_system.o)
    0x080011b2   0x080011b2   0x00000002   PAD
    0x080011b4   0x080011b4   0x00000088   Code   RO         1223    .text.osRtxThreadDelayTick  RTX_CM3.lib(rtx_thread.o)
    0x0800123c   0x0800123c   0x00000158   Code   RO         1233    .text.osRtxThreadDispatch  RTX_CM3.lib(rtx_thread.o)
    0x08001394   0x08001394   0x0000001a   Code   RO         1207    .text.osRtxThreadListGet  RTX_CM3.lib(rtx_thread.o)
    0x080013ae   0x080013ae   0x00000002   PAD
    0x080013b0   0x080013b0   0x00000038   Code   RO         1205    .text.osRtxThreadListPut  RTX_CM3.lib(rtx_thread.o)
    0x080013e8   0x080013e8   0x0000001a   Code   RO         1213    .text.osRtxThreadListRemove  RTX_CM3.lib(rtx_thread.o)
    0x08001402   0x08001402   0x00000002   PAD
    0x08001404   0x08001404   0x00000060   Code   RO         1211    .text.osRtxThreadListSort  RTX_CM3.lib(rtx_thread.o)
    0x08001464   0x08001464   0x00000128   Code   RO         1239    .text.osRtxThreadPostProcess  RTX_CM3.lib(rtx_thread.o)
    0x0800158c   0x0800158c   0x00000048   Code   RO         1217    .text.osRtxThreadReadyPut  RTX_CM3.lib(rtx_thread.o)
    0x080015d4   0x080015d4   0x00000006   Code   RO         1225    .text.osRtxThreadRegPtr  RTX_CM3.lib(rtx_thread.o)
    0x080015da   0x080015da   0x00000002   PAD
    0x080015dc   0x080015dc   0x0000002e   Code   RO         1231    .text.osRtxThreadStackCheck  RTX_CM3.lib(rtx_thread.o)
    0x0800160a   0x0800160a   0x00000002   PAD
    0x0800160c   0x0800160c   0x00000012   Code   RO         1229    .text.osRtxThreadSwitch  RTX_CM3.lib(rtx_thread.o)
    0x0800161e   0x0800161e   0x00000002   PAD
    0x08001620   0x08001620   0x000000e2   Code   RO         1237    .text.osRtxThreadWaitEnter  RTX_CM3.lib(rtx_thread.o)
    0x08001702   0x08001702   0x00000002   PAD
    0x08001704   0x08001704   0x000000be   Code   RO         1235    .text.osRtxThreadWaitExit  RTX_CM3.lib(rtx_thread.o)
    0x080017c2   0x080017c2   0x00000002   PAD
    0x080017c4   0x080017c4   0x00000078   Code   RO         1639    .text.osRtxTick_Handler  RTX_CM3.lib(rtx_system.o)
    0x0800183c   0x0800183c   0x000000aa   Code   RO         1583    .text.osRtxTimerTick  RTX_CM3.lib(rtx_timer.o)
    0x080018e6   0x080018e6   0x00000002   PAD
    0x080018e8   0x080018e8   0x00000062   Code   RO         1451    .text.osSemaphoreAcquire  RTX_CM3.lib(rtx_semaphore.o)
    0x0800194a   0x0800194a   0x00000002   PAD
    0x0800194c   0x0800194c   0x0000003a   Code   RO         1447    .text.osSemaphoreNew  RTX_CM3.lib(rtx_semaphore.o)
    0x08001986   0x08001986   0x00000002   PAD
    0x08001988   0x08001988   0x0000006e   Code   RO         1453    .text.osSemaphoreRelease  RTX_CM3.lib(rtx_semaphore.o)
    0x080019f6   0x080019f6   0x00000002   PAD
    0x080019f8   0x080019f8   0x0000000e   Code   RO         1243    .text.osThreadExit  RTX_CM3.lib(rtx_thread.o)
    0x08001a06   0x08001a06   0x00000002   PAD
    0x08001a08   0x08001a08   0x0000003a   Code   RO         1285    .text.osThreadNew   RTX_CM3.lib(rtx_thread.o)
    0x08001a42   0x08001a42   0x00000002   PAD
    0x08001a44   0x08001a44   0x00000024   Code   RO         1301    .text.osThreadYield  RTX_CM3.lib(rtx_thread.o)
    0x08001a68   0x08001a68   0x00000014   Code   RO         1336    .text.svcRtxDelay   RTX_CM3.lib(rtx_delay.o)
    0x08001a7c   0x08001a7c   0x0000003a   Code   RO         1363    .text.svcRtxEventFlagsClear  RTX_CM3.lib(rtx_evflags.o)
    0x08001ab6   0x08001ab6   0x00000002   PAD
    0x08001ab8   0x08001ab8   0x00000078   Code   RO         1357    .text.svcRtxEventFlagsNew  RTX_CM3.lib(rtx_evflags.o)
    0x08001b30   0x08001b30   0x000000f6   Code   RO         1361    .text.svcRtxEventFlagsSet  RTX_CM3.lib(rtx_evflags.o)
    0x08001c26   0x08001c26   0x00000002   PAD
    0x08001c28   0x08001c28   0x000000dc   Code   RO         1367    .text.svcRtxEventFlagsWait  RTX_CM3.lib(rtx_evflags.o)
    0x08001d04   0x08001d04   0x0000000c   Code   RO         1143    .text.svcRtxKernelGetState  RTX_CM3.lib(rtx_kernel.o)
    0x08001d10   0x08001d10   0x000001ac   Code   RO         1139    .text.svcRtxKernelInitialize  RTX_CM3.lib(rtx_kernel.o)
    0x08001ebc   0x08001ebc   0x00000096   Code   RO         1145    .text.svcRtxKernelStart  RTX_CM3.lib(rtx_kernel.o)
    0x08001f52   0x08001f52   0x00000002   PAD
    0x08001f54   0x08001f54   0x0000007a   Code   RO         1482    .text.svcRtxMemoryPoolAlloc  RTX_CM3.lib(rtx_mempool.o)
    0x08001fce   0x08001fce   0x00000002   PAD
    0x08001fd0   0x08001fd0   0x000001fc   Code   RO         1478    .text.svcRtxMemoryPoolNew  RTX_CM3.lib(rtx_mempool.o)
    0x080021cc   0x080021cc   0x0000019a   Code   RO         1533    .text.svcRtxMessageQueueGet  RTX_CM3.lib(rtx_msgqueue.o)
    0x08002366   0x08002366   0x00000002   PAD
    0x08002368   0x08002368   0x00000016   Code   RO         1539    .text.svcRtxMessageQueueGetCount  RTX_CM3.lib(rtx_msgqueue.o)
    0x0800237e   0x0800237e   0x00000002   PAD
    0x08002380   0x08002380   0x00000160   Code   RO         1527    .text.svcRtxMessageQueueNew  RTX_CM3.lib(rtx_msgqueue.o)
    0x080024e0   0x080024e0   0x00000118   Code   RO         1531    .text.svcRtxMessageQueuePut  RTX_CM3.lib(rtx_msgqueue.o)
    0x080025f8   0x080025f8   0x0000009e   Code   RO         1402    .text.svcRtxMutexAcquire  RTX_CM3.lib(rtx_mutex.o)
    0x08002696   0x08002696   0x00000002   PAD
    0x08002698   0x08002698   0x000000d6   Code   RO         1408    .text.svcRtxMutexDelete  RTX_CM3.lib(rtx_mutex.o)
    0x0800276e   0x0800276e   0x00000002   PAD
    0x08002770   0x08002770   0x00000072   Code   RO         1398    .text.svcRtxMutexNew  RTX_CM3.lib(rtx_mutex.o)
    0x080027e2   0x080027e2   0x00000002   PAD
    0x080027e4   0x080027e4   0x000000c8   Code   RO         1404    .text.svcRtxMutexRelease  RTX_CM3.lib(rtx_mutex.o)
    0x080028ac   0x080028ac   0x0000006a   Code   RO         1439    .text.svcRtxSemaphoreAcquire  RTX_CM3.lib(rtx_semaphore.o)
    0x08002916   0x08002916   0x00000002   PAD
    0x08002918   0x08002918   0x0000008c   Code   RO         1435    .text.svcRtxSemaphoreNew  RTX_CM3.lib(rtx_semaphore.o)
    0x080029a4   0x080029a4   0x0000005e   Code   RO         1441    .text.svcRtxSemaphoreRelease  RTX_CM3.lib(rtx_semaphore.o)
    0x08002a02   0x08002a02   0x00000002   PAD
    0x08002a04   0x08002a04   0x00000142   Code   RO         1269    .text.svcRtxThreadExit  RTX_CM3.lib(rtx_thread.o)
    0x08002b46   0x08002b46   0x00000002   PAD
    0x08002b48   0x08002b48   0x00000240   Code   RO         1241    .text.svcRtxThreadNew  RTX_CM3.lib(rtx_thread.o)
    0x08002d88   0x08002d88   0x0000008e   Code   RO         1259    .text.svcRtxThreadYield  RTX_CM3.lib(rtx_thread.o)
    0x08002e16   0x08002e16   0x00000116   Code   RO          564    i.GPIO_Init         stm32f10x_gpio.o
    0x08002f2c   0x08002f2c   0x00000070   Code   RO          481    i.NVIC_Init         misc.o
    0x08002f9c   0x08002f9c   0x00000020   Code   RO          686    i.RCC_APB1PeriphClockCmd  stm32f10x_rcc.o
    0x08002fbc   0x08002fbc   0x00000020   Code   RO          687    i.RCC_APB1PeriphResetCmd  stm32f10x_rcc.o
    0x08002fdc   0x08002fdc   0x00000020   Code   RO          688    i.RCC_APB2PeriphClockCmd  stm32f10x_rcc.o
    0x08002ffc   0x08002ffc   0x00000020   Code   RO          689    i.RCC_APB2PeriphResetCmd  stm32f10x_rcc.o
    0x0800301c   0x0800301c   0x000000d4   Code   RO          696    i.RCC_GetClocksFreq  stm32f10x_rcc.o
    0x080030f0   0x080030f0   0x00000008   Code   RO         1095    i.SetSysClock       system_stm32f10x.o
    0x080030f8   0x080030f8   0x000000e0   Code   RO         1096    i.SetSysClockTo72   system_stm32f10x.o
    0x080031d8   0x080031d8   0x000000a4   Code   RO         1097    i.SystemCoreClockUpdate  system_stm32f10x.o
    0x0800327c   0x0800327c   0x00000060   Code   RO         1098    i.SystemInit        system_stm32f10x.o
    0x080032dc   0x080032dc   0x00000028   Code   RO          171    i.USART1_IRQHandler  usart.o
    0x08003304   0x08003304   0x00000028   Code   RO          172    i.USART2_IRQHandler  usart.o
    0x0800332c   0x0800332c   0x00000028   Code   RO          173    i.USART3_IRQHandler  usart.o
    0x08003354   0x08003354   0x0000001e   Code   RO          897    i.USART_ClearITPendingBit  stm32f10x_usart.o
    0x08003372   0x08003372   0x00000022   Code   RO          898    i.USART_ClockInit   stm32f10x_usart.o
    0x08003394   0x08003394   0x00000018   Code   RO          900    i.USART_Cmd         stm32f10x_usart.o
    0x080033ac   0x080033ac   0x0000009c   Code   RO          902    i.USART_DeInit      stm32f10x_usart.o
    0x08003448   0x08003448   0x0000001a   Code   RO          903    i.USART_GetFlagStatus  stm32f10x_usart.o
    0x08003462   0x08003462   0x0000004a   Code   RO          906    i.USART_ITConfig    stm32f10x_usart.o
    0x080034ac   0x080034ac   0x000000d8   Code   RO          907    i.USART_Init        stm32f10x_usart.o
    0x08003584   0x08003584   0x0000000a   Code   RO          914    i.USART_ReceiveData  stm32f10x_usart.o
    0x0800358e   0x0800358e   0x00000008   Code   RO          917    i.USART_SendData    stm32f10x_usart.o
    0x08003596   0x08003596   0x00000002   PAD
    0x08003598   0x08003598   0x00000024   Code   RO            4    i._Z11main_threadPv  main.o
    0x080035bc   0x080035bc   0x00000030   Code   RO            5    i._Z13send_tri_dataPv  main.o
    0x080035ec   0x080035ec   0x00000074   Code   RO          292    i._ZN5SvVis5SvVis4initERN6serial9interfaceEjj  svvis.o
    0x08003660   0x08003660   0x00000016   Code   RO          294    i._ZN5SvVis5SvVis8recv_msgERNS_9message_tEj  svvis.o
    0x08003676   0x08003676   0x00000032   Code   RO          295    i._ZN5SvVis5SvVis8send_i16Ehsj  svvis.o
    0x080036a8   0x080036a8   0x00000034   Code   RO          296    i._ZN5SvVis5SvVis8send_msgERNS_9message_tEj  svvis.o
    0x080036dc   0x080036dc   0x000000f2   Code   RO          248    i._ZN5SvVis5SvVis9func_recvEPv  svvis_threads.o
    0x080037ce   0x080037ce   0x00000056   Code   RO          249    i._ZN5SvVis5SvVis9func_sendEPv  svvis_threads.o
    0x08003824   0x08003824   0x00000026   Code   RO          250    i._ZN5SvVis8chid2lenEh  svvis_threads.o
    0x0800384a   0x0800384a   0x0000002a   Code   RO          174    i._ZN5usart5usart12put_blockingEPKvj  usart.o
    0x08003874   0x08003874   0x00000014   Code   RO          175    i._ZN5usart5usart3popERhj  usart.o
    0x08003888   0x08003888   0x00000026   Code   RO          176    i._ZN5usart5usart3putEhj  usart.o
    0x080038ae   0x080038ae   0x00000002   PAD
    0x080038b0   0x080038b0   0x000001d0   Code   RO          177    i._ZN5usart5usart4initEP13USART_TypeDefjj  usart.o
    0x08003a80   0x08003a80   0x00000038   Code   RO          118    i._ZN9ring_pipe3popERhj  ring_pipe.o
    0x08003ab8   0x08003ab8   0x00000040   Code   RO          119    i._ZN9ring_pipe3putEhj  ring_pipe.o
    0x08003af8   0x08003af8   0x00000048   Code   RO          120    i._ZN9ring_pipe4initEj  ring_pipe.o
    0x08003b40   0x08003b40   0x0000001a   Code   RO          121    i._ZN9ring_pipe6accessEPh  ring_pipe.o
    0x08003b5a   0x08003b5a   0x00000006   Code   RO         1689    i.__cxa_pure_virtual  cpprt_w.l(pure_virt.o)
    0x08003b60   0x08003b60   0x00000024   Code   RO            6    i.__sti___8_main_cpp_usart1  main.o
    0x08003b84   0x08003b84   0x00000016   Code   RO          355    i._mutex_acquire    rtx_lib.o
    0x08003b9a   0x08003b9a   0x0000000c   Code   RO          356    i._mutex_free       rtx_lib.o
    0x08003ba6   0x08003ba6   0x00000020   Code   RO          357    i._mutex_initialize  rtx_lib.o
    0x08003bc6   0x08003bc6   0x00000012   Code   RO          358    i._mutex_release    rtx_lib.o
    0x08003bd8   0x08003bd8   0x00000008   Code   RO          359    i._platform_post_stackheap_init  rtx_lib.o
    0x08003be0   0x08003be0   0x00000050   Code   RO            7    i.main              main.o
    0x08003c30   0x08003c30   0x00000020   Code   RO          447    i.osRtxErrorNotify  rtx_config.o
    0x08003c50   0x08003c50   0x00000004   Code   RO          448    i.osRtxIdleThread   rtx_config.o
    0x08003c54   0x08003c54   0x00000024   Code   RO          360    i.os_kernel_is_active  rtx_lib.o
    0x08003c78   0x08003c78   0x00000014   Data   RO           13    .constdata          main.o
    0x08003c8c   0x08003c8c   0x00000064   Data   RO          366    .constdata          rtx_lib.o
    0x08003cf0   0x08003cf0   0x00000001   Data   RO         1577    .constdata          RTX_CM3.lib(irq_cm3.o)
    0x08003cf1   0x08003cf1   0x00000003   PAD
    0x08003cf4   0x08003cf4   0x00000018   Data   RO          239    .constdata__ZTVN5usart5usartE  usart.o
    0x08003d0c   0x08003d0c   0x00000018   Data   RO           47    .constdata__ZTVN6serial9interfaceE  main.o
    0x08003d24   0x08003d24   0x00000068   Data   RO          368    .rodata             rtx_lib.o
    0x08003d8c   0x08003d8c   0x0000000b   Data   RO         1191    .rodata.str1.4      RTX_CM3.lib(rtx_kernel.o)
    0x08003d97   0x08003d97   0x00000001   PAD
    0x08003d98   0x08003d98   0x00000020   Data   RO         2103    Region$$Table       anon$$obj.o
    0x08003db8   0x08003db8   0x00000004   Data   RO           14    .init_array         main.o
    0x08003dbc   0x08003db8   0x00000000   Data   RO         1684    .init_array         c_w.l(init_aeabi.o)


    Execution Region ER_RW (Exec base: 0x20000000, Load base: 0x08003dbc, Size: 0x000015b8, Max: 0xffffffff, ABSOLUTE, COMPRESSED[0x00000050])

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000000   COMPRESSED   0x00001230   Data   RW          361    .bss.os             rtx_lib.o
    0x20001230   COMPRESSED   0x00000034   Data   RW          362    .bss.os.msgqueue.cb  rtx_lib.o
    0x20001264   COMPRESSED   0x00000050   Data   RW          363    .bss.os.msgqueue.mem  rtx_lib.o
    0x200012b4   COMPRESSED   0x00000088   Data   RW          364    .bss.os.thread.cb   rtx_lib.o
    0x2000133c   COMPRESSED   0x00000004   PAD
    0x20001340   COMPRESSED   0x00000190   Data   RW          365    .bss.os.thread.stack  rtx_lib.o
    0x200014d0   COMPRESSED   0x0000000c   Data   RW          188    .data               usart.o
    0x200014dc   COMPRESSED   0x00000005   Data   RW          367    .data               rtx_lib.o
    0x200014e1   COMPRESSED   0x00000014   Data   RW          716    .data               stm32f10x_rcc.o
    0x200014f5   COMPRESSED   0x00000003   PAD
    0x200014f8   COMPRESSED   0x00000014   Data   RW         1099    .data               system_stm32f10x.o
    0x2000150c   COMPRESSED   0x00000004   PAD
    0x20001510   COMPRESSED   0x000000a8   Data   RW         1192    .data.os            RTX_CM3.lib(rtx_kernel.o)


    Execution Region ER_ZI (Exec base: 0x200015b8, Load base: 0x08003e0c, Size: 0x00000710, Max: 0xffffffff, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x200015b8        -       0x00000050   Zero   RW           12    .bss                main.o
    0x20001608        -       0x00000060   Zero   RW          187    .bss                usart.o
    0x20001668        -       0x00000060   Zero   RW         1992    .bss                c_w.l(libspace.o)
    0x200016c8        -       0x00000200   Zero   RW         1086    HEAP                startup_stm32f10x_md.o
    0x200018c8        -       0x00000400   Zero   RW         1085    STACK               startup_stm32f10x_md.o


==============================================================================

Image component sizes


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Object Name

       200         54         48          0         80     232948   main.o
       112         12          0          0          0     228200   misc.o
       218          0          0          0          0       8304   ring_pipe.o
        36          6          0          0          0        973   rtx_config.o
       128          4        204       5329          0      19488   rtx_lib.o
        64         26        236          0       1536        816   startup_stm32f10x_md.o
       278          0          0          0          0       2080   stm32f10x_gpio.o
       340         44          0         20          0       5816   stm32f10x_rcc.o
       578         28          0          0          0       7668   stm32f10x_usart.o
       240          8          0          0          0       3384   svvis.o
       366          0          0          0          0       5157   svvis_threads.o
       492         50          0         20          0       2893   system_stm32f10x.o
       684         68         24         12         96       6340   usart.o

    ----------------------------------------------------------------------
      3740        300        544       5392       1712     524067   Object Totals
         0          0         32          0          0          0   (incl. Generated)
         4          0          0         11          0          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Member Name

       136         10          1          0          0        480   irq_cm3.o
        56          0          0          0          0       2892   rtx_delay.o
      1240          0          0          0          0      13813   rtx_evflags.o
       768          0         11        168          0      17856   rtx_kernel.o
       246          0          0          0          0       1937   rtx_memory.o
      1164          0          0          0          0      17021   rtx_mempool.o
      1932          0          0          0          0      18585   rtx_msgqueue.o
       928          0          0          0          0       8779   rtx_mutex.o
       674          0          0          0          0      10278   rtx_semaphore.o
       492          8          0          0          0       8155   rtx_system.o
      2686          0          0          0          0      40733   rtx_thread.o
       170          0          0          0          0       8770   rtx_timer.o
        90          0          0          0          0          0   __dczerorl2.o
         8          0          0          0          0         68   __main.o
         0          0          0          0          0          0   __rtentry.o
        20          0          0          0          0          0   __rtentry2.o
         6          0          0          0          0          0   __rtentry4.o
        52          8          0          0          0          0   __scatter.o
        28          0          0          0          0          0   __scatter_zi.o
        16          0          0          0          0         68   aeabi_memset4.o
        10          0          0          0          0         68   defsig_exit.o
        50          0          0          0          0         88   defsig_general.o
        48         34          0          0          0         76   defsig_pvfn_inner.o
        14          0          0          0          0         80   defsig_pvfn_outer.o
        18          0          0          0          0         80   exit.o
         6          0          0          0          0        152   heapauxi.o
         0          0          0          0          0          0   indicate_semi.o
        36         10          0          0          0         80   init_aeabi.o
         2          0          0          0          0          0   libinit.o
         6          0          0          0          0          0   libinit2.o
         2          0          0          0          0          0   libshutdown.o
         2          0          0          0          0          0   libshutdown2.o
         8          4          0          0         96         68   libspace.o
        68          0          0          0          0         68   rt_memclr.o
        78          0          0          0          0         80   rt_memclr_w.o
       138          0          0          0          0         68   rt_memcpy_v6.o
       100          0          0          0          0         80   rt_memcpy_w.o
         2          0          0          0          0          0   rtexit.o
        10          0          0          0          0          0   rtexit2.o
        12          4          0          0          0         68   sys_exit.o
        74          0          0          0          0         80   sys_stackheap_outer.o
        14          0          0          0          0         76   sys_wrch.o
         2          0          0          0          0         68   use_no_semi.o
         6          0          0          0          0         68   pure_virt.o

    ----------------------------------------------------------------------
     11504         78         16        168         96     150783   Library Totals
        86          0          4          0          0          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Name

     10492         18         12        168          0     149299   RTX_CM3.lib
       920         60          0          0         96       1416   c_w.l
         6          0          0          0          0         68   cpprt_w.l

    ----------------------------------------------------------------------
     11504         78         16        168         96     150783   Library Totals

    ----------------------------------------------------------------------

==============================================================================


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   

     15244        378        560       5560       1808     671410   Grand Totals
     15244        378        560         80       1808     671410   ELF Image Totals (compressed)
     15244        378        560         80          0          0   ROM Totals

==============================================================================

    Total RO  Size (Code + RO Data)                15804 (  15.43kB)
    Total RW  Size (RW Data + ZI Data)              7368 (   7.20kB)
    Total ROM Size (Code + RO Data + RW Data)      15884 (  15.51kB)

==============================================================================

